                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Fri Apr 27 13:26:54 2018
                              5 ;--------------------------------------------------------
                              6 	.module lcd
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _lcd_print_number
                             13 	.globl _P5_7
                             14 	.globl _P5_6
                             15 	.globl _P5_5
                             16 	.globl _P5_4
                             17 	.globl _P5_3
                             18 	.globl _P5_2
                             19 	.globl _P5_1
                             20 	.globl _P5_0
                             21 	.globl _P4_7
                             22 	.globl _P4_6
                             23 	.globl _P4_5
                             24 	.globl _P4_4
                             25 	.globl _P4_3
                             26 	.globl _P4_2
                             27 	.globl _P4_1
                             28 	.globl _P4_0
                             29 	.globl _PX0L
                             30 	.globl _PT0L
                             31 	.globl _PX1L
                             32 	.globl _PT1L
                             33 	.globl _PLS
                             34 	.globl _PT2L
                             35 	.globl _PPCL
                             36 	.globl _EC
                             37 	.globl _CCF0
                             38 	.globl _CCF1
                             39 	.globl _CCF2
                             40 	.globl _CCF3
                             41 	.globl _CCF4
                             42 	.globl _CR
                             43 	.globl _CF
                             44 	.globl _TF2
                             45 	.globl _EXF2
                             46 	.globl _RCLK
                             47 	.globl _TCLK
                             48 	.globl _EXEN2
                             49 	.globl _TR2
                             50 	.globl _C_T2
                             51 	.globl _CP_RL2
                             52 	.globl _T2CON_7
                             53 	.globl _T2CON_6
                             54 	.globl _T2CON_5
                             55 	.globl _T2CON_4
                             56 	.globl _T2CON_3
                             57 	.globl _T2CON_2
                             58 	.globl _T2CON_1
                             59 	.globl _T2CON_0
                             60 	.globl _PT2
                             61 	.globl _ET2
                             62 	.globl _CY
                             63 	.globl _AC
                             64 	.globl _F0
                             65 	.globl _RS1
                             66 	.globl _RS0
                             67 	.globl _OV
                             68 	.globl _F1
                             69 	.globl _P
                             70 	.globl _PS
                             71 	.globl _PT1
                             72 	.globl _PX1
                             73 	.globl _PT0
                             74 	.globl _PX0
                             75 	.globl _RD
                             76 	.globl _WR
                             77 	.globl _T1
                             78 	.globl _T0
                             79 	.globl _INT1
                             80 	.globl _INT0
                             81 	.globl _TXD
                             82 	.globl _RXD
                             83 	.globl _P3_7
                             84 	.globl _P3_6
                             85 	.globl _P3_5
                             86 	.globl _P3_4
                             87 	.globl _P3_3
                             88 	.globl _P3_2
                             89 	.globl _P3_1
                             90 	.globl _P3_0
                             91 	.globl _EA
                             92 	.globl _ES
                             93 	.globl _ET1
                             94 	.globl _EX1
                             95 	.globl _ET0
                             96 	.globl _EX0
                             97 	.globl _P2_7
                             98 	.globl _P2_6
                             99 	.globl _P2_5
                            100 	.globl _P2_4
                            101 	.globl _P2_3
                            102 	.globl _P2_2
                            103 	.globl _P2_1
                            104 	.globl _P2_0
                            105 	.globl _SM0
                            106 	.globl _SM1
                            107 	.globl _SM2
                            108 	.globl _REN
                            109 	.globl _TB8
                            110 	.globl _RB8
                            111 	.globl _TI
                            112 	.globl _RI
                            113 	.globl _P1_7
                            114 	.globl _P1_6
                            115 	.globl _P1_5
                            116 	.globl _P1_4
                            117 	.globl _P1_3
                            118 	.globl _P1_2
                            119 	.globl _P1_1
                            120 	.globl _P1_0
                            121 	.globl _TF1
                            122 	.globl _TR1
                            123 	.globl _TF0
                            124 	.globl _TR0
                            125 	.globl _IE1
                            126 	.globl _IT1
                            127 	.globl _IE0
                            128 	.globl _IT0
                            129 	.globl _P0_7
                            130 	.globl _P0_6
                            131 	.globl _P0_5
                            132 	.globl _P0_4
                            133 	.globl _P0_3
                            134 	.globl _P0_2
                            135 	.globl _P0_1
                            136 	.globl _P0_0
                            137 	.globl _CKCON0
                            138 	.globl _CKRL
                            139 	.globl _EECON
                            140 	.globl _KBF
                            141 	.globl _KBE
                            142 	.globl _KBLS
                            143 	.globl _BRL
                            144 	.globl _BDRCON
                            145 	.globl _T2MOD
                            146 	.globl _SPDAT
                            147 	.globl _SPSTA
                            148 	.globl _SPCON
                            149 	.globl _SADEN
                            150 	.globl _SADDR
                            151 	.globl _WDTPRG
                            152 	.globl _WDTRST
                            153 	.globl _P5
                            154 	.globl _P4
                            155 	.globl _IPH1
                            156 	.globl _IPL1
                            157 	.globl _IPH0
                            158 	.globl _IPL0
                            159 	.globl _IEN1
                            160 	.globl _IEN0
                            161 	.globl _CMOD
                            162 	.globl _CL
                            163 	.globl _CH
                            164 	.globl _CCON
                            165 	.globl _CCAPM4
                            166 	.globl _CCAPM3
                            167 	.globl _CCAPM2
                            168 	.globl _CCAPM1
                            169 	.globl _CCAPM0
                            170 	.globl _CCAP4L
                            171 	.globl _CCAP3L
                            172 	.globl _CCAP2L
                            173 	.globl _CCAP1L
                            174 	.globl _CCAP0L
                            175 	.globl _CCAP4H
                            176 	.globl _CCAP3H
                            177 	.globl _CCAP2H
                            178 	.globl _CCAP1H
                            179 	.globl _CCAP0H
                            180 	.globl _AUXR1
                            181 	.globl _AUXR
                            182 	.globl _TH2
                            183 	.globl _TL2
                            184 	.globl _RCAP2H
                            185 	.globl _RCAP2L
                            186 	.globl _T2CON
                            187 	.globl _B
                            188 	.globl _ACC
                            189 	.globl _PSW
                            190 	.globl _IP
                            191 	.globl _P3
                            192 	.globl _IE
                            193 	.globl _P2
                            194 	.globl _SBUF
                            195 	.globl _SCON
                            196 	.globl _P1
                            197 	.globl _TH1
                            198 	.globl _TH0
                            199 	.globl _TL1
                            200 	.globl _TL0
                            201 	.globl _TMOD
                            202 	.globl _TCON
                            203 	.globl _PCON
                            204 	.globl _DPH
                            205 	.globl _DPL
                            206 	.globl _SP
                            207 	.globl _P0
                            208 	.globl _lcd_go_to_x_y_PARM_2
                            209 	.globl _lcd_print_number_PARM_2
                            210 	.globl _time
                            211 	.globl _timer_on_off_flag
                            212 	.globl _lcd_current_row
                            213 	.globl _lcd_current_column
                            214 	.globl _loop
                            215 	.globl _lcd_init
                            216 	.globl _lcd_row_shifter
                            217 	.globl _lcd_busy_wait
                            218 	.globl _lcd_ddram_flush
                            219 	.globl _lcd_cgram_flush
                            220 	.globl _lcd_go_to_addr
                            221 	.globl _lcd_go_to_x_y
                            222 	.globl _lcd_command_write
                            223 	.globl _lcd_put_ch
                            224 	.globl _lcd_put_str
                            225 	.globl _lcd_clear
                            226 	.globl _lcd_custom_character_creation
                            227 	.globl _lcd_cu_boulder
                            228 ;--------------------------------------------------------
                            229 ; special function registers
                            230 ;--------------------------------------------------------
                            231 	.area RSEG    (DATA)
                    0080    232 G$P0$0$0 == 0x0080
                    0080    233 _P0	=	0x0080
                    0081    234 G$SP$0$0 == 0x0081
                    0081    235 _SP	=	0x0081
                    0082    236 G$DPL$0$0 == 0x0082
                    0082    237 _DPL	=	0x0082
                    0083    238 G$DPH$0$0 == 0x0083
                    0083    239 _DPH	=	0x0083
                    0087    240 G$PCON$0$0 == 0x0087
                    0087    241 _PCON	=	0x0087
                    0088    242 G$TCON$0$0 == 0x0088
                    0088    243 _TCON	=	0x0088
                    0089    244 G$TMOD$0$0 == 0x0089
                    0089    245 _TMOD	=	0x0089
                    008A    246 G$TL0$0$0 == 0x008a
                    008A    247 _TL0	=	0x008a
                    008B    248 G$TL1$0$0 == 0x008b
                    008B    249 _TL1	=	0x008b
                    008C    250 G$TH0$0$0 == 0x008c
                    008C    251 _TH0	=	0x008c
                    008D    252 G$TH1$0$0 == 0x008d
                    008D    253 _TH1	=	0x008d
                    0090    254 G$P1$0$0 == 0x0090
                    0090    255 _P1	=	0x0090
                    0098    256 G$SCON$0$0 == 0x0098
                    0098    257 _SCON	=	0x0098
                    0099    258 G$SBUF$0$0 == 0x0099
                    0099    259 _SBUF	=	0x0099
                    00A0    260 G$P2$0$0 == 0x00a0
                    00A0    261 _P2	=	0x00a0
                    00A8    262 G$IE$0$0 == 0x00a8
                    00A8    263 _IE	=	0x00a8
                    00B0    264 G$P3$0$0 == 0x00b0
                    00B0    265 _P3	=	0x00b0
                    00B8    266 G$IP$0$0 == 0x00b8
                    00B8    267 _IP	=	0x00b8
                    00D0    268 G$PSW$0$0 == 0x00d0
                    00D0    269 _PSW	=	0x00d0
                    00E0    270 G$ACC$0$0 == 0x00e0
                    00E0    271 _ACC	=	0x00e0
                    00F0    272 G$B$0$0 == 0x00f0
                    00F0    273 _B	=	0x00f0
                    00C8    274 G$T2CON$0$0 == 0x00c8
                    00C8    275 _T2CON	=	0x00c8
                    00CA    276 G$RCAP2L$0$0 == 0x00ca
                    00CA    277 _RCAP2L	=	0x00ca
                    00CB    278 G$RCAP2H$0$0 == 0x00cb
                    00CB    279 _RCAP2H	=	0x00cb
                    00CC    280 G$TL2$0$0 == 0x00cc
                    00CC    281 _TL2	=	0x00cc
                    00CD    282 G$TH2$0$0 == 0x00cd
                    00CD    283 _TH2	=	0x00cd
                    008E    284 G$AUXR$0$0 == 0x008e
                    008E    285 _AUXR	=	0x008e
                    00A2    286 G$AUXR1$0$0 == 0x00a2
                    00A2    287 _AUXR1	=	0x00a2
                    00FA    288 G$CCAP0H$0$0 == 0x00fa
                    00FA    289 _CCAP0H	=	0x00fa
                    00FB    290 G$CCAP1H$0$0 == 0x00fb
                    00FB    291 _CCAP1H	=	0x00fb
                    00FC    292 G$CCAP2H$0$0 == 0x00fc
                    00FC    293 _CCAP2H	=	0x00fc
                    00FD    294 G$CCAP3H$0$0 == 0x00fd
                    00FD    295 _CCAP3H	=	0x00fd
                    00FE    296 G$CCAP4H$0$0 == 0x00fe
                    00FE    297 _CCAP4H	=	0x00fe
                    00EA    298 G$CCAP0L$0$0 == 0x00ea
                    00EA    299 _CCAP0L	=	0x00ea
                    00EB    300 G$CCAP1L$0$0 == 0x00eb
                    00EB    301 _CCAP1L	=	0x00eb
                    00EC    302 G$CCAP2L$0$0 == 0x00ec
                    00EC    303 _CCAP2L	=	0x00ec
                    00ED    304 G$CCAP3L$0$0 == 0x00ed
                    00ED    305 _CCAP3L	=	0x00ed
                    00EE    306 G$CCAP4L$0$0 == 0x00ee
                    00EE    307 _CCAP4L	=	0x00ee
                    00DA    308 G$CCAPM0$0$0 == 0x00da
                    00DA    309 _CCAPM0	=	0x00da
                    00DB    310 G$CCAPM1$0$0 == 0x00db
                    00DB    311 _CCAPM1	=	0x00db
                    00DC    312 G$CCAPM2$0$0 == 0x00dc
                    00DC    313 _CCAPM2	=	0x00dc
                    00DD    314 G$CCAPM3$0$0 == 0x00dd
                    00DD    315 _CCAPM3	=	0x00dd
                    00DE    316 G$CCAPM4$0$0 == 0x00de
                    00DE    317 _CCAPM4	=	0x00de
                    00D8    318 G$CCON$0$0 == 0x00d8
                    00D8    319 _CCON	=	0x00d8
                    00F9    320 G$CH$0$0 == 0x00f9
                    00F9    321 _CH	=	0x00f9
                    00E9    322 G$CL$0$0 == 0x00e9
                    00E9    323 _CL	=	0x00e9
                    00D9    324 G$CMOD$0$0 == 0x00d9
                    00D9    325 _CMOD	=	0x00d9
                    00A8    326 G$IEN0$0$0 == 0x00a8
                    00A8    327 _IEN0	=	0x00a8
                    00B1    328 G$IEN1$0$0 == 0x00b1
                    00B1    329 _IEN1	=	0x00b1
                    00B8    330 G$IPL0$0$0 == 0x00b8
                    00B8    331 _IPL0	=	0x00b8
                    00B7    332 G$IPH0$0$0 == 0x00b7
                    00B7    333 _IPH0	=	0x00b7
                    00B2    334 G$IPL1$0$0 == 0x00b2
                    00B2    335 _IPL1	=	0x00b2
                    00B3    336 G$IPH1$0$0 == 0x00b3
                    00B3    337 _IPH1	=	0x00b3
                    00C0    338 G$P4$0$0 == 0x00c0
                    00C0    339 _P4	=	0x00c0
                    00E8    340 G$P5$0$0 == 0x00e8
                    00E8    341 _P5	=	0x00e8
                    00A6    342 G$WDTRST$0$0 == 0x00a6
                    00A6    343 _WDTRST	=	0x00a6
                    00A7    344 G$WDTPRG$0$0 == 0x00a7
                    00A7    345 _WDTPRG	=	0x00a7
                    00A9    346 G$SADDR$0$0 == 0x00a9
                    00A9    347 _SADDR	=	0x00a9
                    00B9    348 G$SADEN$0$0 == 0x00b9
                    00B9    349 _SADEN	=	0x00b9
                    00C3    350 G$SPCON$0$0 == 0x00c3
                    00C3    351 _SPCON	=	0x00c3
                    00C4    352 G$SPSTA$0$0 == 0x00c4
                    00C4    353 _SPSTA	=	0x00c4
                    00C5    354 G$SPDAT$0$0 == 0x00c5
                    00C5    355 _SPDAT	=	0x00c5
                    00C9    356 G$T2MOD$0$0 == 0x00c9
                    00C9    357 _T2MOD	=	0x00c9
                    009B    358 G$BDRCON$0$0 == 0x009b
                    009B    359 _BDRCON	=	0x009b
                    009A    360 G$BRL$0$0 == 0x009a
                    009A    361 _BRL	=	0x009a
                    009C    362 G$KBLS$0$0 == 0x009c
                    009C    363 _KBLS	=	0x009c
                    009D    364 G$KBE$0$0 == 0x009d
                    009D    365 _KBE	=	0x009d
                    009E    366 G$KBF$0$0 == 0x009e
                    009E    367 _KBF	=	0x009e
                    00D2    368 G$EECON$0$0 == 0x00d2
                    00D2    369 _EECON	=	0x00d2
                    0097    370 G$CKRL$0$0 == 0x0097
                    0097    371 _CKRL	=	0x0097
                    008F    372 G$CKCON0$0$0 == 0x008f
                    008F    373 _CKCON0	=	0x008f
                            374 ;--------------------------------------------------------
                            375 ; special function bits
                            376 ;--------------------------------------------------------
                            377 	.area RSEG    (DATA)
                    0080    378 G$P0_0$0$0 == 0x0080
                    0080    379 _P0_0	=	0x0080
                    0081    380 G$P0_1$0$0 == 0x0081
                    0081    381 _P0_1	=	0x0081
                    0082    382 G$P0_2$0$0 == 0x0082
                    0082    383 _P0_2	=	0x0082
                    0083    384 G$P0_3$0$0 == 0x0083
                    0083    385 _P0_3	=	0x0083
                    0084    386 G$P0_4$0$0 == 0x0084
                    0084    387 _P0_4	=	0x0084
                    0085    388 G$P0_5$0$0 == 0x0085
                    0085    389 _P0_5	=	0x0085
                    0086    390 G$P0_6$0$0 == 0x0086
                    0086    391 _P0_6	=	0x0086
                    0087    392 G$P0_7$0$0 == 0x0087
                    0087    393 _P0_7	=	0x0087
                    0088    394 G$IT0$0$0 == 0x0088
                    0088    395 _IT0	=	0x0088
                    0089    396 G$IE0$0$0 == 0x0089
                    0089    397 _IE0	=	0x0089
                    008A    398 G$IT1$0$0 == 0x008a
                    008A    399 _IT1	=	0x008a
                    008B    400 G$IE1$0$0 == 0x008b
                    008B    401 _IE1	=	0x008b
                    008C    402 G$TR0$0$0 == 0x008c
                    008C    403 _TR0	=	0x008c
                    008D    404 G$TF0$0$0 == 0x008d
                    008D    405 _TF0	=	0x008d
                    008E    406 G$TR1$0$0 == 0x008e
                    008E    407 _TR1	=	0x008e
                    008F    408 G$TF1$0$0 == 0x008f
                    008F    409 _TF1	=	0x008f
                    0090    410 G$P1_0$0$0 == 0x0090
                    0090    411 _P1_0	=	0x0090
                    0091    412 G$P1_1$0$0 == 0x0091
                    0091    413 _P1_1	=	0x0091
                    0092    414 G$P1_2$0$0 == 0x0092
                    0092    415 _P1_2	=	0x0092
                    0093    416 G$P1_3$0$0 == 0x0093
                    0093    417 _P1_3	=	0x0093
                    0094    418 G$P1_4$0$0 == 0x0094
                    0094    419 _P1_4	=	0x0094
                    0095    420 G$P1_5$0$0 == 0x0095
                    0095    421 _P1_5	=	0x0095
                    0096    422 G$P1_6$0$0 == 0x0096
                    0096    423 _P1_6	=	0x0096
                    0097    424 G$P1_7$0$0 == 0x0097
                    0097    425 _P1_7	=	0x0097
                    0098    426 G$RI$0$0 == 0x0098
                    0098    427 _RI	=	0x0098
                    0099    428 G$TI$0$0 == 0x0099
                    0099    429 _TI	=	0x0099
                    009A    430 G$RB8$0$0 == 0x009a
                    009A    431 _RB8	=	0x009a
                    009B    432 G$TB8$0$0 == 0x009b
                    009B    433 _TB8	=	0x009b
                    009C    434 G$REN$0$0 == 0x009c
                    009C    435 _REN	=	0x009c
                    009D    436 G$SM2$0$0 == 0x009d
                    009D    437 _SM2	=	0x009d
                    009E    438 G$SM1$0$0 == 0x009e
                    009E    439 _SM1	=	0x009e
                    009F    440 G$SM0$0$0 == 0x009f
                    009F    441 _SM0	=	0x009f
                    00A0    442 G$P2_0$0$0 == 0x00a0
                    00A0    443 _P2_0	=	0x00a0
                    00A1    444 G$P2_1$0$0 == 0x00a1
                    00A1    445 _P2_1	=	0x00a1
                    00A2    446 G$P2_2$0$0 == 0x00a2
                    00A2    447 _P2_2	=	0x00a2
                    00A3    448 G$P2_3$0$0 == 0x00a3
                    00A3    449 _P2_3	=	0x00a3
                    00A4    450 G$P2_4$0$0 == 0x00a4
                    00A4    451 _P2_4	=	0x00a4
                    00A5    452 G$P2_5$0$0 == 0x00a5
                    00A5    453 _P2_5	=	0x00a5
                    00A6    454 G$P2_6$0$0 == 0x00a6
                    00A6    455 _P2_6	=	0x00a6
                    00A7    456 G$P2_7$0$0 == 0x00a7
                    00A7    457 _P2_7	=	0x00a7
                    00A8    458 G$EX0$0$0 == 0x00a8
                    00A8    459 _EX0	=	0x00a8
                    00A9    460 G$ET0$0$0 == 0x00a9
                    00A9    461 _ET0	=	0x00a9
                    00AA    462 G$EX1$0$0 == 0x00aa
                    00AA    463 _EX1	=	0x00aa
                    00AB    464 G$ET1$0$0 == 0x00ab
                    00AB    465 _ET1	=	0x00ab
                    00AC    466 G$ES$0$0 == 0x00ac
                    00AC    467 _ES	=	0x00ac
                    00AF    468 G$EA$0$0 == 0x00af
                    00AF    469 _EA	=	0x00af
                    00B0    470 G$P3_0$0$0 == 0x00b0
                    00B0    471 _P3_0	=	0x00b0
                    00B1    472 G$P3_1$0$0 == 0x00b1
                    00B1    473 _P3_1	=	0x00b1
                    00B2    474 G$P3_2$0$0 == 0x00b2
                    00B2    475 _P3_2	=	0x00b2
                    00B3    476 G$P3_3$0$0 == 0x00b3
                    00B3    477 _P3_3	=	0x00b3
                    00B4    478 G$P3_4$0$0 == 0x00b4
                    00B4    479 _P3_4	=	0x00b4
                    00B5    480 G$P3_5$0$0 == 0x00b5
                    00B5    481 _P3_5	=	0x00b5
                    00B6    482 G$P3_6$0$0 == 0x00b6
                    00B6    483 _P3_6	=	0x00b6
                    00B7    484 G$P3_7$0$0 == 0x00b7
                    00B7    485 _P3_7	=	0x00b7
                    00B0    486 G$RXD$0$0 == 0x00b0
                    00B0    487 _RXD	=	0x00b0
                    00B1    488 G$TXD$0$0 == 0x00b1
                    00B1    489 _TXD	=	0x00b1
                    00B2    490 G$INT0$0$0 == 0x00b2
                    00B2    491 _INT0	=	0x00b2
                    00B3    492 G$INT1$0$0 == 0x00b3
                    00B3    493 _INT1	=	0x00b3
                    00B4    494 G$T0$0$0 == 0x00b4
                    00B4    495 _T0	=	0x00b4
                    00B5    496 G$T1$0$0 == 0x00b5
                    00B5    497 _T1	=	0x00b5
                    00B6    498 G$WR$0$0 == 0x00b6
                    00B6    499 _WR	=	0x00b6
                    00B7    500 G$RD$0$0 == 0x00b7
                    00B7    501 _RD	=	0x00b7
                    00B8    502 G$PX0$0$0 == 0x00b8
                    00B8    503 _PX0	=	0x00b8
                    00B9    504 G$PT0$0$0 == 0x00b9
                    00B9    505 _PT0	=	0x00b9
                    00BA    506 G$PX1$0$0 == 0x00ba
                    00BA    507 _PX1	=	0x00ba
                    00BB    508 G$PT1$0$0 == 0x00bb
                    00BB    509 _PT1	=	0x00bb
                    00BC    510 G$PS$0$0 == 0x00bc
                    00BC    511 _PS	=	0x00bc
                    00D0    512 G$P$0$0 == 0x00d0
                    00D0    513 _P	=	0x00d0
                    00D1    514 G$F1$0$0 == 0x00d1
                    00D1    515 _F1	=	0x00d1
                    00D2    516 G$OV$0$0 == 0x00d2
                    00D2    517 _OV	=	0x00d2
                    00D3    518 G$RS0$0$0 == 0x00d3
                    00D3    519 _RS0	=	0x00d3
                    00D4    520 G$RS1$0$0 == 0x00d4
                    00D4    521 _RS1	=	0x00d4
                    00D5    522 G$F0$0$0 == 0x00d5
                    00D5    523 _F0	=	0x00d5
                    00D6    524 G$AC$0$0 == 0x00d6
                    00D6    525 _AC	=	0x00d6
                    00D7    526 G$CY$0$0 == 0x00d7
                    00D7    527 _CY	=	0x00d7
                    00AD    528 G$ET2$0$0 == 0x00ad
                    00AD    529 _ET2	=	0x00ad
                    00BD    530 G$PT2$0$0 == 0x00bd
                    00BD    531 _PT2	=	0x00bd
                    00C8    532 G$T2CON_0$0$0 == 0x00c8
                    00C8    533 _T2CON_0	=	0x00c8
                    00C9    534 G$T2CON_1$0$0 == 0x00c9
                    00C9    535 _T2CON_1	=	0x00c9
                    00CA    536 G$T2CON_2$0$0 == 0x00ca
                    00CA    537 _T2CON_2	=	0x00ca
                    00CB    538 G$T2CON_3$0$0 == 0x00cb
                    00CB    539 _T2CON_3	=	0x00cb
                    00CC    540 G$T2CON_4$0$0 == 0x00cc
                    00CC    541 _T2CON_4	=	0x00cc
                    00CD    542 G$T2CON_5$0$0 == 0x00cd
                    00CD    543 _T2CON_5	=	0x00cd
                    00CE    544 G$T2CON_6$0$0 == 0x00ce
                    00CE    545 _T2CON_6	=	0x00ce
                    00CF    546 G$T2CON_7$0$0 == 0x00cf
                    00CF    547 _T2CON_7	=	0x00cf
                    00C8    548 G$CP_RL2$0$0 == 0x00c8
                    00C8    549 _CP_RL2	=	0x00c8
                    00C9    550 G$C_T2$0$0 == 0x00c9
                    00C9    551 _C_T2	=	0x00c9
                    00CA    552 G$TR2$0$0 == 0x00ca
                    00CA    553 _TR2	=	0x00ca
                    00CB    554 G$EXEN2$0$0 == 0x00cb
                    00CB    555 _EXEN2	=	0x00cb
                    00CC    556 G$TCLK$0$0 == 0x00cc
                    00CC    557 _TCLK	=	0x00cc
                    00CD    558 G$RCLK$0$0 == 0x00cd
                    00CD    559 _RCLK	=	0x00cd
                    00CE    560 G$EXF2$0$0 == 0x00ce
                    00CE    561 _EXF2	=	0x00ce
                    00CF    562 G$TF2$0$0 == 0x00cf
                    00CF    563 _TF2	=	0x00cf
                    00DF    564 G$CF$0$0 == 0x00df
                    00DF    565 _CF	=	0x00df
                    00DE    566 G$CR$0$0 == 0x00de
                    00DE    567 _CR	=	0x00de
                    00DC    568 G$CCF4$0$0 == 0x00dc
                    00DC    569 _CCF4	=	0x00dc
                    00DB    570 G$CCF3$0$0 == 0x00db
                    00DB    571 _CCF3	=	0x00db
                    00DA    572 G$CCF2$0$0 == 0x00da
                    00DA    573 _CCF2	=	0x00da
                    00D9    574 G$CCF1$0$0 == 0x00d9
                    00D9    575 _CCF1	=	0x00d9
                    00D8    576 G$CCF0$0$0 == 0x00d8
                    00D8    577 _CCF0	=	0x00d8
                    00AE    578 G$EC$0$0 == 0x00ae
                    00AE    579 _EC	=	0x00ae
                    00BE    580 G$PPCL$0$0 == 0x00be
                    00BE    581 _PPCL	=	0x00be
                    00BD    582 G$PT2L$0$0 == 0x00bd
                    00BD    583 _PT2L	=	0x00bd
                    00BC    584 G$PLS$0$0 == 0x00bc
                    00BC    585 _PLS	=	0x00bc
                    00BB    586 G$PT1L$0$0 == 0x00bb
                    00BB    587 _PT1L	=	0x00bb
                    00BA    588 G$PX1L$0$0 == 0x00ba
                    00BA    589 _PX1L	=	0x00ba
                    00B9    590 G$PT0L$0$0 == 0x00b9
                    00B9    591 _PT0L	=	0x00b9
                    00B8    592 G$PX0L$0$0 == 0x00b8
                    00B8    593 _PX0L	=	0x00b8
                    00C0    594 G$P4_0$0$0 == 0x00c0
                    00C0    595 _P4_0	=	0x00c0
                    00C1    596 G$P4_1$0$0 == 0x00c1
                    00C1    597 _P4_1	=	0x00c1
                    00C2    598 G$P4_2$0$0 == 0x00c2
                    00C2    599 _P4_2	=	0x00c2
                    00C3    600 G$P4_3$0$0 == 0x00c3
                    00C3    601 _P4_3	=	0x00c3
                    00C4    602 G$P4_4$0$0 == 0x00c4
                    00C4    603 _P4_4	=	0x00c4
                    00C5    604 G$P4_5$0$0 == 0x00c5
                    00C5    605 _P4_5	=	0x00c5
                    00C6    606 G$P4_6$0$0 == 0x00c6
                    00C6    607 _P4_6	=	0x00c6
                    00C7    608 G$P4_7$0$0 == 0x00c7
                    00C7    609 _P4_7	=	0x00c7
                    00E8    610 G$P5_0$0$0 == 0x00e8
                    00E8    611 _P5_0	=	0x00e8
                    00E9    612 G$P5_1$0$0 == 0x00e9
                    00E9    613 _P5_1	=	0x00e9
                    00EA    614 G$P5_2$0$0 == 0x00ea
                    00EA    615 _P5_2	=	0x00ea
                    00EB    616 G$P5_3$0$0 == 0x00eb
                    00EB    617 _P5_3	=	0x00eb
                    00EC    618 G$P5_4$0$0 == 0x00ec
                    00EC    619 _P5_4	=	0x00ec
                    00ED    620 G$P5_5$0$0 == 0x00ed
                    00ED    621 _P5_5	=	0x00ed
                    00EE    622 G$P5_6$0$0 == 0x00ee
                    00EE    623 _P5_6	=	0x00ee
                    00EF    624 G$P5_7$0$0 == 0x00ef
                    00EF    625 _P5_7	=	0x00ef
                            626 ;--------------------------------------------------------
                            627 ; overlayable register banks
                            628 ;--------------------------------------------------------
                            629 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     630 	.ds 8
                            631 ;--------------------------------------------------------
                            632 ; internal ram data
                            633 ;--------------------------------------------------------
                            634 	.area DSEG    (DATA)
                    0000    635 Llcd_print_number$sloc0$1$0==.
   0000                     636 _lcd_print_number_sloc0_1_0:
   0000                     637 	.ds 1
                    0001    638 Llcd_print_number$sloc1$1$0==.
   0001                     639 _lcd_print_number_sloc1_1_0:
   0001                     640 	.ds 1
                    0002    641 Llcd_print_number$sloc3$1$0==.
   0002                     642 _lcd_print_number_sloc3_1_0:
   0002                     643 	.ds 4
                    0006    644 Llcd_cu_boulder$sloc0$1$0==.
   0006                     645 _lcd_cu_boulder_sloc0_1_0:
   0006                     646 	.ds 1
                    0007    647 Llcd_cu_boulder$sloc1$1$0==.
   0007                     648 _lcd_cu_boulder_sloc1_1_0:
   0007                     649 	.ds 1
                            650 ;--------------------------------------------------------
                            651 ; overlayable items in internal ram 
                            652 ;--------------------------------------------------------
                            653 	.area OSEG    (OVR,DATA)
                            654 ;--------------------------------------------------------
                            655 ; indirectly addressable internal ram data
                            656 ;--------------------------------------------------------
                            657 	.area ISEG    (DATA)
                            658 ;--------------------------------------------------------
                            659 ; bit data
                            660 ;--------------------------------------------------------
                            661 	.area BSEG    (BIT)
                            662 ;--------------------------------------------------------
                            663 ; paged external ram data
                            664 ;--------------------------------------------------------
                            665 	.area PSEG    (PAG,XDATA)
                            666 ;--------------------------------------------------------
                            667 ; external ram data
                            668 ;--------------------------------------------------------
                            669 	.area XSEG    (XDATA)
                    0000    670 G$loop$0$0==.
   0000                     671 _loop::
   0000                     672 	.ds 1
                    0001    673 G$lcd_current_column$0$0==.
   0001                     674 _lcd_current_column::
   0001                     675 	.ds 1
                    0002    676 G$lcd_current_row$0$0==.
   0002                     677 _lcd_current_row::
   0002                     678 	.ds 1
                    0003    679 G$timer_on_off_flag$0$0==.
   0003                     680 _timer_on_off_flag::
   0003                     681 	.ds 1
                    0004    682 G$time$0$0==.
   0004                     683 _time::
   0004                     684 	.ds 4
                    0008    685 Llcd_print_number$display_width$1$1==.
   0008                     686 _lcd_print_number_PARM_2:
   0008                     687 	.ds 1
                    0009    688 Llcd_print_number$number$1$1==.
   0009                     689 _lcd_print_number_number_1_1:
   0009                     690 	.ds 4
                    000D    691 Llcd_print_number$temp_ascii_store$1$1==.
   000D                     692 _lcd_print_number_temp_ascii_store_1_1:
   000D                     693 	.ds 10
                    0017    694 Llcd_print_number$counter$1$1==.
   0017                     695 _lcd_print_number_counter_1_1:
   0017                     696 	.ds 1
                    0018    697 Llcd_row_shifter$lcd_row_base_address$1$1==.
   0018                     698 _lcd_row_shifter_lcd_row_base_address_1_1:
   0018                     699 	.ds 4
                    001C    700 Llcd_ddram_flush$ddram_flush_txt$1$1==.
   001C                     701 _lcd_ddram_flush_ddram_flush_txt_1_1:
   001C                     702 	.ds 16
                    002C    703 Llcd_cgram_flush$cgram_flush_txt$1$1==.
   002C                     704 _lcd_cgram_flush_cgram_flush_txt_1_1:
   002C                     705 	.ds 16
                    003C    706 Llcd_go_to_addr$address$1$1==.
   003C                     707 _lcd_go_to_addr_address_1_1:
   003C                     708 	.ds 1
                    003D    709 Llcd_go_to_addr$invalid_address_txt$1$1==.
   003D                     710 _lcd_go_to_addr_invalid_address_txt_1_1:
   003D                     711 	.ds 18
                    004F    712 Llcd_go_to_x_y$column$1$1==.
   004F                     713 _lcd_go_to_x_y_PARM_2:
   004F                     714 	.ds 1
                    0050    715 Llcd_go_to_x_y$row$1$1==.
   0050                     716 _lcd_go_to_x_y_row_1_1:
   0050                     717 	.ds 1
                    0051    718 Llcd_go_to_x_y$invalid_row_txt$1$1==.
   0051                     719 _lcd_go_to_x_y_invalid_row_txt_1_1:
   0051                     720 	.ds 21
                    0066    721 Llcd_go_to_x_y$invalid_column_txt$1$1==.
   0066                     722 _lcd_go_to_x_y_invalid_column_txt_1_1:
   0066                     723 	.ds 24
                    007E    724 Llcd_go_to_x_y$lcd_row_base_address$1$1==.
   007E                     725 _lcd_go_to_x_y_lcd_row_base_address_1_1:
   007E                     726 	.ds 4
                    0082    727 Llcd_command_write$data_byte$1$1==.
   0082                     728 _lcd_command_write_data_byte_1_1:
   0082                     729 	.ds 1
                    0083    730 Llcd_put_ch$data_byte$1$1==.
   0083                     731 _lcd_put_ch_data_byte_1_1:
   0083                     732 	.ds 1
                    0084    733 Llcd_put_str$text_ptr$1$1==.
   0084                     734 _lcd_put_str_text_ptr_1_1:
   0084                     735 	.ds 2
                    0086    736 Llcd_custom_character_creation$number_of_custom_characters$1$1==.
   0086                     737 _lcd_custom_character_creation_number_of_custom_characters_1_1:
   0086                     738 	.ds 1
                    0087    739 Llcd_custom_character_creation$Base_query_txt$1$1==.
   0087                     740 _lcd_custom_character_creation_Base_query_txt_1_1:
   0087                     741 	.ds 32
                    00A7    742 Llcd_custom_character_creation$character_number_txt$1$1==.
   00A7                     743 _lcd_custom_character_creation_character_number_txt_1_1:
   00A7                     744 	.ds 13
                    00B4    745 Llcd_custom_character_creation$row_number_txt$1$1==.
   00B4                     746 _lcd_custom_character_creation_row_number_txt_1_1:
   00B4                     747 	.ds 7
                    00BB    748 Llcd_cu_boulder$cu_boulder_array$1$1==.
   00BB                     749 _lcd_cu_boulder_cu_boulder_array_1_1:
   00BB                     750 	.ds 224
                    019B    751 Llcd_cu_boulder$array_counter$1$1==.
   019B                     752 _lcd_cu_boulder_array_counter_1_1:
   019B                     753 	.ds 4
                    019F    754 Llcd_cu_boulder$temp_char$1$1==.
   019F                     755 _lcd_cu_boulder_temp_char_1_1:
   019F                     756 	.ds 1
                            757 ;--------------------------------------------------------
                            758 ; external initialized ram data
                            759 ;--------------------------------------------------------
                            760 	.area XISEG   (XDATA)
                            761 	.area HOME    (CODE)
                            762 	.area GSINIT0 (CODE)
                            763 	.area GSINIT1 (CODE)
                            764 	.area GSINIT2 (CODE)
                            765 	.area GSINIT3 (CODE)
                            766 	.area GSINIT4 (CODE)
                            767 	.area GSINIT5 (CODE)
                            768 	.area GSINIT  (CODE)
                            769 	.area GSFINAL (CODE)
                            770 	.area CSEG    (CODE)
                            771 ;--------------------------------------------------------
                            772 ; global & static initialisations
                            773 ;--------------------------------------------------------
                            774 	.area HOME    (CODE)
                            775 	.area GSINIT  (CODE)
                            776 	.area GSFINAL (CODE)
                            777 	.area GSINIT  (CODE)
                            778 ;------------------------------------------------------------
                            779 ;Allocation info for local variables in function 'lcd_cu_boulder'
                            780 ;------------------------------------------------------------
                            781 ;sloc0                     Allocated with name '_lcd_cu_boulder_sloc0_1_0'
                            782 ;sloc1                     Allocated with name '_lcd_cu_boulder_sloc1_1_0'
                            783 ;cu_boulder_array          Allocated with name '_lcd_cu_boulder_cu_boulder_array_1_1'
                            784 ;array_counter             Allocated with name '_lcd_cu_boulder_array_counter_1_1'
                            785 ;lcd_row                   Allocated with name '_lcd_cu_boulder_lcd_row_1_1'
                            786 ;lcd_column                Allocated with name '_lcd_cu_boulder_lcd_column_1_1'
                            787 ;character_row_number      Allocated with name '_lcd_cu_boulder_character_row_number_1_1'
                            788 ;character_number          Allocated with name '_lcd_cu_boulder_character_number_1_1'
                            789 ;temp_char                 Allocated with name '_lcd_cu_boulder_temp_char_1_1'
                            790 ;custom_character_address  Allocated with name '_lcd_cu_boulder_custom_character_address_1_1'
                            791 ;base                      Allocated with name '_lcd_cu_boulder_base_1_1'
                            792 ;------------------------------------------------------------
                    0000    793 	G$lcd_cu_boulder$0$0 ==.
                    0000    794 	C$lcd.c$350$1$1 ==.
                            795 ;	lcd.c:350: __xdata uint8_t static cu_boulder_array[]={3	,
                            796 ;	genPointerSet
                            797 ;     genFarPointerSet
   0000 90s00rBB            798 	mov	dptr,#_lcd_cu_boulder_cu_boulder_array_1_1
   0003 74 03               799 	mov	a,#0x03
   0005 F0                  800 	movx	@dptr,a
                            801 ;	genPointerSet
                            802 ;     genFarPointerSet
   0006 90s00rBC            803 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0001)
   0009 74 06               804 	mov	a,#0x06
   000B F0                  805 	movx	@dptr,a
                            806 ;	genPointerSet
                            807 ;     genFarPointerSet
   000C 90s00rBD            808 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0002)
   000F 74 0C               809 	mov	a,#0x0C
   0011 F0                  810 	movx	@dptr,a
                            811 ;	genPointerSet
                            812 ;     genFarPointerSet
   0012 90s00rBE            813 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0003)
   0015 74 18               814 	mov	a,#0x18
   0017 F0                  815 	movx	@dptr,a
                            816 ;	genPointerSet
                            817 ;     genFarPointerSet
   0018 90s00rBF            818 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0004)
   001B 74 10               819 	mov	a,#0x10
   001D F0                  820 	movx	@dptr,a
                            821 ;	genPointerSet
                            822 ;     genFarPointerSet
   001E 90s00rC0            823 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0005)
   0021 74 10               824 	mov	a,#0x10
   0023 F0                  825 	movx	@dptr,a
                            826 ;	genPointerSet
                            827 ;     genFarPointerSet
   0024 90s00rC1            828 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0006)
   0027 74 10               829 	mov	a,#0x10
   0029 F0                  830 	movx	@dptr,a
                            831 ;	genPointerSet
                            832 ;     genFarPointerSet
   002A 90s00rC2            833 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0007)
   002D 74 10               834 	mov	a,#0x10
   002F F0                  835 	movx	@dptr,a
                            836 ;	genPointerSet
                            837 ;     genFarPointerSet
   0030 90s00rC3            838 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0008)
   0033 74 1F               839 	mov	a,#0x1F
   0035 F0                  840 	movx	@dptr,a
                            841 ;	genPointerSet
                            842 ;     genFarPointerSet
   0036 90s00rC4            843 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0009)
                            844 ;	Peephole 181	changed mov to clr
                            845 ;	genPointerSet
                            846 ;     genFarPointerSet
                            847 ;	Peephole 181	changed mov to clr
                            848 ;	Peephole 219.a	removed redundant clear
                            849 ;	genPointerSet
                            850 ;     genFarPointerSet
                            851 ;	Peephole 181	changed mov to clr
                            852 ;	genPointerSet
                            853 ;     genFarPointerSet
                            854 ;	Peephole 181	changed mov to clr
                            855 ;	Peephole 219.a	removed redundant clear
   0039 E4                  856 	clr	a
   003A F0                  857 	movx	@dptr,a
   003B 90s00rC5            858 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000a)
   003E F0                  859 	movx	@dptr,a
   003F 90s00rC6            860 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000b)
                            861 ;	Peephole 219.b	removed redundant clear
   0042 F0                  862 	movx	@dptr,a
   0043 90s00rC7            863 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000c)
   0046 F0                  864 	movx	@dptr,a
                            865 ;	genPointerSet
                            866 ;     genFarPointerSet
   0047 90s00rC8            867 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000d)
                            868 ;	Peephole 181	changed mov to clr
   004A E4                  869 	clr	a
   004B F0                  870 	movx	@dptr,a
                            871 ;	genPointerSet
                            872 ;     genFarPointerSet
   004C 90s00rC9            873 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000e)
   004F 74 0F               874 	mov	a,#0x0F
   0051 F0                  875 	movx	@dptr,a
                            876 ;	genPointerSet
                            877 ;     genFarPointerSet
   0052 90s00rCA            878 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000f)
   0055 74 0F               879 	mov	a,#0x0F
   0057 F0                  880 	movx	@dptr,a
                            881 ;	genPointerSet
                            882 ;     genFarPointerSet
   0058 90s00rCB            883 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0010)
   005B 74 1F               884 	mov	a,#0x1F
   005D F0                  885 	movx	@dptr,a
                            886 ;	genPointerSet
                            887 ;     genFarPointerSet
   005E 90s00rCC            888 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0011)
                            889 ;	Peephole 181	changed mov to clr
                            890 ;	genPointerSet
                            891 ;     genFarPointerSet
                            892 ;	Peephole 181	changed mov to clr
                            893 ;	Peephole 219.a	removed redundant clear
                            894 ;	genPointerSet
                            895 ;     genFarPointerSet
                            896 ;	Peephole 181	changed mov to clr
                            897 ;	genPointerSet
                            898 ;     genFarPointerSet
                            899 ;	Peephole 181	changed mov to clr
                            900 ;	Peephole 219.a	removed redundant clear
   0061 E4                  901 	clr	a
   0062 F0                  902 	movx	@dptr,a
   0063 90s00rCD            903 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0012)
   0066 F0                  904 	movx	@dptr,a
   0067 90s00rCE            905 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0013)
                            906 ;	Peephole 219.b	removed redundant clear
   006A F0                  907 	movx	@dptr,a
   006B 90s00rCF            908 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0014)
   006E F0                  909 	movx	@dptr,a
                            910 ;	genPointerSet
                            911 ;     genFarPointerSet
   006F 90s00rD0            912 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0015)
                            913 ;	Peephole 181	changed mov to clr
   0072 E4                  914 	clr	a
   0073 F0                  915 	movx	@dptr,a
                            916 ;	genPointerSet
                            917 ;     genFarPointerSet
   0074 90s00rD1            918 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0016)
   0077 74 1F               919 	mov	a,#0x1F
   0079 F0                  920 	movx	@dptr,a
                            921 ;	genPointerSet
                            922 ;     genFarPointerSet
   007A 90s00rD2            923 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0017)
   007D 74 1F               924 	mov	a,#0x1F
   007F F0                  925 	movx	@dptr,a
                            926 ;	genPointerSet
                            927 ;     genFarPointerSet
   0080 90s00rD3            928 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0018)
   0083 74 1F               929 	mov	a,#0x1F
   0085 F0                  930 	movx	@dptr,a
                            931 ;	genPointerSet
                            932 ;     genFarPointerSet
   0086 90s00rD4            933 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0019)
   0089 74 01               934 	mov	a,#0x01
   008B F0                  935 	movx	@dptr,a
                            936 ;	genPointerSet
                            937 ;     genFarPointerSet
   008C 90s00rD5            938 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001a)
                            939 ;	Peephole 181	changed mov to clr
                            940 ;	genPointerSet
                            941 ;     genFarPointerSet
                            942 ;	Peephole 181	changed mov to clr
                            943 ;	Peephole 219.a	removed redundant clear
                            944 ;	genPointerSet
                            945 ;     genFarPointerSet
                            946 ;	Peephole 181	changed mov to clr
                            947 ;	genPointerSet
                            948 ;     genFarPointerSet
                            949 ;	Peephole 181	changed mov to clr
                            950 ;	Peephole 219.a	removed redundant clear
   008F E4                  951 	clr	a
   0090 F0                  952 	movx	@dptr,a
   0091 90s00rD6            953 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001b)
   0094 F0                  954 	movx	@dptr,a
   0095 90s00rD7            955 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001c)
                            956 ;	Peephole 219.b	removed redundant clear
   0098 F0                  957 	movx	@dptr,a
   0099 90s00rD8            958 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001d)
   009C F0                  959 	movx	@dptr,a
                            960 ;	genPointerSet
                            961 ;     genFarPointerSet
   009D 90s00rD9            962 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001e)
   00A0 74 18               963 	mov	a,#0x18
   00A2 F0                  964 	movx	@dptr,a
                            965 ;	genPointerSet
                            966 ;     genFarPointerSet
   00A3 90s00rDA            967 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001f)
   00A6 74 18               968 	mov	a,#0x18
   00A8 F0                  969 	movx	@dptr,a
                            970 ;	genPointerSet
                            971 ;     genFarPointerSet
   00A9 90s00rDB            972 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0020)
                            973 ;	Peephole 181	changed mov to clr
   00AC E4                  974 	clr	a
   00AD F0                  975 	movx	@dptr,a
                            976 ;	genPointerSet
                            977 ;     genFarPointerSet
   00AE 90s00rDC            978 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0021)
   00B1 74 10               979 	mov	a,#0x10
   00B3 F0                  980 	movx	@dptr,a
                            981 ;	genPointerSet
                            982 ;     genFarPointerSet
   00B4 90s00rDD            983 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0022)
   00B7 74 18               984 	mov	a,#0x18
   00B9 F0                  985 	movx	@dptr,a
                            986 ;	genPointerSet
                            987 ;     genFarPointerSet
   00BA 90s00rDE            988 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0023)
   00BD 74 08               989 	mov	a,#0x08
   00BF F0                  990 	movx	@dptr,a
                            991 ;	genPointerSet
                            992 ;     genFarPointerSet
   00C0 90s00rDF            993 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0024)
   00C3 74 08               994 	mov	a,#0x08
   00C5 F0                  995 	movx	@dptr,a
                            996 ;	genPointerSet
                            997 ;     genFarPointerSet
   00C6 90s00rE0            998 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0025)
   00C9 74 08               999 	mov	a,#0x08
   00CB F0                 1000 	movx	@dptr,a
                           1001 ;	genPointerSet
                           1002 ;     genFarPointerSet
   00CC 90s00rE1           1003 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0026)
   00CF 74 08              1004 	mov	a,#0x08
   00D1 F0                 1005 	movx	@dptr,a
                           1006 ;	genPointerSet
                           1007 ;     genFarPointerSet
   00D2 90s00rE2           1008 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0027)
   00D5 74 08              1009 	mov	a,#0x08
   00D7 F0                 1010 	movx	@dptr,a
                           1011 ;	genPointerSet
                           1012 ;     genFarPointerSet
   00D8 90s00rE3           1013 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0028)
                           1014 ;	Peephole 181	changed mov to clr
                           1015 ;	genPointerSet
                           1016 ;     genFarPointerSet
                           1017 ;	Peephole 181	changed mov to clr
                           1018 ;	Peephole 219.a	removed redundant clear
                           1019 ;	genPointerSet
                           1020 ;     genFarPointerSet
                           1021 ;	Peephole 181	changed mov to clr
                           1022 ;	genPointerSet
                           1023 ;     genFarPointerSet
                           1024 ;	Peephole 181	changed mov to clr
                           1025 ;	Peephole 219.a	removed redundant clear
   00DB E4                 1026 	clr	a
   00DC F0                 1027 	movx	@dptr,a
   00DD 90s00rE4           1028 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0029)
   00E0 F0                 1029 	movx	@dptr,a
   00E1 90s00rE5           1030 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002a)
                           1031 ;	Peephole 219.b	removed redundant clear
   00E4 F0                 1032 	movx	@dptr,a
   00E5 90s00rE6           1033 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002b)
   00E8 F0                 1034 	movx	@dptr,a
                           1035 ;	genPointerSet
                           1036 ;     genFarPointerSet
   00E9 90s00rE7           1037 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002c)
                           1038 ;	Peephole 181	changed mov to clr
                           1039 ;	genPointerSet
                           1040 ;     genFarPointerSet
                           1041 ;	Peephole 181	changed mov to clr
                           1042 ;	Peephole 219.a	removed redundant clear
                           1043 ;	genPointerSet
                           1044 ;     genFarPointerSet
                           1045 ;	Peephole 181	changed mov to clr
                           1046 ;	genPointerSet
                           1047 ;     genFarPointerSet
                           1048 ;	Peephole 181	changed mov to clr
                           1049 ;	Peephole 219.a	removed redundant clear
   00EC E4                 1050 	clr	a
   00ED F0                 1051 	movx	@dptr,a
   00EE 90s00rE8           1052 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002d)
   00F1 F0                 1053 	movx	@dptr,a
   00F2 90s00rE9           1054 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002e)
                           1055 ;	Peephole 219.b	removed redundant clear
   00F5 F0                 1056 	movx	@dptr,a
   00F6 90s00rEA           1057 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002f)
   00F9 F0                 1058 	movx	@dptr,a
                           1059 ;	genPointerSet
                           1060 ;     genFarPointerSet
   00FA 90s00rEB           1061 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0030)
                           1062 ;	Peephole 181	changed mov to clr
                           1063 ;	genPointerSet
                           1064 ;     genFarPointerSet
                           1065 ;	Peephole 181	changed mov to clr
                           1066 ;	Peephole 219.a	removed redundant clear
                           1067 ;	genPointerSet
                           1068 ;     genFarPointerSet
                           1069 ;	Peephole 181	changed mov to clr
                           1070 ;	genPointerSet
                           1071 ;     genFarPointerSet
                           1072 ;	Peephole 181	changed mov to clr
                           1073 ;	Peephole 219.a	removed redundant clear
   00FD E4                 1074 	clr	a
   00FE F0                 1075 	movx	@dptr,a
   00FF 90s00rEC           1076 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0031)
   0102 F0                 1077 	movx	@dptr,a
   0103 90s00rED           1078 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0032)
                           1079 ;	Peephole 219.b	removed redundant clear
   0106 F0                 1080 	movx	@dptr,a
   0107 90s00rEE           1081 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0033)
   010A F0                 1082 	movx	@dptr,a
                           1083 ;	genPointerSet
                           1084 ;     genFarPointerSet
   010B 90s00rEF           1085 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0034)
                           1086 ;	Peephole 181	changed mov to clr
                           1087 ;	genPointerSet
                           1088 ;     genFarPointerSet
                           1089 ;	Peephole 181	changed mov to clr
                           1090 ;	Peephole 219.a	removed redundant clear
                           1091 ;	genPointerSet
                           1092 ;     genFarPointerSet
                           1093 ;	Peephole 181	changed mov to clr
                           1094 ;	genPointerSet
                           1095 ;     genFarPointerSet
                           1096 ;	Peephole 181	changed mov to clr
                           1097 ;	Peephole 219.a	removed redundant clear
   010E E4                 1098 	clr	a
   010F F0                 1099 	movx	@dptr,a
   0110 90s00rF0           1100 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0035)
   0113 F0                 1101 	movx	@dptr,a
   0114 90s00rF1           1102 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0036)
                           1103 ;	Peephole 219.b	removed redundant clear
   0117 F0                 1104 	movx	@dptr,a
   0118 90s00rF2           1105 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0037)
   011B F0                 1106 	movx	@dptr,a
                           1107 ;	genPointerSet
                           1108 ;     genFarPointerSet
   011C 90s00rF3           1109 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0038)
   011F 74 10              1110 	mov	a,#0x10
   0121 F0                 1111 	movx	@dptr,a
                           1112 ;	genPointerSet
                           1113 ;     genFarPointerSet
   0122 90s00rF4           1114 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0039)
   0125 74 10              1115 	mov	a,#0x10
   0127 F0                 1116 	movx	@dptr,a
                           1117 ;	genPointerSet
                           1118 ;     genFarPointerSet
   0128 90s00rF5           1119 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003a)
   012B 74 10              1120 	mov	a,#0x10
   012D F0                 1121 	movx	@dptr,a
                           1122 ;	genPointerSet
                           1123 ;     genFarPointerSet
   012E 90s00rF6           1124 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003b)
   0131 74 10              1125 	mov	a,#0x10
   0133 F0                 1126 	movx	@dptr,a
                           1127 ;	genPointerSet
                           1128 ;     genFarPointerSet
   0134 90s00rF7           1129 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003c)
   0137 74 10              1130 	mov	a,#0x10
   0139 F0                 1131 	movx	@dptr,a
                           1132 ;	genPointerSet
                           1133 ;     genFarPointerSet
   013A 90s00rF8           1134 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003d)
   013D 74 10              1135 	mov	a,#0x10
   013F F0                 1136 	movx	@dptr,a
                           1137 ;	genPointerSet
                           1138 ;     genFarPointerSet
   0140 90s00rF9           1139 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003e)
   0143 74 10              1140 	mov	a,#0x10
   0145 F0                 1141 	movx	@dptr,a
                           1142 ;	genPointerSet
                           1143 ;     genFarPointerSet
   0146 90s00rFA           1144 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003f)
   0149 74 10              1145 	mov	a,#0x10
   014B F0                 1146 	movx	@dptr,a
                           1147 ;	genPointerSet
                           1148 ;     genFarPointerSet
   014C 90s00rFB           1149 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0040)
   014F 74 0F              1150 	mov	a,#0x0F
   0151 F0                 1151 	movx	@dptr,a
                           1152 ;	genPointerSet
                           1153 ;     genFarPointerSet
   0152 90s00rFC           1154 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0041)
   0155 74 0C              1155 	mov	a,#0x0C
   0157 F0                 1156 	movx	@dptr,a
                           1157 ;	genPointerSet
                           1158 ;     genFarPointerSet
   0158 90s00rFD           1159 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0042)
   015B 74 0C              1160 	mov	a,#0x0C
   015D F0                 1161 	movx	@dptr,a
                           1162 ;	genPointerSet
                           1163 ;     genFarPointerSet
   015E 90s00rFE           1164 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0043)
   0161 74 0C              1165 	mov	a,#0x0C
   0163 F0                 1166 	movx	@dptr,a
                           1167 ;	genPointerSet
                           1168 ;     genFarPointerSet
   0164 90s00rFF           1169 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0044)
   0167 74 0C              1170 	mov	a,#0x0C
   0169 F0                 1171 	movx	@dptr,a
                           1172 ;	genPointerSet
                           1173 ;     genFarPointerSet
   016A 90s01r00           1174 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0045)
   016D 74 0C              1175 	mov	a,#0x0C
   016F F0                 1176 	movx	@dptr,a
                           1177 ;	genPointerSet
                           1178 ;     genFarPointerSet
   0170 90s01r01           1179 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0046)
   0173 74 0F              1180 	mov	a,#0x0F
   0175 F0                 1181 	movx	@dptr,a
                           1182 ;	genPointerSet
                           1183 ;     genFarPointerSet
   0176 90s01r02           1184 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0047)
   0179 74 0F              1185 	mov	a,#0x0F
   017B F0                 1186 	movx	@dptr,a
                           1187 ;	genPointerSet
                           1188 ;     genFarPointerSet
   017C 90s01r03           1189 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0048)
   017F 74 1F              1190 	mov	a,#0x1F
   0181 F0                 1191 	movx	@dptr,a
                           1192 ;	genPointerSet
                           1193 ;     genFarPointerSet
   0182 90s01r04           1194 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0049)
                           1195 ;	Peephole 181	changed mov to clr
                           1196 ;	genPointerSet
                           1197 ;     genFarPointerSet
                           1198 ;	Peephole 181	changed mov to clr
                           1199 ;	Peephole 219.a	removed redundant clear
                           1200 ;	genPointerSet
                           1201 ;     genFarPointerSet
                           1202 ;	Peephole 181	changed mov to clr
                           1203 ;	genPointerSet
                           1204 ;     genFarPointerSet
                           1205 ;	Peephole 181	changed mov to clr
                           1206 ;	Peephole 219.a	removed redundant clear
   0185 E4                 1207 	clr	a
   0186 F0                 1208 	movx	@dptr,a
   0187 90s01r05           1209 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004a)
   018A F0                 1210 	movx	@dptr,a
   018B 90s01r06           1211 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004b)
                           1212 ;	Peephole 219.b	removed redundant clear
   018E F0                 1213 	movx	@dptr,a
   018F 90s01r07           1214 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004c)
   0192 F0                 1215 	movx	@dptr,a
                           1216 ;	genPointerSet
                           1217 ;     genFarPointerSet
   0193 90s01r08           1218 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004d)
                           1219 ;	Peephole 181	changed mov to clr
                           1220 ;	genPointerSet
                           1221 ;     genFarPointerSet
                           1222 ;	Peephole 181	changed mov to clr
                           1223 ;	Peephole 219.a	removed redundant clear
                           1224 ;	genPointerSet
                           1225 ;     genFarPointerSet
                           1226 ;	Peephole 181	changed mov to clr
   0196 E4                 1227 	clr	a
   0197 F0                 1228 	movx	@dptr,a
   0198 90s01r09           1229 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004e)
   019B F0                 1230 	movx	@dptr,a
   019C 90s01r0A           1231 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004f)
                           1232 ;	Peephole 219.b	removed redundant clear
   019F F0                 1233 	movx	@dptr,a
                           1234 ;	genPointerSet
                           1235 ;     genFarPointerSet
   01A0 90s01r0B           1236 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0050)
   01A3 74 18              1237 	mov	a,#0x18
   01A5 F0                 1238 	movx	@dptr,a
                           1239 ;	genPointerSet
                           1240 ;     genFarPointerSet
   01A6 90s01r0C           1241 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0051)
   01A9 74 1F              1242 	mov	a,#0x1F
   01AB F0                 1243 	movx	@dptr,a
                           1244 ;	genPointerSet
                           1245 ;     genFarPointerSet
   01AC 90s01r0D           1246 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0052)
   01AF 74 1F              1247 	mov	a,#0x1F
   01B1 F0                 1248 	movx	@dptr,a
                           1249 ;	genPointerSet
                           1250 ;     genFarPointerSet
   01B2 90s01r0E           1251 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0053)
   01B5 74 1F              1252 	mov	a,#0x1F
   01B7 F0                 1253 	movx	@dptr,a
                           1254 ;	genPointerSet
                           1255 ;     genFarPointerSet
   01B8 90s01r0F           1256 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0054)
   01BB 74 1F              1257 	mov	a,#0x1F
   01BD F0                 1258 	movx	@dptr,a
                           1259 ;	genPointerSet
                           1260 ;     genFarPointerSet
   01BE 90s01r10           1261 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0055)
   01C1 74 1F              1262 	mov	a,#0x1F
   01C3 F0                 1263 	movx	@dptr,a
                           1264 ;	genPointerSet
                           1265 ;     genFarPointerSet
   01C4 90s01r11           1266 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0056)
   01C7 74 18              1267 	mov	a,#0x18
   01C9 F0                 1268 	movx	@dptr,a
                           1269 ;	genPointerSet
                           1270 ;     genFarPointerSet
   01CA 90s01r12           1271 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0057)
   01CD 74 18              1272 	mov	a,#0x18
   01CF F0                 1273 	movx	@dptr,a
                           1274 ;	genPointerSet
                           1275 ;     genFarPointerSet
   01D0 90s01r13           1276 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0058)
   01D3 74 0F              1277 	mov	a,#0x0F
   01D5 F0                 1278 	movx	@dptr,a
                           1279 ;	genPointerSet
                           1280 ;     genFarPointerSet
   01D6 90s01r14           1281 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0059)
   01D9 74 1E              1282 	mov	a,#0x1E
   01DB F0                 1283 	movx	@dptr,a
                           1284 ;	genPointerSet
                           1285 ;     genFarPointerSet
   01DC 90s01r15           1286 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005a)
   01DF 74 1E              1287 	mov	a,#0x1E
   01E1 F0                 1288 	movx	@dptr,a
                           1289 ;	genPointerSet
                           1290 ;     genFarPointerSet
   01E2 90s01r16           1291 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005b)
   01E5 74 1E              1292 	mov	a,#0x1E
   01E7 F0                 1293 	movx	@dptr,a
                           1294 ;	genPointerSet
                           1295 ;     genFarPointerSet
   01E8 90s01r17           1296 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005c)
   01EB 74 1E              1297 	mov	a,#0x1E
   01ED F0                 1298 	movx	@dptr,a
                           1299 ;	genPointerSet
                           1300 ;     genFarPointerSet
   01EE 90s01r18           1301 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005d)
   01F1 74 1E              1302 	mov	a,#0x1E
   01F3 F0                 1303 	movx	@dptr,a
                           1304 ;	genPointerSet
                           1305 ;     genFarPointerSet
   01F4 90s01r19           1306 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005e)
   01F7 74 0E              1307 	mov	a,#0x0E
   01F9 F0                 1308 	movx	@dptr,a
                           1309 ;	genPointerSet
                           1310 ;     genFarPointerSet
   01FA 90s01r1A           1311 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005f)
   01FD 74 0E              1312 	mov	a,#0x0E
   01FF F0                 1313 	movx	@dptr,a
                           1314 ;	genPointerSet
                           1315 ;     genFarPointerSet
   0200 90s01r1B           1316 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0060)
   0203 74 1F              1317 	mov	a,#0x1F
   0205 F0                 1318 	movx	@dptr,a
                           1319 ;	genPointerSet
                           1320 ;     genFarPointerSet
   0206 90s01r1C           1321 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0061)
                           1322 ;	Peephole 181	changed mov to clr
                           1323 ;	genPointerSet
                           1324 ;     genFarPointerSet
                           1325 ;	Peephole 181	changed mov to clr
                           1326 ;	Peephole 219.a	removed redundant clear
                           1327 ;	genPointerSet
                           1328 ;     genFarPointerSet
                           1329 ;	Peephole 181	changed mov to clr
                           1330 ;	genPointerSet
                           1331 ;     genFarPointerSet
                           1332 ;	Peephole 181	changed mov to clr
                           1333 ;	Peephole 219.a	removed redundant clear
   0209 E4                 1334 	clr	a
   020A F0                 1335 	movx	@dptr,a
   020B 90s01r1D           1336 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0062)
   020E F0                 1337 	movx	@dptr,a
   020F 90s01r1E           1338 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0063)
                           1339 ;	Peephole 219.b	removed redundant clear
   0212 F0                 1340 	movx	@dptr,a
   0213 90s01r1F           1341 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0064)
   0216 F0                 1342 	movx	@dptr,a
                           1343 ;	genPointerSet
                           1344 ;     genFarPointerSet
   0217 90s01r20           1345 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0065)
                           1346 ;	Peephole 181	changed mov to clr
   021A E4                 1347 	clr	a
   021B F0                 1348 	movx	@dptr,a
                           1349 ;	genPointerSet
                           1350 ;     genFarPointerSet
   021C 90s01r21           1351 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0066)
   021F 74 01              1352 	mov	a,#0x01
   0221 F0                 1353 	movx	@dptr,a
                           1354 ;	genPointerSet
                           1355 ;     genFarPointerSet
   0222 90s01r22           1356 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0067)
   0225 74 01              1357 	mov	a,#0x01
   0227 F0                 1358 	movx	@dptr,a
                           1359 ;	genPointerSet
                           1360 ;     genFarPointerSet
   0228 90s01r23           1361 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0068)
   022B 74 18              1362 	mov	a,#0x18
   022D F0                 1363 	movx	@dptr,a
                           1364 ;	genPointerSet
                           1365 ;     genFarPointerSet
   022E 90s01r24           1366 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0069)
   0231 74 08              1367 	mov	a,#0x08
   0233 F0                 1368 	movx	@dptr,a
                           1369 ;	genPointerSet
                           1370 ;     genFarPointerSet
   0234 90s01r25           1371 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006a)
   0237 74 08              1372 	mov	a,#0x08
   0239 F0                 1373 	movx	@dptr,a
                           1374 ;	genPointerSet
                           1375 ;     genFarPointerSet
   023A 90s01r26           1376 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006b)
   023D 74 08              1377 	mov	a,#0x08
   023F F0                 1378 	movx	@dptr,a
                           1379 ;	genPointerSet
                           1380 ;     genFarPointerSet
   0240 90s01r27           1381 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006c)
   0243 74 08              1382 	mov	a,#0x08
   0245 F0                 1383 	movx	@dptr,a
                           1384 ;	genPointerSet
                           1385 ;     genFarPointerSet
   0246 90s01r28           1386 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006d)
   0249 74 08              1387 	mov	a,#0x08
   024B F0                 1388 	movx	@dptr,a
                           1389 ;	genPointerSet
                           1390 ;     genFarPointerSet
   024C 90s01r29           1391 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006e)
   024F 74 18              1392 	mov	a,#0x18
   0251 F0                 1393 	movx	@dptr,a
                           1394 ;	genPointerSet
                           1395 ;     genFarPointerSet
   0252 90s01r2A           1396 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006f)
                           1397 ;	Peephole 181	changed mov to clr
   0255 E4                 1398 	clr	a
   0256 F0                 1399 	movx	@dptr,a
                           1400 ;	genPointerSet
                           1401 ;     genFarPointerSet
   0257 90s01r2B           1402 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0070)
   025A 74 10              1403 	mov	a,#0x10
   025C F0                 1404 	movx	@dptr,a
                           1405 ;	genPointerSet
                           1406 ;     genFarPointerSet
   025D 90s01r2C           1407 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0071)
   0260 74 10              1408 	mov	a,#0x10
   0262 F0                 1409 	movx	@dptr,a
                           1410 ;	genPointerSet
                           1411 ;     genFarPointerSet
   0263 90s01r2D           1412 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0072)
   0266 74 10              1413 	mov	a,#0x10
   0268 F0                 1414 	movx	@dptr,a
                           1415 ;	genPointerSet
                           1416 ;     genFarPointerSet
   0269 90s01r2E           1417 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0073)
   026C 74 18              1418 	mov	a,#0x18
   026E F0                 1419 	movx	@dptr,a
                           1420 ;	genPointerSet
                           1421 ;     genFarPointerSet
   026F 90s01r2F           1422 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0074)
   0272 74 0C              1423 	mov	a,#0x0C
   0274 F0                 1424 	movx	@dptr,a
                           1425 ;	genPointerSet
                           1426 ;     genFarPointerSet
   0275 90s01r30           1427 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0075)
   0278 74 06              1428 	mov	a,#0x06
   027A F0                 1429 	movx	@dptr,a
                           1430 ;	genPointerSet
                           1431 ;     genFarPointerSet
   027B 90s01r31           1432 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0076)
   027E 74 03              1433 	mov	a,#0x03
   0280 F0                 1434 	movx	@dptr,a
                           1435 ;	genPointerSet
                           1436 ;     genFarPointerSet
   0281 90s01r32           1437 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0077)
                           1438 ;	Peephole 181	changed mov to clr
   0284 E4                 1439 	clr	a
   0285 F0                 1440 	movx	@dptr,a
                           1441 ;	genPointerSet
                           1442 ;     genFarPointerSet
   0286 90s01r33           1443 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0078)
   0289 74 0F              1444 	mov	a,#0x0F
   028B F0                 1445 	movx	@dptr,a
                           1446 ;	genPointerSet
                           1447 ;     genFarPointerSet
   028C 90s01r34           1448 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0079)
                           1449 ;	Peephole 181	changed mov to clr
                           1450 ;	genPointerSet
                           1451 ;     genFarPointerSet
                           1452 ;	Peephole 181	changed mov to clr
                           1453 ;	Peephole 219.a	removed redundant clear
                           1454 ;	genPointerSet
                           1455 ;     genFarPointerSet
                           1456 ;	Peephole 181	changed mov to clr
                           1457 ;	genPointerSet
                           1458 ;     genFarPointerSet
                           1459 ;	Peephole 181	changed mov to clr
                           1460 ;	Peephole 219.a	removed redundant clear
   028F E4                 1461 	clr	a
   0290 F0                 1462 	movx	@dptr,a
   0291 90s01r35           1463 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007a)
   0294 F0                 1464 	movx	@dptr,a
   0295 90s01r36           1465 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007b)
                           1466 ;	Peephole 219.b	removed redundant clear
   0298 F0                 1467 	movx	@dptr,a
   0299 90s01r37           1468 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007c)
   029C F0                 1469 	movx	@dptr,a
                           1470 ;	genPointerSet
                           1471 ;     genFarPointerSet
   029D 90s01r38           1472 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007d)
                           1473 ;	Peephole 181	changed mov to clr
   02A0 E4                 1474 	clr	a
   02A1 F0                 1475 	movx	@dptr,a
                           1476 ;	genPointerSet
                           1477 ;     genFarPointerSet
   02A2 90s01r39           1478 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007e)
   02A5 74 1F              1479 	mov	a,#0x1F
   02A7 F0                 1480 	movx	@dptr,a
                           1481 ;	genPointerSet
                           1482 ;     genFarPointerSet
   02A8 90s01r3A           1483 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007f)
   02AB 74 01              1484 	mov	a,#0x01
   02AD F0                 1485 	movx	@dptr,a
                           1486 ;	genPointerSet
                           1487 ;     genFarPointerSet
   02AE 90s01r3B           1488 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0080)
                           1489 ;	Peephole 181	changed mov to clr
                           1490 ;	genPointerSet
                           1491 ;     genFarPointerSet
                           1492 ;	Peephole 181	changed mov to clr
                           1493 ;	Peephole 219.a	removed redundant clear
                           1494 ;	genPointerSet
                           1495 ;     genFarPointerSet
                           1496 ;	Peephole 181	changed mov to clr
                           1497 ;	genPointerSet
                           1498 ;     genFarPointerSet
                           1499 ;	Peephole 181	changed mov to clr
                           1500 ;	Peephole 219.a	removed redundant clear
   02B1 E4                 1501 	clr	a
   02B2 F0                 1502 	movx	@dptr,a
   02B3 90s01r3C           1503 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0081)
   02B6 F0                 1504 	movx	@dptr,a
   02B7 90s01r3D           1505 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0082)
                           1506 ;	Peephole 219.b	removed redundant clear
   02BA F0                 1507 	movx	@dptr,a
   02BB 90s01r3E           1508 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0083)
   02BE F0                 1509 	movx	@dptr,a
                           1510 ;	genPointerSet
                           1511 ;     genFarPointerSet
   02BF 90s01r3F           1512 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0084)
                           1513 ;	Peephole 181	changed mov to clr
                           1514 ;	genPointerSet
                           1515 ;     genFarPointerSet
                           1516 ;	Peephole 181	changed mov to clr
                           1517 ;	Peephole 219.a	removed redundant clear
                           1518 ;	genPointerSet
                           1519 ;     genFarPointerSet
                           1520 ;	Peephole 181	changed mov to clr
                           1521 ;	genPointerSet
                           1522 ;     genFarPointerSet
                           1523 ;	Peephole 181	changed mov to clr
                           1524 ;	Peephole 219.a	removed redundant clear
   02C2 E4                 1525 	clr	a
   02C3 F0                 1526 	movx	@dptr,a
   02C4 90s01r40           1527 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0085)
   02C7 F0                 1528 	movx	@dptr,a
   02C8 90s01r41           1529 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0086)
                           1530 ;	Peephole 219.b	removed redundant clear
   02CB F0                 1531 	movx	@dptr,a
   02CC 90s01r42           1532 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0087)
   02CF F0                 1533 	movx	@dptr,a
                           1534 ;	genPointerSet
                           1535 ;     genFarPointerSet
   02D0 90s01r43           1536 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0088)
   02D3 74 18              1537 	mov	a,#0x18
   02D5 F0                 1538 	movx	@dptr,a
                           1539 ;	genPointerSet
                           1540 ;     genFarPointerSet
   02D6 90s01r44           1541 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0089)
                           1542 ;	Peephole 181	changed mov to clr
                           1543 ;	genPointerSet
                           1544 ;     genFarPointerSet
                           1545 ;	Peephole 181	changed mov to clr
                           1546 ;	Peephole 219.a	removed redundant clear
                           1547 ;	genPointerSet
                           1548 ;     genFarPointerSet
                           1549 ;	Peephole 181	changed mov to clr
                           1550 ;	genPointerSet
                           1551 ;     genFarPointerSet
                           1552 ;	Peephole 181	changed mov to clr
                           1553 ;	Peephole 219.a	removed redundant clear
   02D9 E4                 1554 	clr	a
   02DA F0                 1555 	movx	@dptr,a
   02DB 90s01r45           1556 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008a)
   02DE F0                 1557 	movx	@dptr,a
   02DF 90s01r46           1558 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008b)
                           1559 ;	Peephole 219.b	removed redundant clear
   02E2 F0                 1560 	movx	@dptr,a
   02E3 90s01r47           1561 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008c)
   02E6 F0                 1562 	movx	@dptr,a
                           1563 ;	genPointerSet
                           1564 ;     genFarPointerSet
   02E7 90s01r48           1565 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008d)
   02EA 74 01              1566 	mov	a,#0x01
   02EC F0                 1567 	movx	@dptr,a
                           1568 ;	genPointerSet
                           1569 ;     genFarPointerSet
   02ED 90s01r49           1570 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008e)
   02F0 74 1F              1571 	mov	a,#0x1F
   02F2 F0                 1572 	movx	@dptr,a
                           1573 ;	genPointerSet
                           1574 ;     genFarPointerSet
   02F3 90s01r4A           1575 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008f)
   02F6 74 1F              1576 	mov	a,#0x1F
   02F8 F0                 1577 	movx	@dptr,a
                           1578 ;	genPointerSet
                           1579 ;     genFarPointerSet
   02F9 90s01r4B           1580 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0090)
   02FC 74 0E              1581 	mov	a,#0x0E
   02FE F0                 1582 	movx	@dptr,a
                           1583 ;	genPointerSet
                           1584 ;     genFarPointerSet
   02FF 90s01r4C           1585 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0091)
   0302 74 0E              1586 	mov	a,#0x0E
   0304 F0                 1587 	movx	@dptr,a
                           1588 ;	genPointerSet
                           1589 ;     genFarPointerSet
   0305 90s01r4D           1590 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0092)
   0308 74 0E              1591 	mov	a,#0x0E
   030A F0                 1592 	movx	@dptr,a
                           1593 ;	genPointerSet
                           1594 ;     genFarPointerSet
   030B 90s01r4E           1595 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0093)
   030E 74 0E              1596 	mov	a,#0x0E
   0310 F0                 1597 	movx	@dptr,a
                           1598 ;	genPointerSet
                           1599 ;     genFarPointerSet
   0311 90s01r4F           1600 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0094)
   0314 74 1E              1601 	mov	a,#0x1E
   0316 F0                 1602 	movx	@dptr,a
                           1603 ;	genPointerSet
                           1604 ;     genFarPointerSet
   0317 90s01r50           1605 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0095)
   031A 74 1E              1606 	mov	a,#0x1E
   031C F0                 1607 	movx	@dptr,a
                           1608 ;	genPointerSet
                           1609 ;     genFarPointerSet
   031D 90s01r51           1610 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0096)
   0320 74 1E              1611 	mov	a,#0x1E
   0322 F0                 1612 	movx	@dptr,a
                           1613 ;	genPointerSet
                           1614 ;     genFarPointerSet
   0323 90s01r52           1615 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0097)
   0326 74 1E              1616 	mov	a,#0x1E
   0328 F0                 1617 	movx	@dptr,a
                           1618 ;	genPointerSet
                           1619 ;     genFarPointerSet
   0329 90s01r53           1620 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0098)
   032C 74 01              1621 	mov	a,#0x01
   032E F0                 1622 	movx	@dptr,a
                           1623 ;	genPointerSet
                           1624 ;     genFarPointerSet
   032F 90s01r54           1625 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0099)
   0332 74 01              1626 	mov	a,#0x01
   0334 F0                 1627 	movx	@dptr,a
                           1628 ;	genPointerSet
                           1629 ;     genFarPointerSet
   0335 90s01r55           1630 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009a)
   0338 74 01              1631 	mov	a,#0x01
   033A F0                 1632 	movx	@dptr,a
                           1633 ;	genPointerSet
                           1634 ;     genFarPointerSet
   033B 90s01r56           1635 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009b)
   033E 74 01              1636 	mov	a,#0x01
   0340 F0                 1637 	movx	@dptr,a
                           1638 ;	genPointerSet
                           1639 ;     genFarPointerSet
   0341 90s01r57           1640 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009c)
   0344 74 01              1641 	mov	a,#0x01
   0346 F0                 1642 	movx	@dptr,a
                           1643 ;	genPointerSet
                           1644 ;     genFarPointerSet
   0347 90s01r58           1645 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009d)
   034A 74 01              1646 	mov	a,#0x01
   034C F0                 1647 	movx	@dptr,a
                           1648 ;	genPointerSet
                           1649 ;     genFarPointerSet
   034D 90s01r59           1650 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009e)
   0350 74 01              1651 	mov	a,#0x01
   0352 F0                 1652 	movx	@dptr,a
                           1653 ;	genPointerSet
                           1654 ;     genFarPointerSet
   0353 90s01r5A           1655 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009f)
   0356 74 01              1656 	mov	a,#0x01
   0358 F0                 1657 	movx	@dptr,a
                           1658 ;	genPointerSet
                           1659 ;     genFarPointerSet
   0359 90s01r5B           1660 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a0)
                           1661 ;	Peephole 181	changed mov to clr
                           1662 ;	genPointerSet
                           1663 ;     genFarPointerSet
                           1664 ;	Peephole 181	changed mov to clr
                           1665 ;	Peephole 219.a	removed redundant clear
                           1666 ;	genPointerSet
                           1667 ;     genFarPointerSet
                           1668 ;	Peephole 181	changed mov to clr
                           1669 ;	genPointerSet
                           1670 ;     genFarPointerSet
                           1671 ;	Peephole 181	changed mov to clr
                           1672 ;	Peephole 219.a	removed redundant clear
   035C E4                 1673 	clr	a
   035D F0                 1674 	movx	@dptr,a
   035E 90s01r5C           1675 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a1)
   0361 F0                 1676 	movx	@dptr,a
   0362 90s01r5D           1677 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a2)
                           1678 ;	Peephole 219.b	removed redundant clear
   0365 F0                 1679 	movx	@dptr,a
   0366 90s01r5E           1680 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a3)
   0369 F0                 1681 	movx	@dptr,a
                           1682 ;	genPointerSet
                           1683 ;     genFarPointerSet
   036A 90s01r5F           1684 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a4)
                           1685 ;	Peephole 181	changed mov to clr
                           1686 ;	genPointerSet
                           1687 ;     genFarPointerSet
                           1688 ;	Peephole 181	changed mov to clr
                           1689 ;	Peephole 219.a	removed redundant clear
                           1690 ;	genPointerSet
                           1691 ;     genFarPointerSet
                           1692 ;	Peephole 181	changed mov to clr
                           1693 ;	genPointerSet
                           1694 ;     genFarPointerSet
                           1695 ;	Peephole 181	changed mov to clr
                           1696 ;	Peephole 219.a	removed redundant clear
   036D E4                 1697 	clr	a
   036E F0                 1698 	movx	@dptr,a
   036F 90s01r60           1699 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a5)
   0372 F0                 1700 	movx	@dptr,a
   0373 90s01r61           1701 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a6)
                           1702 ;	Peephole 219.b	removed redundant clear
   0376 F0                 1703 	movx	@dptr,a
   0377 90s01r62           1704 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a7)
   037A F0                 1705 	movx	@dptr,a
                           1706 ;	genPointerSet
                           1707 ;     genFarPointerSet
   037B 90s01r63           1708 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a8)
                           1709 ;	Peephole 181	changed mov to clr
                           1710 ;	genPointerSet
                           1711 ;     genFarPointerSet
                           1712 ;	Peephole 181	changed mov to clr
                           1713 ;	Peephole 219.a	removed redundant clear
                           1714 ;	genPointerSet
                           1715 ;     genFarPointerSet
                           1716 ;	Peephole 181	changed mov to clr
                           1717 ;	genPointerSet
                           1718 ;     genFarPointerSet
                           1719 ;	Peephole 181	changed mov to clr
                           1720 ;	Peephole 219.a	removed redundant clear
   037E E4                 1721 	clr	a
   037F F0                 1722 	movx	@dptr,a
   0380 90s01r64           1723 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a9)
   0383 F0                 1724 	movx	@dptr,a
   0384 90s01r65           1725 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00aa)
                           1726 ;	Peephole 219.b	removed redundant clear
   0387 F0                 1727 	movx	@dptr,a
   0388 90s01r66           1728 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ab)
   038B F0                 1729 	movx	@dptr,a
                           1730 ;	genPointerSet
                           1731 ;     genFarPointerSet
   038C 90s01r67           1732 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ac)
                           1733 ;	Peephole 181	changed mov to clr
                           1734 ;	genPointerSet
                           1735 ;     genFarPointerSet
                           1736 ;	Peephole 181	changed mov to clr
                           1737 ;	Peephole 219.a	removed redundant clear
                           1738 ;	genPointerSet
                           1739 ;     genFarPointerSet
                           1740 ;	Peephole 181	changed mov to clr
                           1741 ;	genPointerSet
                           1742 ;     genFarPointerSet
                           1743 ;	Peephole 181	changed mov to clr
                           1744 ;	Peephole 219.a	removed redundant clear
   038F E4                 1745 	clr	a
   0390 F0                 1746 	movx	@dptr,a
   0391 90s01r68           1747 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ad)
   0394 F0                 1748 	movx	@dptr,a
   0395 90s01r69           1749 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ae)
                           1750 ;	Peephole 219.b	removed redundant clear
   0398 F0                 1751 	movx	@dptr,a
   0399 90s01r6A           1752 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00af)
   039C F0                 1753 	movx	@dptr,a
                           1754 ;	genPointerSet
                           1755 ;     genFarPointerSet
   039D 90s01r6B           1756 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b0)
   03A0 74 01              1757 	mov	a,#0x01
   03A2 F0                 1758 	movx	@dptr,a
                           1759 ;	genPointerSet
                           1760 ;     genFarPointerSet
   03A3 90s01r6C           1761 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b1)
   03A6 74 01              1762 	mov	a,#0x01
   03A8 F0                 1763 	movx	@dptr,a
                           1764 ;	genPointerSet
                           1765 ;     genFarPointerSet
   03A9 90s01r6D           1766 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b2)
   03AC 74 01              1767 	mov	a,#0x01
   03AE F0                 1768 	movx	@dptr,a
                           1769 ;	genPointerSet
                           1770 ;     genFarPointerSet
   03AF 90s01r6E           1771 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b3)
   03B2 74 01              1772 	mov	a,#0x01
   03B4 F0                 1773 	movx	@dptr,a
                           1774 ;	genPointerSet
                           1775 ;     genFarPointerSet
   03B5 90s01r6F           1776 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b4)
                           1777 ;	Peephole 181	changed mov to clr
                           1778 ;	genPointerSet
                           1779 ;     genFarPointerSet
                           1780 ;	Peephole 181	changed mov to clr
                           1781 ;	Peephole 219.a	removed redundant clear
                           1782 ;	genPointerSet
                           1783 ;     genFarPointerSet
                           1784 ;	Peephole 181	changed mov to clr
                           1785 ;	genPointerSet
                           1786 ;     genFarPointerSet
                           1787 ;	Peephole 181	changed mov to clr
                           1788 ;	Peephole 219.a	removed redundant clear
   03B8 E4                 1789 	clr	a
   03B9 F0                 1790 	movx	@dptr,a
   03BA 90s01r70           1791 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b5)
   03BD F0                 1792 	movx	@dptr,a
   03BE 90s01r71           1793 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b6)
                           1794 ;	Peephole 219.b	removed redundant clear
   03C1 F0                 1795 	movx	@dptr,a
   03C2 90s01r72           1796 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b7)
   03C5 F0                 1797 	movx	@dptr,a
                           1798 ;	genPointerSet
                           1799 ;     genFarPointerSet
   03C6 90s01r73           1800 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b8)
                           1801 ;	Peephole 181	changed mov to clr
                           1802 ;	genPointerSet
                           1803 ;     genFarPointerSet
                           1804 ;	Peephole 181	changed mov to clr
                           1805 ;	Peephole 219.a	removed redundant clear
                           1806 ;	genPointerSet
                           1807 ;     genFarPointerSet
                           1808 ;	Peephole 181	changed mov to clr
   03C9 E4                 1809 	clr	a
   03CA F0                 1810 	movx	@dptr,a
   03CB 90s01r74           1811 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b9)
   03CE F0                 1812 	movx	@dptr,a
   03CF 90s01r75           1813 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ba)
                           1814 ;	Peephole 219.b	removed redundant clear
   03D2 F0                 1815 	movx	@dptr,a
                           1816 ;	genPointerSet
                           1817 ;     genFarPointerSet
   03D3 90s01r76           1818 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bb)
   03D6 74 10              1819 	mov	a,#0x10
   03D8 F0                 1820 	movx	@dptr,a
                           1821 ;	genPointerSet
                           1822 ;     genFarPointerSet
   03D9 90s01r77           1823 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bc)
   03DC 74 18              1824 	mov	a,#0x18
   03DE F0                 1825 	movx	@dptr,a
                           1826 ;	genPointerSet
                           1827 ;     genFarPointerSet
   03DF 90s01r78           1828 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bd)
   03E2 74 0C              1829 	mov	a,#0x0C
   03E4 F0                 1830 	movx	@dptr,a
                           1831 ;	genPointerSet
                           1832 ;     genFarPointerSet
   03E5 90s01r79           1833 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00be)
   03E8 74 06              1834 	mov	a,#0x06
   03EA F0                 1835 	movx	@dptr,a
                           1836 ;	genPointerSet
                           1837 ;     genFarPointerSet
   03EB 90s01r7A           1838 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bf)
   03EE 74 03              1839 	mov	a,#0x03
   03F0 F0                 1840 	movx	@dptr,a
                           1841 ;	genPointerSet
                           1842 ;     genFarPointerSet
   03F1 90s01r7B           1843 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c0)
   03F4 74 1F              1844 	mov	a,#0x1F
   03F6 F0                 1845 	movx	@dptr,a
                           1846 ;	genPointerSet
                           1847 ;     genFarPointerSet
   03F7 90s01r7C           1848 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c1)
   03FA 74 1F              1849 	mov	a,#0x1F
   03FC F0                 1850 	movx	@dptr,a
                           1851 ;	genPointerSet
                           1852 ;     genFarPointerSet
   03FD 90s01r7D           1853 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c2)
                           1854 ;	Peephole 181	changed mov to clr
                           1855 ;	genPointerSet
                           1856 ;     genFarPointerSet
                           1857 ;	Peephole 181	changed mov to clr
                           1858 ;	Peephole 219.a	removed redundant clear
                           1859 ;	genPointerSet
                           1860 ;     genFarPointerSet
                           1861 ;	Peephole 181	changed mov to clr
                           1862 ;	genPointerSet
                           1863 ;     genFarPointerSet
                           1864 ;	Peephole 181	changed mov to clr
                           1865 ;	Peephole 219.a	removed redundant clear
   0400 E4                 1866 	clr	a
   0401 F0                 1867 	movx	@dptr,a
   0402 90s01r7E           1868 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c3)
   0405 F0                 1869 	movx	@dptr,a
   0406 90s01r7F           1870 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c4)
                           1871 ;	Peephole 219.b	removed redundant clear
   0409 F0                 1872 	movx	@dptr,a
   040A 90s01r80           1873 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c5)
   040D F0                 1874 	movx	@dptr,a
                           1875 ;	genPointerSet
                           1876 ;     genFarPointerSet
   040E 90s01r81           1877 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c6)
                           1878 ;	Peephole 181	changed mov to clr
   0411 E4                 1879 	clr	a
   0412 F0                 1880 	movx	@dptr,a
                           1881 ;	genPointerSet
                           1882 ;     genFarPointerSet
   0413 90s01r82           1883 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c7)
   0416 74 1F              1884 	mov	a,#0x1F
   0418 F0                 1885 	movx	@dptr,a
                           1886 ;	genPointerSet
                           1887 ;     genFarPointerSet
   0419 90s01r83           1888 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c8)
   041C 74 1E              1889 	mov	a,#0x1E
   041E F0                 1890 	movx	@dptr,a
                           1891 ;	genPointerSet
                           1892 ;     genFarPointerSet
   041F 90s01r84           1893 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c9)
   0422 74 1E              1894 	mov	a,#0x1E
   0424 F0                 1895 	movx	@dptr,a
                           1896 ;	genPointerSet
                           1897 ;     genFarPointerSet
   0425 90s01r85           1898 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ca)
                           1899 ;	Peephole 181	changed mov to clr
                           1900 ;	genPointerSet
                           1901 ;     genFarPointerSet
                           1902 ;	Peephole 181	changed mov to clr
                           1903 ;	Peephole 219.a	removed redundant clear
                           1904 ;	genPointerSet
                           1905 ;     genFarPointerSet
                           1906 ;	Peephole 181	changed mov to clr
                           1907 ;	genPointerSet
                           1908 ;     genFarPointerSet
                           1909 ;	Peephole 181	changed mov to clr
                           1910 ;	Peephole 219.a	removed redundant clear
   0428 E4                 1911 	clr	a
   0429 F0                 1912 	movx	@dptr,a
   042A 90s01r86           1913 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cb)
   042D F0                 1914 	movx	@dptr,a
   042E 90s01r87           1915 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cc)
                           1916 ;	Peephole 219.b	removed redundant clear
   0431 F0                 1917 	movx	@dptr,a
   0432 90s01r88           1918 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cd)
   0435 F0                 1919 	movx	@dptr,a
                           1920 ;	genPointerSet
                           1921 ;     genFarPointerSet
   0436 90s01r89           1922 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ce)
                           1923 ;	Peephole 181	changed mov to clr
   0439 E4                 1924 	clr	a
   043A F0                 1925 	movx	@dptr,a
                           1926 ;	genPointerSet
                           1927 ;     genFarPointerSet
   043B 90s01r8A           1928 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cf)
   043E 74 1F              1929 	mov	a,#0x1F
   0440 F0                 1930 	movx	@dptr,a
                           1931 ;	genPointerSet
                           1932 ;     genFarPointerSet
   0441 90s01r8B           1933 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d0)
   0444 74 01              1934 	mov	a,#0x01
   0446 F0                 1935 	movx	@dptr,a
                           1936 ;	genPointerSet
                           1937 ;     genFarPointerSet
   0447 90s01r8C           1938 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d1)
   044A 74 01              1939 	mov	a,#0x01
   044C F0                 1940 	movx	@dptr,a
                           1941 ;	genPointerSet
                           1942 ;     genFarPointerSet
   044D 90s01r8D           1943 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d2)
   0450 74 01              1944 	mov	a,#0x01
   0452 F0                 1945 	movx	@dptr,a
                           1946 ;	genPointerSet
                           1947 ;     genFarPointerSet
   0453 90s01r8E           1948 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d3)
   0456 74 03              1949 	mov	a,#0x03
   0458 F0                 1950 	movx	@dptr,a
                           1951 ;	genPointerSet
                           1952 ;     genFarPointerSet
   0459 90s01r8F           1953 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d4)
   045C 74 06              1954 	mov	a,#0x06
   045E F0                 1955 	movx	@dptr,a
                           1956 ;	genPointerSet
                           1957 ;     genFarPointerSet
   045F 90s01r90           1958 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d5)
   0462 74 0C              1959 	mov	a,#0x0C
   0464 F0                 1960 	movx	@dptr,a
                           1961 ;	genPointerSet
                           1962 ;     genFarPointerSet
   0465 90s01r91           1963 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d6)
   0468 74 18              1964 	mov	a,#0x18
   046A F0                 1965 	movx	@dptr,a
                           1966 ;	genPointerSet
                           1967 ;     genFarPointerSet
   046B 90s01r92           1968 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d7)
   046E 74 10              1969 	mov	a,#0x10
   0470 F0                 1970 	movx	@dptr,a
                           1971 ;	genPointerSet
                           1972 ;     genFarPointerSet
   0471 90s01r93           1973 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d8)
                           1974 ;	Peephole 181	changed mov to clr
                           1975 ;	genPointerSet
                           1976 ;     genFarPointerSet
                           1977 ;	Peephole 181	changed mov to clr
                           1978 ;	Peephole 219.a	removed redundant clear
                           1979 ;	genPointerSet
                           1980 ;     genFarPointerSet
                           1981 ;	Peephole 181	changed mov to clr
                           1982 ;	genPointerSet
                           1983 ;     genFarPointerSet
                           1984 ;	Peephole 181	changed mov to clr
                           1985 ;	Peephole 219.a	removed redundant clear
   0474 E4                 1986 	clr	a
   0475 F0                 1987 	movx	@dptr,a
   0476 90s01r94           1988 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d9)
   0479 F0                 1989 	movx	@dptr,a
   047A 90s01r95           1990 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00da)
                           1991 ;	Peephole 219.b	removed redundant clear
   047D F0                 1992 	movx	@dptr,a
   047E 90s01r96           1993 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00db)
   0481 F0                 1994 	movx	@dptr,a
                           1995 ;	genPointerSet
                           1996 ;     genFarPointerSet
   0482 90s01r97           1997 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00dc)
                           1998 ;	Peephole 181	changed mov to clr
                           1999 ;	genPointerSet
                           2000 ;     genFarPointerSet
                           2001 ;	Peephole 181	changed mov to clr
                           2002 ;	Peephole 219.a	removed redundant clear
                           2003 ;	genPointerSet
                           2004 ;     genFarPointerSet
                           2005 ;	Peephole 181	changed mov to clr
                           2006 ;	genPointerSet
                           2007 ;     genFarPointerSet
                           2008 ;	Peephole 181	changed mov to clr
                           2009 ;	Peephole 219.a	removed redundant clear
   0485 E4                 2010 	clr	a
   0486 F0                 2011 	movx	@dptr,a
   0487 90s01r98           2012 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00dd)
   048A F0                 2013 	movx	@dptr,a
   048B 90s01r99           2014 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00de)
                           2015 ;	Peephole 219.b	removed redundant clear
   048E F0                 2016 	movx	@dptr,a
   048F 90s01r9A           2017 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00df)
   0492 F0                 2018 	movx	@dptr,a
                           2019 ;--------------------------------------------------------
                           2020 ; Home
                           2021 ;--------------------------------------------------------
                           2022 	.area HOME    (CODE)
                           2023 	.area CSEG    (CODE)
                           2024 ;--------------------------------------------------------
                           2025 ; code
                           2026 ;--------------------------------------------------------
                           2027 	.area CSEG    (CODE)
                           2028 ;------------------------------------------------------------
                           2029 ;Allocation info for local variables in function 'lcd_print_number'
                           2030 ;------------------------------------------------------------
                           2031 ;sloc0                     Allocated with name '_lcd_print_number_sloc0_1_0'
                           2032 ;sloc1                     Allocated with name '_lcd_print_number_sloc1_1_0'
                           2033 ;sloc2                     Allocated with name '_lcd_print_number_sloc2_1_0'
                           2034 ;sloc3                     Allocated with name '_lcd_print_number_sloc3_1_0'
                           2035 ;display_width             Allocated with name '_lcd_print_number_PARM_2'
                           2036 ;number                    Allocated with name '_lcd_print_number_number_1_1'
                           2037 ;temp_ascii_store          Allocated with name '_lcd_print_number_temp_ascii_store_1_1'
                           2038 ;temp_data                 Allocated with name '_lcd_print_number_temp_data_1_1'
                           2039 ;counter                   Allocated with name '_lcd_print_number_counter_1_1'
                           2040 ;value_check               Allocated with name '_lcd_print_number_value_check_1_1'
                           2041 ;------------------------------------------------------------
                    0000   2042 	G$lcd_print_number$0$0 ==.
                    0000   2043 	C$lcd.c$19$0$0 ==.
                           2044 ;	lcd.c:19: void lcd_print_number(__xdata int32_t number,__xdata uint8_t display_width)
                           2045 ;	-----------------------------------------
                           2046 ;	 function lcd_print_number
                           2047 ;	-----------------------------------------
   0000                    2048 _lcd_print_number:
                    0002   2049 	ar2 = 0x02
                    0003   2050 	ar3 = 0x03
                    0004   2051 	ar4 = 0x04
                    0005   2052 	ar5 = 0x05
                    0006   2053 	ar6 = 0x06
                    0007   2054 	ar7 = 0x07
                    0000   2055 	ar0 = 0x00
                    0001   2056 	ar1 = 0x01
                           2057 ;	genReceive
   0000 AA 82              2058 	mov	r2,dpl
   0002 AB 83              2059 	mov	r3,dph
   0004 AC F0              2060 	mov	r4,b
   0006 FD                 2061 	mov	r5,a
   0007 90s00r09           2062 	mov	dptr,#_lcd_print_number_number_1_1
   000A EA                 2063 	mov	a,r2
   000B F0                 2064 	movx	@dptr,a
   000C A3                 2065 	inc	dptr
   000D EB                 2066 	mov	a,r3
   000E F0                 2067 	movx	@dptr,a
   000F A3                 2068 	inc	dptr
   0010 EC                 2069 	mov	a,r4
   0011 F0                 2070 	movx	@dptr,a
   0012 A3                 2071 	inc	dptr
   0013 ED                 2072 	mov	a,r5
   0014 F0                 2073 	movx	@dptr,a
                    0015   2074 	C$lcd.c$24$1$1 ==.
                           2075 ;	lcd.c:24: for(counter=display_width;counter>1;counter--)
                           2076 ;	genAssign
   0015 90s00r08           2077 	mov	dptr,#_lcd_print_number_PARM_2
   0018 E0                 2078 	movx	a,@dptr
   0019 F5*00              2079 	mov	_lcd_print_number_sloc0_1_0,a
                           2080 ;	genAssign
   001B 90s00r09           2081 	mov	dptr,#_lcd_print_number_number_1_1
   001E E0                 2082 	movx	a,@dptr
   001F FB                 2083 	mov	r3,a
   0020 A3                 2084 	inc	dptr
   0021 E0                 2085 	movx	a,@dptr
   0022 FC                 2086 	mov	r4,a
   0023 A3                 2087 	inc	dptr
   0024 E0                 2088 	movx	a,@dptr
   0025 FD                 2089 	mov	r5,a
   0026 A3                 2090 	inc	dptr
   0027 E0                 2091 	movx	a,@dptr
   0028 FE                 2092 	mov	r6,a
                           2093 ;	genAssign
   0029 8B 07              2094 	mov	ar7,r3
   002B 8C 00              2095 	mov	ar0,r4
   002D 8D 01              2096 	mov	ar1,r5
   002F 8E 02              2097 	mov	ar2,r6
                           2098 ;	genCmpGt
                           2099 ;	genCmp
   0031 C3                 2100 	clr	c
   0032 74 09              2101 	mov	a,#0x09
   0034 9F                 2102 	subb	a,r7
                           2103 ;	Peephole 181	changed mov to clr
   0035 E4                 2104 	clr	a
   0036 98                 2105 	subb	a,r0
                           2106 ;	Peephole 181	changed mov to clr
   0037 E4                 2107 	clr	a
   0038 99                 2108 	subb	a,r1
                           2109 ;	Peephole 181	changed mov to clr
   0039 E4                 2110 	clr	a
   003A 9A                 2111 	subb	a,r2
   003B E4                 2112 	clr	a
   003C 33                 2113 	rlc	a
   003D F5*01              2114 	mov	_lcd_print_number_sloc1_1_0,a
                           2115 ;	genAssign
   003F 8B 07              2116 	mov	ar7,r3
   0041 8C 00              2117 	mov	ar0,r4
   0043 8D 01              2118 	mov	ar1,r5
   0045 8E 02              2119 	mov	ar2,r6
                           2120 ;	genCmpGt
                           2121 ;	genCmp
   0047 C3                 2122 	clr	c
   0048 74 63              2123 	mov	a,#0x63
   004A 9F                 2124 	subb	a,r7
                           2125 ;	Peephole 181	changed mov to clr
   004B E4                 2126 	clr	a
   004C 98                 2127 	subb	a,r0
                           2128 ;	Peephole 181	changed mov to clr
   004D E4                 2129 	clr	a
   004E 99                 2130 	subb	a,r1
                           2131 ;	Peephole 181	changed mov to clr
   004F E4                 2132 	clr	a
   0050 9A                 2133 	subb	a,r2
   0051 E4                 2134 	clr	a
   0052 33                 2135 	rlc	a
   0053 FA                 2136 	mov	r2,a
                           2137 ;	genAssign
                           2138 ;	genCmpGt
                           2139 ;	genCmp
   0054 C3                 2140 	clr	c
   0055 74 E7              2141 	mov	a,#0xE7
   0057 9B                 2142 	subb	a,r3
   0058 74 03              2143 	mov	a,#0x03
   005A 9C                 2144 	subb	a,r4
                           2145 ;	Peephole 181	changed mov to clr
   005B E4                 2146 	clr	a
   005C 9D                 2147 	subb	a,r5
                           2148 ;	Peephole 181	changed mov to clr
   005D E4                 2149 	clr	a
   005E 9E                 2150 	subb	a,r6
   005F E4                 2151 	clr	a
   0060 33                 2152 	rlc	a
   0061 FB                 2153 	mov	r3,a
                           2154 ;	genAssign
   0062 AC*00              2155 	mov	r4,_lcd_print_number_sloc0_1_0
   0064                    2156 00114$:
                           2157 ;	genCmpGt
                           2158 ;	genCmp
   0064 C3                 2159 	clr	c
                           2160 ;	Peephole 159	avoided xrl during execution
   0065 74 81              2161 	mov	a,#(0x01 ^ 0x80)
   0067 8C F0              2162 	mov	b,r4
   0069 63 F0 80           2163 	xrl	b,#0x80
   006C 95 F0              2164 	subb	a,b
                           2165 ;	genIfxJump
                           2166 ;	Peephole 108.a	removed ljmp by inverse jump logic
   006E 50 3F              2167 	jnc	00132$
                           2168 ;	Peephole 300	removed redundant label 00139$
                    0070   2169 	C$lcd.c$26$2$2 ==.
                           2170 ;	lcd.c:26: lcd_busy_wait();
                           2171 ;	genCall
   0070 C0 02              2172 	push	ar2
   0072 C0 03              2173 	push	ar3
   0074 C0 04              2174 	push	ar4
   0076 12s02r59           2175 	lcall	_lcd_busy_wait
   0079 D0 04              2176 	pop	ar4
   007B D0 03              2177 	pop	ar3
   007D D0 02              2178 	pop	ar2
                    007F   2179 	C$lcd.c$27$2$2 ==.
                           2180 ;	lcd.c:27: switch(counter)
                           2181 ;	genCmpEq
                           2182 ;	gencjneshort
   007F BC 02 02           2183 	cjne	r4,#0x02,00140$
                           2184 ;	Peephole 112.b	changed ljmp to sjmp
   0082 80 1E              2185 	sjmp	00107$
   0084                    2186 00140$:
                           2187 ;	genCmpEq
                           2188 ;	gencjneshort
   0084 BC 03 02           2189 	cjne	r4,#0x03,00141$
                           2190 ;	Peephole 112.b	changed ljmp to sjmp
   0087 80 0E              2191 	sjmp	00104$
   0089                    2192 00141$:
                           2193 ;	genCmpEq
                           2194 ;	gencjneshort
                           2195 ;	Peephole 112.b	changed ljmp to sjmp
                           2196 ;	Peephole 198.b	optimized misc jump sequence
   0089 BC 04 20           2197 	cjne	r4,#0x04,00116$
                           2198 ;	Peephole 200.b	removed redundant sjmp
                           2199 ;	Peephole 300	removed redundant label 00142$
                           2200 ;	Peephole 300	removed redundant label 00143$
                    008C   2201 	C$lcd.c$32$4$4 ==.
                           2202 ;	lcd.c:32: if(number<=value_check)
                           2203 ;	genIfx
   008C EB                 2204 	mov	a,r3
                           2205 ;	genIfxJump
                           2206 ;	Peephole 108.b	removed ljmp by inverse jump logic
   008D 70 1D              2207 	jnz	00116$
                           2208 ;	Peephole 300	removed redundant label 00144$
                    008F   2209 	C$lcd.c$34$5$5 ==.
                           2210 ;	lcd.c:34: *(lcd_data_write_address) = '0';
                           2211 ;	genAssign
                           2212 ;	Peephole 182.b	used 16 bit load of dptr
   008F 90 A0 00           2213 	mov	dptr,#0xA000
                           2214 ;	genPointerSet
                           2215 ;     genFarPointerSet
   0092 74 30              2216 	mov	a,#0x30
   0094 F0                 2217 	movx	@dptr,a
                    0095   2218 	C$lcd.c$36$4$4 ==.
                           2219 ;	lcd.c:36: break;
                    0095   2220 	C$lcd.c$39$3$3 ==.
                           2221 ;	lcd.c:39: case 3:
                           2222 ;	Peephole 112.b	changed ljmp to sjmp
   0095 80 15              2223 	sjmp	00116$
   0097                    2224 00104$:
                    0097   2225 	C$lcd.c$42$4$6 ==.
                           2226 ;	lcd.c:42: if(number<=value_check)
                           2227 ;	genIfx
   0097 EA                 2228 	mov	a,r2
                           2229 ;	genIfxJump
                           2230 ;	Peephole 108.b	removed ljmp by inverse jump logic
   0098 70 12              2231 	jnz	00116$
                           2232 ;	Peephole 300	removed redundant label 00145$
                    009A   2233 	C$lcd.c$44$5$7 ==.
                           2234 ;	lcd.c:44: *(lcd_data_write_address) = '0';
                           2235 ;	genAssign
                           2236 ;	Peephole 182.b	used 16 bit load of dptr
   009A 90 A0 00           2237 	mov	dptr,#0xA000
                           2238 ;	genPointerSet
                           2239 ;     genFarPointerSet
   009D 74 30              2240 	mov	a,#0x30
   009F F0                 2241 	movx	@dptr,a
                    00A0   2242 	C$lcd.c$46$4$6 ==.
                           2243 ;	lcd.c:46: break;
                    00A0   2244 	C$lcd.c$49$3$3 ==.
                           2245 ;	lcd.c:49: case 2:
                           2246 ;	Peephole 112.b	changed ljmp to sjmp
   00A0 80 0A              2247 	sjmp	00116$
   00A2                    2248 00107$:
                    00A2   2249 	C$lcd.c$52$4$8 ==.
                           2250 ;	lcd.c:52: if(number<=value_check)
                           2251 ;	genIfx
   00A2 E5*01              2252 	mov	a,_lcd_print_number_sloc1_1_0
                           2253 ;	genIfxJump
                           2254 ;	Peephole 108.b	removed ljmp by inverse jump logic
   00A4 70 06              2255 	jnz	00116$
                           2256 ;	Peephole 300	removed redundant label 00146$
                    00A6   2257 	C$lcd.c$54$5$9 ==.
                           2258 ;	lcd.c:54: *(lcd_data_write_address) = '0';
                           2259 ;	genAssign
                           2260 ;	Peephole 182.b	used 16 bit load of dptr
   00A6 90 A0 00           2261 	mov	dptr,#0xA000
                           2262 ;	genPointerSet
                           2263 ;     genFarPointerSet
   00A9 74 30              2264 	mov	a,#0x30
   00AB F0                 2265 	movx	@dptr,a
                    00AC   2266 	C$lcd.c$58$2$2 ==.
                           2267 ;	lcd.c:58: }
   00AC                    2268 00116$:
                    00AC   2269 	C$lcd.c$24$1$1 ==.
                           2270 ;	lcd.c:24: for(counter=display_width;counter>1;counter--)
                           2271 ;	genMinus
                           2272 ;	genMinusDec
   00AC 1C                 2273 	dec	r4
                    00AD   2274 	C$lcd.c$60$1$1 ==.
                           2275 ;	lcd.c:60: do
                           2276 ;	Peephole 112.b	changed ljmp to sjmp
   00AD 80 B5              2277 	sjmp	00114$
   00AF                    2278 00132$:
                           2279 ;	genAssign
   00AF 8C 02              2280 	mov	ar2,r4
   00B1                    2281 00111$:
                    00B1   2282 	C$lcd.c$62$2$10 ==.
                           2283 ;	lcd.c:62: temp_ascii_store[counter]='0'+ number%10;
                           2284 ;	genPlus
                           2285 ;	Peephole 236.g	used r2 instead of ar2
   00B1 EA                 2286 	mov	a,r2
   00B2 24r0D              2287 	add	a,#_lcd_print_number_temp_ascii_store_1_1
   00B4 FE                 2288 	mov	r6,a
                           2289 ;	Peephole 181	changed mov to clr
   00B5 E4                 2290 	clr	a
   00B6 34s00              2291 	addc	a,#(_lcd_print_number_temp_ascii_store_1_1 >> 8)
   00B8 FF                 2292 	mov	r7,a
                           2293 ;	genAssign
   00B9 90s00r09           2294 	mov	dptr,#_lcd_print_number_number_1_1
   00BC E0                 2295 	movx	a,@dptr
   00BD F5*02              2296 	mov	_lcd_print_number_sloc3_1_0,a
   00BF A3                 2297 	inc	dptr
   00C0 E0                 2298 	movx	a,@dptr
   00C1 F5*03              2299 	mov	(_lcd_print_number_sloc3_1_0 + 1),a
   00C3 A3                 2300 	inc	dptr
   00C4 E0                 2301 	movx	a,@dptr
   00C5 F5*04              2302 	mov	(_lcd_print_number_sloc3_1_0 + 2),a
   00C7 A3                 2303 	inc	dptr
   00C8 E0                 2304 	movx	a,@dptr
   00C9 F5*05              2305 	mov	(_lcd_print_number_sloc3_1_0 + 3),a
                           2306 ;	genAssign
   00CB 90s00r00           2307 	mov	dptr,#__modslong_PARM_2
   00CE 74 0A              2308 	mov	a,#0x0A
   00D0 F0                 2309 	movx	@dptr,a
   00D1 E4                 2310 	clr	a
   00D2 A3                 2311 	inc	dptr
   00D3 F0                 2312 	movx	@dptr,a
   00D4 A3                 2313 	inc	dptr
   00D5 F0                 2314 	movx	@dptr,a
   00D6 A3                 2315 	inc	dptr
   00D7 F0                 2316 	movx	@dptr,a
                           2317 ;	genCall
   00D8 85*02 82           2318 	mov	dpl,_lcd_print_number_sloc3_1_0
   00DB 85*03 83           2319 	mov	dph,(_lcd_print_number_sloc3_1_0 + 1)
   00DE 85*04 F0           2320 	mov	b,(_lcd_print_number_sloc3_1_0 + 2)
   00E1 E5*05              2321 	mov	a,(_lcd_print_number_sloc3_1_0 + 3)
   00E3 C0 02              2322 	push	ar2
   00E5 C0 06              2323 	push	ar6
   00E7 C0 07              2324 	push	ar7
   00E9 12s00r00           2325 	lcall	__modslong
   00EC A9 82              2326 	mov	r1,dpl
   00EE AB 83              2327 	mov	r3,dph
   00F0 AC F0              2328 	mov	r4,b
   00F2 FD                 2329 	mov	r5,a
   00F3 D0 07              2330 	pop	ar7
   00F5 D0 06              2331 	pop	ar6
   00F7 D0 02              2332 	pop	ar2
                           2333 ;	genCast
                           2334 ;	genPlus
                           2335 ;     genPlusIncr
   00F9 74 30              2336 	mov	a,#0x30
                           2337 ;	Peephole 236.a	used r1 instead of ar1
   00FB 29                 2338 	add	a,r1
                           2339 ;	genPointerSet
                           2340 ;     genFarPointerSet
   00FC F9                 2341 	mov	r1,a
   00FD 8E 82              2342 	mov	dpl,r6
   00FF 8F 83              2343 	mov	dph,r7
                           2344 ;	Peephole 136	removed redundant move
   0101 F0                 2345 	movx	@dptr,a
                    0102   2346 	C$lcd.c$63$1$1 ==.
                           2347 ;	lcd.c:63: number/=10;
                           2348 ;	genAssign
   0102 90s00r00           2349 	mov	dptr,#__divslong_PARM_2
   0105 74 0A              2350 	mov	a,#0x0A
   0107 F0                 2351 	movx	@dptr,a
   0108 E4                 2352 	clr	a
   0109 A3                 2353 	inc	dptr
   010A F0                 2354 	movx	@dptr,a
   010B A3                 2355 	inc	dptr
   010C F0                 2356 	movx	@dptr,a
   010D A3                 2357 	inc	dptr
   010E F0                 2358 	movx	@dptr,a
                           2359 ;	genCall
   010F 85*02 82           2360 	mov	dpl,_lcd_print_number_sloc3_1_0
   0112 85*03 83           2361 	mov	dph,(_lcd_print_number_sloc3_1_0 + 1)
   0115 85*04 F0           2362 	mov	b,(_lcd_print_number_sloc3_1_0 + 2)
   0118 E5*05              2363 	mov	a,(_lcd_print_number_sloc3_1_0 + 3)
   011A C0 02              2364 	push	ar2
   011C 12s00r00           2365 	lcall	__divslong
   011F AB 82              2366 	mov	r3,dpl
   0121 AC 83              2367 	mov	r4,dph
   0123 AD F0              2368 	mov	r5,b
   0125 FE                 2369 	mov	r6,a
   0126 D0 02              2370 	pop	ar2
                           2371 ;	genAssign
   0128 90s00r09           2372 	mov	dptr,#_lcd_print_number_number_1_1
   012B EB                 2373 	mov	a,r3
   012C F0                 2374 	movx	@dptr,a
   012D A3                 2375 	inc	dptr
   012E EC                 2376 	mov	a,r4
   012F F0                 2377 	movx	@dptr,a
   0130 A3                 2378 	inc	dptr
   0131 ED                 2379 	mov	a,r5
   0132 F0                 2380 	movx	@dptr,a
   0133 A3                 2381 	inc	dptr
   0134 EE                 2382 	mov	a,r6
   0135 F0                 2383 	movx	@dptr,a
                    0136   2384 	C$lcd.c$64$2$10 ==.
                           2385 ;	lcd.c:64: counter++;
                           2386 ;	genPlus
                           2387 ;     genPlusIncr
   0136 0A                 2388 	inc	r2
                    0137   2389 	C$lcd.c$65$1$1 ==.
                           2390 ;	lcd.c:65: }while(number>0);
                           2391 ;	genAssign
   0137 90s00r09           2392 	mov	dptr,#_lcd_print_number_number_1_1
   013A E0                 2393 	movx	a,@dptr
   013B FB                 2394 	mov	r3,a
   013C A3                 2395 	inc	dptr
   013D E0                 2396 	movx	a,@dptr
   013E FC                 2397 	mov	r4,a
   013F A3                 2398 	inc	dptr
   0140 E0                 2399 	movx	a,@dptr
   0141 FD                 2400 	mov	r5,a
   0142 A3                 2401 	inc	dptr
   0143 E0                 2402 	movx	a,@dptr
   0144 FE                 2403 	mov	r6,a
                           2404 ;	genCmpGt
                           2405 ;	genCmp
   0145 C3                 2406 	clr	c
                           2407 ;	Peephole 181	changed mov to clr
   0146 E4                 2408 	clr	a
   0147 9B                 2409 	subb	a,r3
                           2410 ;	Peephole 181	changed mov to clr
   0148 E4                 2411 	clr	a
   0149 9C                 2412 	subb	a,r4
                           2413 ;	Peephole 181	changed mov to clr
   014A E4                 2414 	clr	a
   014B 9D                 2415 	subb	a,r5
                           2416 ;	Peephole 159	avoided xrl during execution
   014C 74 80              2417 	mov	a,#(0x00 ^ 0x80)
   014E 8E F0              2418 	mov	b,r6
   0150 63 F0 80           2419 	xrl	b,#0x80
   0153 95 F0              2420 	subb	a,b
                           2421 ;	genIfxJump
   0155 50 03              2422 	jnc	00147$
   0157 02s00rB1           2423 	ljmp	00111$
   015A                    2424 00147$:
                    015A   2425 	C$lcd.c$66$1$1 ==.
                           2426 ;	lcd.c:66: for(counter-=1;counter>0;counter--)
                           2427 ;	genMinus
                           2428 ;	genMinusDec
   015A EA                 2429 	mov	a,r2
   015B 14                 2430 	dec	a
                           2431 ;	genAssign
   015C 90s00r17           2432 	mov	dptr,#_lcd_print_number_counter_1_1
   015F F0                 2433 	movx	@dptr,a
                           2434 ;	genAssign
   0160 90s00r17           2435 	mov	dptr,#_lcd_print_number_counter_1_1
   0163 E0                 2436 	movx	a,@dptr
   0164 FA                 2437 	mov	r2,a
   0165                    2438 00118$:
                           2439 ;	genCmpGt
                           2440 ;	genCmp
   0165 C3                 2441 	clr	c
                           2442 ;	Peephole 159	avoided xrl during execution
   0166 74 80              2443 	mov	a,#(0x00 ^ 0x80)
   0168 8A F0              2444 	mov	b,r2
   016A 63 F0 80           2445 	xrl	b,#0x80
   016D 95 F0              2446 	subb	a,b
                           2447 ;	genIfxJump
                           2448 ;	Peephole 108.a	removed ljmp by inverse jump logic
   016F 50 1F              2449 	jnc	00121$
                           2450 ;	Peephole 300	removed redundant label 00148$
                    0171   2451 	C$lcd.c$68$2$11 ==.
                           2452 ;	lcd.c:68: lcd_busy_wait();
                           2453 ;	genCall
   0171 C0 02              2454 	push	ar2
   0173 12s02r59           2455 	lcall	_lcd_busy_wait
   0176 D0 02              2456 	pop	ar2
                    0178   2457 	C$lcd.c$69$2$11 ==.
                           2458 ;	lcd.c:69: *(lcd_data_write_address) = temp_ascii_store[counter];
                           2459 ;	genAssign
   0178 7B 00              2460 	mov	r3,#0x00
   017A 7C A0              2461 	mov	r4,#0xA0
                           2462 ;	genPlus
                           2463 ;	Peephole 236.g	used r2 instead of ar2
   017C EA                 2464 	mov	a,r2
   017D 24r0D              2465 	add	a,#_lcd_print_number_temp_ascii_store_1_1
   017F F5 82              2466 	mov	dpl,a
                           2467 ;	Peephole 181	changed mov to clr
   0181 E4                 2468 	clr	a
   0182 34s00              2469 	addc	a,#(_lcd_print_number_temp_ascii_store_1_1 >> 8)
   0184 F5 83              2470 	mov	dph,a
                           2471 ;	genPointerGet
                           2472 ;	genFarPointerGet
   0186 E0                 2473 	movx	a,@dptr
                           2474 ;	genPointerSet
                           2475 ;     genFarPointerSet
   0187 FD                 2476 	mov	r5,a
   0188 8B 82              2477 	mov	dpl,r3
   018A 8C 83              2478 	mov	dph,r4
                           2479 ;	Peephole 136	removed redundant move
   018C F0                 2480 	movx	@dptr,a
                    018D   2481 	C$lcd.c$66$1$1 ==.
                           2482 ;	lcd.c:66: for(counter-=1;counter>0;counter--)
                           2483 ;	genMinus
                           2484 ;	genMinusDec
   018D 1A                 2485 	dec	r2
                           2486 ;	Peephole 112.b	changed ljmp to sjmp
   018E 80 D5              2487 	sjmp	00118$
   0190                    2488 00121$:
                    0190   2489 	C$lcd.c$71$1$1 ==.
                           2490 ;	lcd.c:71: return;
                           2491 ;	genRet
                           2492 ;	Peephole 300	removed redundant label 00122$
                    0190   2493 	C$lcd.c$72$1$1 ==.
                    0190   2494 	XG$lcd_print_number$0$0 ==.
   0190 22                 2495 	ret
                           2496 ;------------------------------------------------------------
                           2497 ;Allocation info for local variables in function 'lcd_init'
                           2498 ;------------------------------------------------------------
                           2499 ;------------------------------------------------------------
                    0191   2500 	G$lcd_init$0$0 ==.
                    0191   2501 	C$lcd.c$78$1$1 ==.
                           2502 ;	lcd.c:78: void lcd_init(void)
                           2503 ;	-----------------------------------------
                           2504 ;	 function lcd_init
                           2505 ;	-----------------------------------------
   0191                    2506 _lcd_init:
                    0191   2507 	C$lcd.c$80$1$1 ==.
                           2508 ;	lcd.c:80: ms_delay(15);
                           2509 ;	genCall
                           2510 ;	Peephole 3.a	changed mov to clr
                           2511 ;	Peephole 3.b	changed mov to clr
                           2512 ;	Peephole 182.d	used 16 bit load of dptr
   0191 90 00 0F           2513 	mov	dptr,#(0x0F&0x00ff)
   0194 E4                 2514 	clr	a
   0195 F5 F0              2515 	mov	b,a
   0197 12s00r00           2516 	lcall	_ms_delay
                    019A   2517 	C$lcd.c$81$1$1 ==.
                           2518 ;	lcd.c:81: *(lcd_command_write_address) = lcd_unlock;
                           2519 ;	genAssign
                           2520 ;	Peephole 182.b	used 16 bit load of dptr
   019A 90 80 00           2521 	mov	dptr,#0x8000
                           2522 ;	genPointerSet
                           2523 ;     genFarPointerSet
   019D 74 30              2524 	mov	a,#0x30
   019F F0                 2525 	movx	@dptr,a
                    01A0   2526 	C$lcd.c$82$1$1 ==.
                           2527 ;	lcd.c:82: ms_delay(5);
                           2528 ;	genCall
                           2529 ;	Peephole 3.a	changed mov to clr
                           2530 ;	Peephole 3.b	changed mov to clr
                           2531 ;	Peephole 182.d	used 16 bit load of dptr
   01A0 90 00 05           2532 	mov	dptr,#(0x05&0x00ff)
   01A3 E4                 2533 	clr	a
   01A4 F5 F0              2534 	mov	b,a
   01A6 12s00r00           2535 	lcall	_ms_delay
                    01A9   2536 	C$lcd.c$83$1$1 ==.
                           2537 ;	lcd.c:83: *(lcd_command_write_address) = lcd_unlock;
                           2538 ;	genAssign
                           2539 ;	Peephole 182.b	used 16 bit load of dptr
   01A9 90 80 00           2540 	mov	dptr,#0x8000
                           2541 ;	genPointerSet
                           2542 ;     genFarPointerSet
   01AC 74 30              2543 	mov	a,#0x30
   01AE F0                 2544 	movx	@dptr,a
                    01AF   2545 	C$lcd.c$84$1$1 ==.
                           2546 ;	lcd.c:84: ms_delay(1);
                           2547 ;	genCall
                           2548 ;	Peephole 3.a	changed mov to clr
                           2549 ;	Peephole 3.b	changed mov to clr
                           2550 ;	Peephole 182.d	used 16 bit load of dptr
   01AF 90 00 01           2551 	mov	dptr,#(0x01&0x00ff)
   01B2 E4                 2552 	clr	a
   01B3 F5 F0              2553 	mov	b,a
   01B5 12s00r00           2554 	lcall	_ms_delay
                    01B8   2555 	C$lcd.c$85$1$1 ==.
                           2556 ;	lcd.c:85: *(lcd_command_write_address) = lcd_unlock;
                           2557 ;	genAssign
                           2558 ;	Peephole 182.b	used 16 bit load of dptr
   01B8 90 80 00           2559 	mov	dptr,#0x8000
                           2560 ;	genPointerSet
                           2561 ;     genFarPointerSet
   01BB 74 30              2562 	mov	a,#0x30
   01BD F0                 2563 	movx	@dptr,a
                    01BE   2564 	C$lcd.c$86$1$1 ==.
                           2565 ;	lcd.c:86: lcd_command_write(lcd_function_set);
                           2566 ;	genCall
   01BE 75 82 38           2567 	mov	dpl,#0x38
   01C1 12s07r6F           2568 	lcall	_lcd_command_write
                    01C4   2569 	C$lcd.c$87$1$1 ==.
                           2570 ;	lcd.c:87: lcd_command_write(lcd_display_off);
                           2571 ;	genCall
   01C4 75 82 08           2572 	mov	dpl,#0x08
   01C7 12s07r6F           2573 	lcall	_lcd_command_write
                    01CA   2574 	C$lcd.c$88$1$1 ==.
                           2575 ;	lcd.c:88: lcd_command_write(lcd_display_on);
                           2576 ;	genCall
   01CA 75 82 0F           2577 	mov	dpl,#0x0F
   01CD 12s07r6F           2578 	lcall	_lcd_command_write
                    01D0   2579 	C$lcd.c$89$1$1 ==.
                           2580 ;	lcd.c:89: lcd_command_write(lcd_entry_mode);
                           2581 ;	genCall
   01D0 75 82 06           2582 	mov	dpl,#0x06
   01D3 12s07r6F           2583 	lcall	_lcd_command_write
                    01D6   2584 	C$lcd.c$90$1$1 ==.
                           2585 ;	lcd.c:90: lcd_command_write(lcd_clear_display);
                           2586 ;	genCall
   01D6 75 82 01           2587 	mov	dpl,#0x01
                    01D9   2588 	C$lcd.c$91$1$1 ==.
                           2589 ;	lcd.c:91: return;
                           2590 ;	genRet
                    01D9   2591 	C$lcd.c$92$1$1 ==.
                    01D9   2592 	XG$lcd_init$0$0 ==.
                           2593 ;	Peephole 253.b	replaced lcall/ret with ljmp
   01D9 02s07r6F           2594 	ljmp	_lcd_command_write
                           2595 ;
                           2596 ;------------------------------------------------------------
                           2597 ;Allocation info for local variables in function 'lcd_row_shifter'
                           2598 ;------------------------------------------------------------
                           2599 ;lcd_row_base_address      Allocated with name '_lcd_row_shifter_lcd_row_base_address_1_1'
                           2600 ;------------------------------------------------------------
                    01DC   2601 	G$lcd_row_shifter$0$0 ==.
                    01DC   2602 	C$lcd.c$98$1$1 ==.
                           2603 ;	lcd.c:98: void lcd_row_shifter(void)
                           2604 ;	-----------------------------------------
                           2605 ;	 function lcd_row_shifter
                           2606 ;	-----------------------------------------
   01DC                    2607 _lcd_row_shifter:
                    01DC   2608 	C$lcd.c$100$1$1 ==.
                           2609 ;	lcd.c:100: __xdata uint8_t lcd_row_base_address[]={lcd_row_0_base_address,lcd_row_1_base_address,lcd_row_2_base_address,lcd_row_3_base_address};
                           2610 ;	genPointerSet
                           2611 ;     genFarPointerSet
   01DC 90s00r18           2612 	mov	dptr,#_lcd_row_shifter_lcd_row_base_address_1_1
   01DF 74 80              2613 	mov	a,#0x80
   01E1 F0                 2614 	movx	@dptr,a
                           2615 ;	genPointerSet
                           2616 ;     genFarPointerSet
   01E2 90s00r19           2617 	mov	dptr,#(_lcd_row_shifter_lcd_row_base_address_1_1 + 0x0001)
   01E5 74 C0              2618 	mov	a,#0xC0
   01E7 F0                 2619 	movx	@dptr,a
                           2620 ;	genPointerSet
                           2621 ;     genFarPointerSet
   01E8 90s00r1A           2622 	mov	dptr,#(_lcd_row_shifter_lcd_row_base_address_1_1 + 0x0002)
   01EB 74 90              2623 	mov	a,#0x90
   01ED F0                 2624 	movx	@dptr,a
                           2625 ;	genPointerSet
                           2626 ;     genFarPointerSet
   01EE 90s00r1B           2627 	mov	dptr,#(_lcd_row_shifter_lcd_row_base_address_1_1 + 0x0003)
   01F1 74 D0              2628 	mov	a,#0xD0
   01F3 F0                 2629 	movx	@dptr,a
                    01F4   2630 	C$lcd.c$101$1$1 ==.
                           2631 ;	lcd.c:101: lcd_busy_wait();
                           2632 ;	genCall
   01F4 12s02r59           2633 	lcall	_lcd_busy_wait
                    01F7   2634 	C$lcd.c$102$1$1 ==.
                           2635 ;	lcd.c:102: if((lcd_current_row == 3)&&(lcd_current_column == 8))
                           2636 ;	genAssign
   01F7 90s00r02           2637 	mov	dptr,#_lcd_current_row
   01FA E0                 2638 	movx	a,@dptr
   01FB FA                 2639 	mov	r2,a
                           2640 ;	genCmpEq
                           2641 ;	gencjneshort
                           2642 ;	Peephole 112.b	changed ljmp to sjmp
                           2643 ;	Peephole 198.b	optimized misc jump sequence
   01FC BA 03 0F           2644 	cjne	r2,#0x03,00107$
                           2645 ;	Peephole 200.b	removed redundant sjmp
                           2646 ;	Peephole 300	removed redundant label 00116$
                           2647 ;	Peephole 300	removed redundant label 00117$
                           2648 ;	genAssign
   01FF 90s00r01           2649 	mov	dptr,#_lcd_current_column
   0202 E0                 2650 	movx	a,@dptr
   0203 FB                 2651 	mov	r3,a
                           2652 ;	genCmpEq
                           2653 ;	gencjneshort
                           2654 ;	Peephole 112.b	changed ljmp to sjmp
                           2655 ;	Peephole 198.b	optimized misc jump sequence
   0204 BB 08 07           2656 	cjne	r3,#0x08,00107$
                           2657 ;	Peephole 200.b	removed redundant sjmp
                           2658 ;	Peephole 300	removed redundant label 00118$
                           2659 ;	Peephole 300	removed redundant label 00119$
                    0207   2660 	C$lcd.c$104$2$2 ==.
                           2661 ;	lcd.c:104: lcd_current_row = 0;
                           2662 ;	genAssign
   0207 90s00r02           2663 	mov	dptr,#_lcd_current_row
                           2664 ;	Peephole 181	changed mov to clr
   020A E4                 2665 	clr	a
   020B F0                 2666 	movx	@dptr,a
                           2667 ;	Peephole 112.b	changed ljmp to sjmp
   020C 80 1F              2668 	sjmp	00108$
   020E                    2669 00107$:
                    020E   2670 	C$lcd.c$106$1$1 ==.
                           2671 ;	lcd.c:106: else if ((lcd_current_row > 3))
                           2672 ;	genCmpGt
                           2673 ;	genCmp
                           2674 ;	genIfxJump
                           2675 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           2676 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   020E EA                 2677 	mov	a,r2
   020F 24 FC              2678 	add	a,#0xff - 0x03
   0211 50 0E              2679 	jnc	00104$
                           2680 ;	Peephole 300	removed redundant label 00120$
                    0213   2681 	C$lcd.c$108$2$3 ==.
                           2682 ;	lcd.c:108: lcd_current_row = eeprom_read(lcd_current_row_address);
                           2683 ;	genCall
                           2684 ;	Peephole 182.b	used 16 bit load of dptr
   0213 90 05 55           2685 	mov	dptr,#0x0555
   0216 12s00r00           2686 	lcall	_eeprom_read
   0219 E5 82              2687 	mov	a,dpl
                           2688 ;	genAssign
   021B 90s00r02           2689 	mov	dptr,#_lcd_current_row
   021E F0                 2690 	movx	@dptr,a
                           2691 ;	Peephole 112.b	changed ljmp to sjmp
   021F 80 0C              2692 	sjmp	00108$
   0221                    2693 00104$:
                    0221   2694 	C$lcd.c$110$1$1 ==.
                           2695 ;	lcd.c:110: else if (lcd_current_row < 3)
                           2696 ;	genCmpLt
                           2697 ;	genCmp
   0221 BA 03 00           2698 	cjne	r2,#0x03,00121$
   0224                    2699 00121$:
                           2700 ;	genIfxJump
                           2701 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0224 50 07              2702 	jnc	00108$
                           2703 ;	Peephole 300	removed redundant label 00122$
                    0226   2704 	C$lcd.c$112$2$4 ==.
                           2705 ;	lcd.c:112: lcd_current_row++;
                           2706 ;	genPlus
   0226 90s00r02           2707 	mov	dptr,#_lcd_current_row
                           2708 ;     genPlusIncr
   0229 74 01              2709 	mov	a,#0x01
                           2710 ;	Peephole 236.a	used r2 instead of ar2
   022B 2A                 2711 	add	a,r2
   022C F0                 2712 	movx	@dptr,a
   022D                    2713 00108$:
                    022D   2714 	C$lcd.c$114$1$1 ==.
                           2715 ;	lcd.c:114: lcd_busy_wait();
                           2716 ;	genCall
   022D 12s02r59           2717 	lcall	_lcd_busy_wait
                    0230   2718 	C$lcd.c$115$1$1 ==.
                           2719 ;	lcd.c:115: lcd_go_to_x_y(lcd_current_row,0);
                           2720 ;	genAssign
   0230 90s00r02           2721 	mov	dptr,#_lcd_current_row
   0233 E0                 2722 	movx	a,@dptr
   0234 FA                 2723 	mov	r2,a
                           2724 ;	genAssign
   0235 90s00r4F           2725 	mov	dptr,#_lcd_go_to_x_y_PARM_2
                           2726 ;	Peephole 181	changed mov to clr
   0238 E4                 2727 	clr	a
   0239 F0                 2728 	movx	@dptr,a
                           2729 ;	genCall
   023A 8A 82              2730 	mov	dpl,r2
   023C 12s05rA5           2731 	lcall	_lcd_go_to_x_y
                    023F   2732 	C$lcd.c$116$1$1 ==.
                           2733 ;	lcd.c:116: eeprom_write(lcd_current_row_address,lcd_current_row);
                           2734 ;	genAssign
   023F 90s00r02           2735 	mov	dptr,#_lcd_current_row
   0242 E0                 2736 	movx	a,@dptr
                           2737 ;	genAssign
   0243 FA                 2738 	mov	r2,a
   0244 90s00r00           2739 	mov	dptr,#_eeprom_write_PARM_2
                           2740 ;	Peephole 100	removed redundant mov
   0247 F0                 2741 	movx	@dptr,a
                           2742 ;	genCall
                           2743 ;	Peephole 182.b	used 16 bit load of dptr
   0248 90 05 55           2744 	mov	dptr,#0x0555
   024B 12s00r00           2745 	lcall	_eeprom_write
                    024E   2746 	C$lcd.c$117$1$1 ==.
                           2747 ;	lcd.c:117: eeprom_write(lcd_current_column_address,0);
                           2748 ;	genAssign
   024E 90s00r00           2749 	mov	dptr,#_eeprom_write_PARM_2
                           2750 ;	Peephole 181	changed mov to clr
   0251 E4                 2751 	clr	a
   0252 F0                 2752 	movx	@dptr,a
                           2753 ;	genCall
                           2754 ;	Peephole 182.b	used 16 bit load of dptr
   0253 90 07 77           2755 	mov	dptr,#0x0777
                    0256   2756 	C$lcd.c$118$1$1 ==.
                           2757 ;	lcd.c:118: return;
                           2758 ;	genRet
                    0256   2759 	C$lcd.c$119$1$1 ==.
                    0256   2760 	XG$lcd_row_shifter$0$0 ==.
                           2761 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0256 02s00r00           2762 	ljmp	_eeprom_write
                           2763 ;
                           2764 ;------------------------------------------------------------
                           2765 ;Allocation info for local variables in function 'lcd_busy_wait'
                           2766 ;------------------------------------------------------------
                           2767 ;------------------------------------------------------------
                    0259   2768 	G$lcd_busy_wait$0$0 ==.
                    0259   2769 	C$lcd.c$125$1$1 ==.
                           2770 ;	lcd.c:125: void lcd_busy_wait(void)
                           2771 ;	-----------------------------------------
                           2772 ;	 function lcd_busy_wait
                           2773 ;	-----------------------------------------
   0259                    2774 _lcd_busy_wait:
                    0259   2775 	C$lcd.c$127$1$1 ==.
                           2776 ;	lcd.c:127: while(*lcd_command_read_address & lcd_busy_wait_mask);
   0259                    2777 00101$:
                           2778 ;	genPointerGet
                           2779 ;	genFarPointerGet
                           2780 ;	Peephole 182.b	used 16 bit load of dptr
   0259 90 90 00           2781 	mov	dptr,#0x9000
   025C E0                 2782 	movx	a,@dptr
                           2783 ;	genAnd
   025D FA                 2784 	mov	r2,a
                           2785 ;	Peephole 105	removed redundant mov
                           2786 ;	genIfxJump
                           2787 ;	Peephole 108.e	removed ljmp by inverse jump logic
   025E 20 E7 F8           2788 	jb	acc.7,00101$
                           2789 ;	Peephole 300	removed redundant label 00108$
                    0261   2790 	C$lcd.c$128$1$1 ==.
                           2791 ;	lcd.c:128: return;
                           2792 ;	genRet
                           2793 ;	Peephole 300	removed redundant label 00104$
                    0261   2794 	C$lcd.c$129$1$1 ==.
                    0261   2795 	XG$lcd_busy_wait$0$0 ==.
   0261 22                 2796 	ret
                           2797 ;------------------------------------------------------------
                           2798 ;Allocation info for local variables in function 'lcd_ddram_flush'
                           2799 ;------------------------------------------------------------
                           2800 ;ddram_flush_txt           Allocated with name '_lcd_ddram_flush_ddram_flush_txt_1_1'
                           2801 ;count                     Allocated with name '_lcd_ddram_flush_count_1_1'
                           2802 ;i                         Allocated with name '_lcd_ddram_flush_i_1_1'
                           2803 ;temp_storage              Allocated with name '_lcd_ddram_flush_temp_storage_1_1'
                           2804 ;data_byte                 Allocated with name '_lcd_ddram_flush_data_byte_1_1'
                           2805 ;address                   Allocated with name '_lcd_ddram_flush_address_1_1'
                           2806 ;------------------------------------------------------------
                    0262   2807 	G$lcd_ddram_flush$0$0 ==.
                    0262   2808 	C$lcd.c$135$1$1 ==.
                           2809 ;	lcd.c:135: void lcd_ddram_flush(void)
                           2810 ;	-----------------------------------------
                           2811 ;	 function lcd_ddram_flush
                           2812 ;	-----------------------------------------
   0262                    2813 _lcd_ddram_flush:
                    0262   2814 	C$lcd.c$137$1$1 ==.
                           2815 ;	lcd.c:137: __xdata uint8_t ddram_flush_txt[]="\n\rDDRAM Hexdump";
                           2816 ;	genPointerSet
                           2817 ;     genFarPointerSet
   0262 90s00r1C           2818 	mov	dptr,#_lcd_ddram_flush_ddram_flush_txt_1_1
   0265 74 0A              2819 	mov	a,#0x0A
   0267 F0                 2820 	movx	@dptr,a
                           2821 ;	genPointerSet
                           2822 ;     genFarPointerSet
   0268 90s00r1D           2823 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0001)
   026B 74 0D              2824 	mov	a,#0x0D
   026D F0                 2825 	movx	@dptr,a
                           2826 ;	genPointerSet
                           2827 ;     genFarPointerSet
   026E 90s00r1E           2828 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0002)
   0271 74 44              2829 	mov	a,#0x44
   0273 F0                 2830 	movx	@dptr,a
                           2831 ;	genPointerSet
                           2832 ;     genFarPointerSet
   0274 90s00r1F           2833 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0003)
   0277 74 44              2834 	mov	a,#0x44
   0279 F0                 2835 	movx	@dptr,a
                           2836 ;	genPointerSet
                           2837 ;     genFarPointerSet
   027A 90s00r20           2838 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0004)
   027D 74 52              2839 	mov	a,#0x52
   027F F0                 2840 	movx	@dptr,a
                           2841 ;	genPointerSet
                           2842 ;     genFarPointerSet
   0280 90s00r21           2843 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0005)
   0283 74 41              2844 	mov	a,#0x41
   0285 F0                 2845 	movx	@dptr,a
                           2846 ;	genPointerSet
                           2847 ;     genFarPointerSet
   0286 90s00r22           2848 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0006)
   0289 74 4D              2849 	mov	a,#0x4D
   028B F0                 2850 	movx	@dptr,a
                           2851 ;	genPointerSet
                           2852 ;     genFarPointerSet
   028C 90s00r23           2853 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0007)
   028F 74 20              2854 	mov	a,#0x20
   0291 F0                 2855 	movx	@dptr,a
                           2856 ;	genPointerSet
                           2857 ;     genFarPointerSet
   0292 90s00r24           2858 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0008)
   0295 74 48              2859 	mov	a,#0x48
   0297 F0                 2860 	movx	@dptr,a
                           2861 ;	genPointerSet
                           2862 ;     genFarPointerSet
   0298 90s00r25           2863 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0009)
   029B 74 65              2864 	mov	a,#0x65
   029D F0                 2865 	movx	@dptr,a
                           2866 ;	genPointerSet
                           2867 ;     genFarPointerSet
   029E 90s00r26           2868 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000a)
   02A1 74 78              2869 	mov	a,#0x78
   02A3 F0                 2870 	movx	@dptr,a
                           2871 ;	genPointerSet
                           2872 ;     genFarPointerSet
   02A4 90s00r27           2873 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000b)
   02A7 74 64              2874 	mov	a,#0x64
   02A9 F0                 2875 	movx	@dptr,a
                           2876 ;	genPointerSet
                           2877 ;     genFarPointerSet
   02AA 90s00r28           2878 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000c)
   02AD 74 75              2879 	mov	a,#0x75
   02AF F0                 2880 	movx	@dptr,a
                           2881 ;	genPointerSet
                           2882 ;     genFarPointerSet
   02B0 90s00r29           2883 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000d)
   02B3 74 6D              2884 	mov	a,#0x6D
   02B5 F0                 2885 	movx	@dptr,a
                           2886 ;	genPointerSet
                           2887 ;     genFarPointerSet
   02B6 90s00r2A           2888 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000e)
   02B9 74 70              2889 	mov	a,#0x70
   02BB F0                 2890 	movx	@dptr,a
                           2891 ;	genPointerSet
                           2892 ;     genFarPointerSet
   02BC 90s00r2B           2893 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000f)
                           2894 ;	Peephole 181	changed mov to clr
   02BF E4                 2895 	clr	a
   02C0 F0                 2896 	movx	@dptr,a
                    02C1   2897 	C$lcd.c$141$1$1 ==.
                           2898 ;	lcd.c:141: lcd_command_write(temp_storage);
                           2899 ;	genCall
   02C1 75 82 80           2900 	mov	dpl,#0x80
   02C4 12s07r6F           2901 	lcall	_lcd_command_write
                    02C7   2902 	C$lcd.c$142$1$1 ==.
                           2903 ;	lcd.c:142: my_printf(ddram_flush_txt);
                           2904 ;	genCall
                           2905 ;	Peephole 182.a	used 16 bit load of DPTR
   02C7 90s00r1C           2906 	mov	dptr,#_lcd_ddram_flush_ddram_flush_txt_1_1
   02CA 12s00r00           2907 	lcall	_my_printf
                    02CD   2908 	C$lcd.c$143$1$1 ==.
                           2909 ;	lcd.c:143: for(count=0;count<5;count++)
                           2910 ;	genAssign
   02CD 7A 80              2911 	mov	r2,#0x80
   02CF 7B 00              2912 	mov	r3,#0x00
                           2913 ;	genAssign
   02D1 7C 00              2914 	mov	r4,#0x00
   02D3                    2915 00105$:
                           2916 ;	genCmpLt
                           2917 ;	genCmp
   02D3 BC 05 00           2918 	cjne	r4,#0x05,00117$
   02D6                    2919 00117$:
                           2920 ;	genIfxJump
   02D6 40 03              2921 	jc	00118$
   02D8 02s03r8B           2922 	ljmp	00108$
   02DB                    2923 00118$:
                    02DB   2924 	C$lcd.c$145$2$2 ==.
                           2925 ;	lcd.c:145: putchar('\n');
                           2926 ;	genCall
   02DB 75 82 0A           2927 	mov	dpl,#0x0A
   02DE C0 02              2928 	push	ar2
   02E0 C0 03              2929 	push	ar3
   02E2 C0 04              2930 	push	ar4
   02E4 12s00r00           2931 	lcall	_putchar
   02E7 D0 04              2932 	pop	ar4
   02E9 D0 03              2933 	pop	ar3
   02EB D0 02              2934 	pop	ar2
                    02ED   2935 	C$lcd.c$146$2$2 ==.
                           2936 ;	lcd.c:146: putchar('\r');
                           2937 ;	genCall
   02ED 75 82 0D           2938 	mov	dpl,#0x0D
   02F0 C0 02              2939 	push	ar2
   02F2 C0 03              2940 	push	ar3
   02F4 C0 04              2941 	push	ar4
   02F6 12s00r00           2942 	lcall	_putchar
   02F9 D0 04              2943 	pop	ar4
   02FB D0 03              2944 	pop	ar3
   02FD D0 02              2945 	pop	ar2
                    02FF   2946 	C$lcd.c$147$2$2 ==.
                           2947 ;	lcd.c:147: print_number_hex(address,2);
                           2948 ;	genCast
   02FF 8A 05              2949 	mov	ar5,r2
   0301 8B 06              2950 	mov	ar6,r3
   0303 7F 00              2951 	mov	r7,#0x00
   0305 78 00              2952 	mov	r0,#0x00
                           2953 ;	genAssign
   0307 90s00r00           2954 	mov	dptr,#_print_number_hex_PARM_2
   030A 74 02              2955 	mov	a,#0x02
   030C F0                 2956 	movx	@dptr,a
                           2957 ;	genCall
   030D 8D 82              2958 	mov	dpl,r5
   030F 8E 83              2959 	mov	dph,r6
   0311 8F F0              2960 	mov	b,r7
   0313 E8                 2961 	mov	a,r0
   0314 C0 02              2962 	push	ar2
   0316 C0 03              2963 	push	ar3
   0318 C0 04              2964 	push	ar4
   031A 12s00r00           2965 	lcall	_print_number_hex
   031D D0 04              2966 	pop	ar4
   031F D0 03              2967 	pop	ar3
   0321 D0 02              2968 	pop	ar2
                    0323   2969 	C$lcd.c$148$2$2 ==.
                           2970 ;	lcd.c:148: putchar(':');
                           2971 ;	genCall
   0323 75 82 3A           2972 	mov	dpl,#0x3A
   0326 C0 02              2973 	push	ar2
   0328 C0 03              2974 	push	ar3
   032A C0 04              2975 	push	ar4
   032C 12s00r00           2976 	lcall	_putchar
   032F D0 04              2977 	pop	ar4
   0331 D0 03              2978 	pop	ar3
   0333 D0 02              2979 	pop	ar2
                    0335   2980 	C$lcd.c$149$1$1 ==.
                           2981 ;	lcd.c:149: for(i=0;i<16;i++)
                           2982 ;	genAssign
   0335 7D 00              2983 	mov	r5,#0x00
   0337                    2984 00101$:
                           2985 ;	genCmpLt
                           2986 ;	genCmp
   0337 BD 10 00           2987 	cjne	r5,#0x10,00119$
   033A                    2988 00119$:
                           2989 ;	genIfxJump
                           2990 ;	Peephole 108.a	removed ljmp by inverse jump logic
   033A 50 44              2991 	jnc	00104$
                           2992 ;	Peephole 300	removed redundant label 00120$
                    033C   2993 	C$lcd.c$151$3$3 ==.
                           2994 ;	lcd.c:151: putchar(32);//space
                           2995 ;	genCall
   033C 75 82 20           2996 	mov	dpl,#0x20
   033F C0 02              2997 	push	ar2
   0341 C0 03              2998 	push	ar3
   0343 C0 04              2999 	push	ar4
   0345 C0 05              3000 	push	ar5
   0347 12s00r00           3001 	lcall	_putchar
   034A D0 05              3002 	pop	ar5
   034C D0 04              3003 	pop	ar4
   034E D0 03              3004 	pop	ar3
   0350 D0 02              3005 	pop	ar2
                    0352   3006 	C$lcd.c$152$3$3 ==.
                           3007 ;	lcd.c:152: data_byte = *(lcd_data_read_address);
                           3008 ;	genPointerGet
                           3009 ;	genFarPointerGet
                           3010 ;	Peephole 182.b	used 16 bit load of dptr
   0352 90 B0 00           3011 	mov	dptr,#0xB000
   0355 E0                 3012 	movx	a,@dptr
   0356 FE                 3013 	mov	r6,a
                    0357   3014 	C$lcd.c$153$3$3 ==.
                           3015 ;	lcd.c:153: print_number_hex(data_byte,2);
                           3016 ;	genCast
   0357 7F 00              3017 	mov	r7,#0x00
   0359 78 00              3018 	mov	r0,#0x00
   035B 79 00              3019 	mov	r1,#0x00
                           3020 ;	genAssign
   035D 90s00r00           3021 	mov	dptr,#_print_number_hex_PARM_2
   0360 74 02              3022 	mov	a,#0x02
   0362 F0                 3023 	movx	@dptr,a
                           3024 ;	genCall
   0363 8E 82              3025 	mov	dpl,r6
   0365 8F 83              3026 	mov	dph,r7
   0367 88 F0              3027 	mov	b,r0
   0369 E9                 3028 	mov	a,r1
   036A C0 02              3029 	push	ar2
   036C C0 03              3030 	push	ar3
   036E C0 04              3031 	push	ar4
   0370 C0 05              3032 	push	ar5
   0372 12s00r00           3033 	lcall	_print_number_hex
   0375 D0 05              3034 	pop	ar5
   0377 D0 04              3035 	pop	ar4
   0379 D0 03              3036 	pop	ar3
   037B D0 02              3037 	pop	ar2
                    037D   3038 	C$lcd.c$149$2$2 ==.
                           3039 ;	lcd.c:149: for(i=0;i<16;i++)
                           3040 ;	genPlus
                           3041 ;     genPlusIncr
   037D 0D                 3042 	inc	r5
                           3043 ;	Peephole 112.b	changed ljmp to sjmp
   037E 80 B7              3044 	sjmp	00101$
   0380                    3045 00104$:
                    0380   3046 	C$lcd.c$155$2$2 ==.
                           3047 ;	lcd.c:155: address+=16;
                           3048 ;	genPlus
                           3049 ;     genPlusIncr
   0380 74 10              3050 	mov	a,#0x10
                           3051 ;	Peephole 236.a	used r2 instead of ar2
   0382 2A                 3052 	add	a,r2
   0383 FA                 3053 	mov	r2,a
                           3054 ;	Peephole 181	changed mov to clr
   0384 E4                 3055 	clr	a
                           3056 ;	Peephole 236.b	used r3 instead of ar3
   0385 3B                 3057 	addc	a,r3
   0386 FB                 3058 	mov	r3,a
                    0387   3059 	C$lcd.c$143$1$1 ==.
                           3060 ;	lcd.c:143: for(count=0;count<5;count++)
                           3061 ;	genPlus
                           3062 ;     genPlusIncr
   0387 0C                 3063 	inc	r4
   0388 02s02rD3           3064 	ljmp	00105$
   038B                    3065 00108$:
                    038B   3066 	C$lcd.c$157$1$1 ==.
                           3067 ;	lcd.c:157: lcd_go_to_x_y(lcd_current_row,lcd_current_column);
                           3068 ;	genAssign
   038B 90s00r02           3069 	mov	dptr,#_lcd_current_row
   038E E0                 3070 	movx	a,@dptr
   038F FA                 3071 	mov	r2,a
                           3072 ;	genAssign
   0390 90s00r01           3073 	mov	dptr,#_lcd_current_column
   0393 E0                 3074 	movx	a,@dptr
                           3075 ;	genAssign
   0394 FB                 3076 	mov	r3,a
   0395 90s00r4F           3077 	mov	dptr,#_lcd_go_to_x_y_PARM_2
                           3078 ;	Peephole 100	removed redundant mov
   0398 F0                 3079 	movx	@dptr,a
                           3080 ;	genCall
   0399 8A 82              3081 	mov	dpl,r2
                    039B   3082 	C$lcd.c$158$1$1 ==.
                           3083 ;	lcd.c:158: return;
                           3084 ;	genRet
                    039B   3085 	C$lcd.c$159$1$1 ==.
                    039B   3086 	XG$lcd_ddram_flush$0$0 ==.
                           3087 ;	Peephole 253.b	replaced lcall/ret with ljmp
   039B 02s05rA5           3088 	ljmp	_lcd_go_to_x_y
                           3089 ;
                           3090 ;------------------------------------------------------------
                           3091 ;Allocation info for local variables in function 'lcd_cgram_flush'
                           3092 ;------------------------------------------------------------
                           3093 ;cgram_flush_txt           Allocated with name '_lcd_cgram_flush_cgram_flush_txt_1_1'
                           3094 ;count                     Allocated with name '_lcd_cgram_flush_count_1_1'
                           3095 ;i                         Allocated with name '_lcd_cgram_flush_i_1_1'
                           3096 ;temp_storage              Allocated with name '_lcd_cgram_flush_temp_storage_1_1'
                           3097 ;data_byte                 Allocated with name '_lcd_cgram_flush_data_byte_1_1'
                           3098 ;address                   Allocated with name '_lcd_cgram_flush_address_1_1'
                           3099 ;------------------------------------------------------------
                    039E   3100 	G$lcd_cgram_flush$0$0 ==.
                    039E   3101 	C$lcd.c$165$1$1 ==.
                           3102 ;	lcd.c:165: void lcd_cgram_flush(void)
                           3103 ;	-----------------------------------------
                           3104 ;	 function lcd_cgram_flush
                           3105 ;	-----------------------------------------
   039E                    3106 _lcd_cgram_flush:
                    039E   3107 	C$lcd.c$167$1$1 ==.
                           3108 ;	lcd.c:167: __xdata uint8_t cgram_flush_txt[]="\n\rCGRAM Hexdump";
                           3109 ;	genPointerSet
                           3110 ;     genFarPointerSet
   039E 90s00r2C           3111 	mov	dptr,#_lcd_cgram_flush_cgram_flush_txt_1_1
   03A1 74 0A              3112 	mov	a,#0x0A
   03A3 F0                 3113 	movx	@dptr,a
                           3114 ;	genPointerSet
                           3115 ;     genFarPointerSet
   03A4 90s00r2D           3116 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0001)
   03A7 74 0D              3117 	mov	a,#0x0D
   03A9 F0                 3118 	movx	@dptr,a
                           3119 ;	genPointerSet
                           3120 ;     genFarPointerSet
   03AA 90s00r2E           3121 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0002)
   03AD 74 43              3122 	mov	a,#0x43
   03AF F0                 3123 	movx	@dptr,a
                           3124 ;	genPointerSet
                           3125 ;     genFarPointerSet
   03B0 90s00r2F           3126 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0003)
   03B3 74 47              3127 	mov	a,#0x47
   03B5 F0                 3128 	movx	@dptr,a
                           3129 ;	genPointerSet
                           3130 ;     genFarPointerSet
   03B6 90s00r30           3131 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0004)
   03B9 74 52              3132 	mov	a,#0x52
   03BB F0                 3133 	movx	@dptr,a
                           3134 ;	genPointerSet
                           3135 ;     genFarPointerSet
   03BC 90s00r31           3136 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0005)
   03BF 74 41              3137 	mov	a,#0x41
   03C1 F0                 3138 	movx	@dptr,a
                           3139 ;	genPointerSet
                           3140 ;     genFarPointerSet
   03C2 90s00r32           3141 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0006)
   03C5 74 4D              3142 	mov	a,#0x4D
   03C7 F0                 3143 	movx	@dptr,a
                           3144 ;	genPointerSet
                           3145 ;     genFarPointerSet
   03C8 90s00r33           3146 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0007)
   03CB 74 20              3147 	mov	a,#0x20
   03CD F0                 3148 	movx	@dptr,a
                           3149 ;	genPointerSet
                           3150 ;     genFarPointerSet
   03CE 90s00r34           3151 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0008)
   03D1 74 48              3152 	mov	a,#0x48
   03D3 F0                 3153 	movx	@dptr,a
                           3154 ;	genPointerSet
                           3155 ;     genFarPointerSet
   03D4 90s00r35           3156 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0009)
   03D7 74 65              3157 	mov	a,#0x65
   03D9 F0                 3158 	movx	@dptr,a
                           3159 ;	genPointerSet
                           3160 ;     genFarPointerSet
   03DA 90s00r36           3161 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000a)
   03DD 74 78              3162 	mov	a,#0x78
   03DF F0                 3163 	movx	@dptr,a
                           3164 ;	genPointerSet
                           3165 ;     genFarPointerSet
   03E0 90s00r37           3166 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000b)
   03E3 74 64              3167 	mov	a,#0x64
   03E5 F0                 3168 	movx	@dptr,a
                           3169 ;	genPointerSet
                           3170 ;     genFarPointerSet
   03E6 90s00r38           3171 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000c)
   03E9 74 75              3172 	mov	a,#0x75
   03EB F0                 3173 	movx	@dptr,a
                           3174 ;	genPointerSet
                           3175 ;     genFarPointerSet
   03EC 90s00r39           3176 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000d)
   03EF 74 6D              3177 	mov	a,#0x6D
   03F1 F0                 3178 	movx	@dptr,a
                           3179 ;	genPointerSet
                           3180 ;     genFarPointerSet
   03F2 90s00r3A           3181 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000e)
   03F5 74 70              3182 	mov	a,#0x70
   03F7 F0                 3183 	movx	@dptr,a
                           3184 ;	genPointerSet
                           3185 ;     genFarPointerSet
   03F8 90s00r3B           3186 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000f)
                           3187 ;	Peephole 181	changed mov to clr
   03FB E4                 3188 	clr	a
   03FC F0                 3189 	movx	@dptr,a
                    03FD   3190 	C$lcd.c$172$1$1 ==.
                           3191 ;	lcd.c:172: lcd_command_write(temp_storage);
                           3192 ;	genCall
   03FD 75 82 40           3193 	mov	dpl,#0x40
   0400 12s07r6F           3194 	lcall	_lcd_command_write
                    0403   3195 	C$lcd.c$173$1$1 ==.
                           3196 ;	lcd.c:173: my_printf(cgram_flush_txt);
                           3197 ;	genCall
                           3198 ;	Peephole 182.a	used 16 bit load of DPTR
   0403 90s00r2C           3199 	mov	dptr,#_lcd_cgram_flush_cgram_flush_txt_1_1
   0406 12s00r00           3200 	lcall	_my_printf
                    0409   3201 	C$lcd.c$174$1$1 ==.
                           3202 ;	lcd.c:174: for(count=0; count<4; count++)
                           3203 ;	genAssign
   0409 7A 00              3204 	mov	r2,#0x00
   040B 7B 00              3205 	mov	r3,#0x00
                           3206 ;	genAssign
   040D 7C 00              3207 	mov	r4,#0x00
   040F                    3208 00105$:
                           3209 ;	genCmpLt
                           3210 ;	genCmp
   040F BC 04 00           3211 	cjne	r4,#0x04,00117$
   0412                    3212 00117$:
                           3213 ;	genIfxJump
   0412 40 03              3214 	jc	00118$
   0414 02s04rC7           3215 	ljmp	00108$
   0417                    3216 00118$:
                    0417   3217 	C$lcd.c$176$2$2 ==.
                           3218 ;	lcd.c:176: putchar('\n');
                           3219 ;	genCall
   0417 75 82 0A           3220 	mov	dpl,#0x0A
   041A C0 02              3221 	push	ar2
   041C C0 03              3222 	push	ar3
   041E C0 04              3223 	push	ar4
   0420 12s00r00           3224 	lcall	_putchar
   0423 D0 04              3225 	pop	ar4
   0425 D0 03              3226 	pop	ar3
   0427 D0 02              3227 	pop	ar2
                    0429   3228 	C$lcd.c$177$2$2 ==.
                           3229 ;	lcd.c:177: putchar('\r');
                           3230 ;	genCall
   0429 75 82 0D           3231 	mov	dpl,#0x0D
   042C C0 02              3232 	push	ar2
   042E C0 03              3233 	push	ar3
   0430 C0 04              3234 	push	ar4
   0432 12s00r00           3235 	lcall	_putchar
   0435 D0 04              3236 	pop	ar4
   0437 D0 03              3237 	pop	ar3
   0439 D0 02              3238 	pop	ar2
                    043B   3239 	C$lcd.c$178$2$2 ==.
                           3240 ;	lcd.c:178: print_number_hex(address,2);
                           3241 ;	genCast
   043B 8A 05              3242 	mov	ar5,r2
   043D 8B 06              3243 	mov	ar6,r3
   043F 7F 00              3244 	mov	r7,#0x00
   0441 78 00              3245 	mov	r0,#0x00
                           3246 ;	genAssign
   0443 90s00r00           3247 	mov	dptr,#_print_number_hex_PARM_2
   0446 74 02              3248 	mov	a,#0x02
   0448 F0                 3249 	movx	@dptr,a
                           3250 ;	genCall
   0449 8D 82              3251 	mov	dpl,r5
   044B 8E 83              3252 	mov	dph,r6
   044D 8F F0              3253 	mov	b,r7
   044F E8                 3254 	mov	a,r0
   0450 C0 02              3255 	push	ar2
   0452 C0 03              3256 	push	ar3
   0454 C0 04              3257 	push	ar4
   0456 12s00r00           3258 	lcall	_print_number_hex
   0459 D0 04              3259 	pop	ar4
   045B D0 03              3260 	pop	ar3
   045D D0 02              3261 	pop	ar2
                    045F   3262 	C$lcd.c$179$2$2 ==.
                           3263 ;	lcd.c:179: putchar(':');
                           3264 ;	genCall
   045F 75 82 3A           3265 	mov	dpl,#0x3A
   0462 C0 02              3266 	push	ar2
   0464 C0 03              3267 	push	ar3
   0466 C0 04              3268 	push	ar4
   0468 12s00r00           3269 	lcall	_putchar
   046B D0 04              3270 	pop	ar4
   046D D0 03              3271 	pop	ar3
   046F D0 02              3272 	pop	ar2
                    0471   3273 	C$lcd.c$180$1$1 ==.
                           3274 ;	lcd.c:180: for(i=0;i<16;i++)
                           3275 ;	genAssign
   0471 7D 00              3276 	mov	r5,#0x00
   0473                    3277 00101$:
                           3278 ;	genCmpLt
                           3279 ;	genCmp
   0473 BD 10 00           3280 	cjne	r5,#0x10,00119$
   0476                    3281 00119$:
                           3282 ;	genIfxJump
                           3283 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0476 50 44              3284 	jnc	00104$
                           3285 ;	Peephole 300	removed redundant label 00120$
                    0478   3286 	C$lcd.c$182$3$3 ==.
                           3287 ;	lcd.c:182: putchar(32);//space
                           3288 ;	genCall
   0478 75 82 20           3289 	mov	dpl,#0x20
   047B C0 02              3290 	push	ar2
   047D C0 03              3291 	push	ar3
   047F C0 04              3292 	push	ar4
   0481 C0 05              3293 	push	ar5
   0483 12s00r00           3294 	lcall	_putchar
   0486 D0 05              3295 	pop	ar5
   0488 D0 04              3296 	pop	ar4
   048A D0 03              3297 	pop	ar3
   048C D0 02              3298 	pop	ar2
                    048E   3299 	C$lcd.c$183$3$3 ==.
                           3300 ;	lcd.c:183: data_byte = *(lcd_data_read_address);
                           3301 ;	genPointerGet
                           3302 ;	genFarPointerGet
                           3303 ;	Peephole 182.b	used 16 bit load of dptr
   048E 90 B0 00           3304 	mov	dptr,#0xB000
   0491 E0                 3305 	movx	a,@dptr
   0492 FE                 3306 	mov	r6,a
                    0493   3307 	C$lcd.c$184$3$3 ==.
                           3308 ;	lcd.c:184: print_number_hex(data_byte,2);
                           3309 ;	genCast
   0493 7F 00              3310 	mov	r7,#0x00
   0495 78 00              3311 	mov	r0,#0x00
   0497 79 00              3312 	mov	r1,#0x00
                           3313 ;	genAssign
   0499 90s00r00           3314 	mov	dptr,#_print_number_hex_PARM_2
   049C 74 02              3315 	mov	a,#0x02
   049E F0                 3316 	movx	@dptr,a
                           3317 ;	genCall
   049F 8E 82              3318 	mov	dpl,r6
   04A1 8F 83              3319 	mov	dph,r7
   04A3 88 F0              3320 	mov	b,r0
   04A5 E9                 3321 	mov	a,r1
   04A6 C0 02              3322 	push	ar2
   04A8 C0 03              3323 	push	ar3
   04AA C0 04              3324 	push	ar4
   04AC C0 05              3325 	push	ar5
   04AE 12s00r00           3326 	lcall	_print_number_hex
   04B1 D0 05              3327 	pop	ar5
   04B3 D0 04              3328 	pop	ar4
   04B5 D0 03              3329 	pop	ar3
   04B7 D0 02              3330 	pop	ar2
                    04B9   3331 	C$lcd.c$180$2$2 ==.
                           3332 ;	lcd.c:180: for(i=0;i<16;i++)
                           3333 ;	genPlus
                           3334 ;     genPlusIncr
   04B9 0D                 3335 	inc	r5
                           3336 ;	Peephole 112.b	changed ljmp to sjmp
   04BA 80 B7              3337 	sjmp	00101$
   04BC                    3338 00104$:
                    04BC   3339 	C$lcd.c$186$2$2 ==.
                           3340 ;	lcd.c:186: address+=16;
                           3341 ;	genPlus
                           3342 ;     genPlusIncr
   04BC 74 10              3343 	mov	a,#0x10
                           3344 ;	Peephole 236.a	used r2 instead of ar2
   04BE 2A                 3345 	add	a,r2
   04BF FA                 3346 	mov	r2,a
                           3347 ;	Peephole 181	changed mov to clr
   04C0 E4                 3348 	clr	a
                           3349 ;	Peephole 236.b	used r3 instead of ar3
   04C1 3B                 3350 	addc	a,r3
   04C2 FB                 3351 	mov	r3,a
                    04C3   3352 	C$lcd.c$174$1$1 ==.
                           3353 ;	lcd.c:174: for(count=0; count<4; count++)
                           3354 ;	genPlus
                           3355 ;     genPlusIncr
   04C3 0C                 3356 	inc	r4
   04C4 02s04r0F           3357 	ljmp	00105$
   04C7                    3358 00108$:
                    04C7   3359 	C$lcd.c$188$1$1 ==.
                           3360 ;	lcd.c:188: lcd_go_to_x_y(lcd_current_row,lcd_current_column);
                           3361 ;	genAssign
   04C7 90s00r02           3362 	mov	dptr,#_lcd_current_row
   04CA E0                 3363 	movx	a,@dptr
   04CB FA                 3364 	mov	r2,a
                           3365 ;	genAssign
   04CC 90s00r01           3366 	mov	dptr,#_lcd_current_column
   04CF E0                 3367 	movx	a,@dptr
                           3368 ;	genAssign
   04D0 FB                 3369 	mov	r3,a
   04D1 90s00r4F           3370 	mov	dptr,#_lcd_go_to_x_y_PARM_2
                           3371 ;	Peephole 100	removed redundant mov
   04D4 F0                 3372 	movx	@dptr,a
                           3373 ;	genCall
   04D5 8A 82              3374 	mov	dpl,r2
                    04D7   3375 	C$lcd.c$189$1$1 ==.
                           3376 ;	lcd.c:189: return;
                           3377 ;	genRet
                    04D7   3378 	C$lcd.c$190$1$1 ==.
                    04D7   3379 	XG$lcd_cgram_flush$0$0 ==.
                           3380 ;	Peephole 253.b	replaced lcall/ret with ljmp
   04D7 02s05rA5           3381 	ljmp	_lcd_go_to_x_y
                           3382 ;
                           3383 ;------------------------------------------------------------
                           3384 ;Allocation info for local variables in function 'lcd_go_to_addr'
                           3385 ;------------------------------------------------------------
                           3386 ;address                   Allocated with name '_lcd_go_to_addr_address_1_1'
                           3387 ;invalid_address_txt       Allocated with name '_lcd_go_to_addr_invalid_address_txt_1_1'
                           3388 ;------------------------------------------------------------
                    04DA   3389 	G$lcd_go_to_addr$0$0 ==.
                    04DA   3390 	C$lcd.c$197$1$1 ==.
                           3391 ;	lcd.c:197: void lcd_go_to_addr(__xdata uint8_t address)
                           3392 ;	-----------------------------------------
                           3393 ;	 function lcd_go_to_addr
                           3394 ;	-----------------------------------------
   04DA                    3395 _lcd_go_to_addr:
                           3396 ;	genReceive
   04DA E5 82              3397 	mov	a,dpl
   04DC 90s00r3C           3398 	mov	dptr,#_lcd_go_to_addr_address_1_1
   04DF F0                 3399 	movx	@dptr,a
                    04E0   3400 	C$lcd.c$199$1$1 ==.
                           3401 ;	lcd.c:199: __xdata uint8_t invalid_address_txt[]="\n\rInvalid Address";
                           3402 ;	genPointerSet
                           3403 ;     genFarPointerSet
   04E0 90s00r3D           3404 	mov	dptr,#_lcd_go_to_addr_invalid_address_txt_1_1
   04E3 74 0A              3405 	mov	a,#0x0A
   04E5 F0                 3406 	movx	@dptr,a
                           3407 ;	genPointerSet
                           3408 ;     genFarPointerSet
   04E6 90s00r3E           3409 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0001)
   04E9 74 0D              3410 	mov	a,#0x0D
   04EB F0                 3411 	movx	@dptr,a
                           3412 ;	genPointerSet
                           3413 ;     genFarPointerSet
   04EC 90s00r3F           3414 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0002)
   04EF 74 49              3415 	mov	a,#0x49
   04F1 F0                 3416 	movx	@dptr,a
                           3417 ;	genPointerSet
                           3418 ;     genFarPointerSet
   04F2 90s00r40           3419 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0003)
   04F5 74 6E              3420 	mov	a,#0x6E
   04F7 F0                 3421 	movx	@dptr,a
                           3422 ;	genPointerSet
                           3423 ;     genFarPointerSet
   04F8 90s00r41           3424 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0004)
   04FB 74 76              3425 	mov	a,#0x76
   04FD F0                 3426 	movx	@dptr,a
                           3427 ;	genPointerSet
                           3428 ;     genFarPointerSet
   04FE 90s00r42           3429 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0005)
   0501 74 61              3430 	mov	a,#0x61
   0503 F0                 3431 	movx	@dptr,a
                           3432 ;	genPointerSet
                           3433 ;     genFarPointerSet
   0504 90s00r43           3434 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0006)
   0507 74 6C              3435 	mov	a,#0x6C
   0509 F0                 3436 	movx	@dptr,a
                           3437 ;	genPointerSet
                           3438 ;     genFarPointerSet
   050A 90s00r44           3439 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0007)
   050D 74 69              3440 	mov	a,#0x69
   050F F0                 3441 	movx	@dptr,a
                           3442 ;	genPointerSet
                           3443 ;     genFarPointerSet
   0510 90s00r45           3444 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0008)
   0513 74 64              3445 	mov	a,#0x64
   0515 F0                 3446 	movx	@dptr,a
                           3447 ;	genPointerSet
                           3448 ;     genFarPointerSet
   0516 90s00r46           3449 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0009)
   0519 74 20              3450 	mov	a,#0x20
   051B F0                 3451 	movx	@dptr,a
                           3452 ;	genPointerSet
                           3453 ;     genFarPointerSet
   051C 90s00r47           3454 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000a)
   051F 74 41              3455 	mov	a,#0x41
   0521 F0                 3456 	movx	@dptr,a
                           3457 ;	genPointerSet
                           3458 ;     genFarPointerSet
   0522 90s00r48           3459 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000b)
   0525 74 64              3460 	mov	a,#0x64
   0527 F0                 3461 	movx	@dptr,a
                           3462 ;	genPointerSet
                           3463 ;     genFarPointerSet
   0528 90s00r49           3464 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000c)
   052B 74 64              3465 	mov	a,#0x64
   052D F0                 3466 	movx	@dptr,a
                           3467 ;	genPointerSet
                           3468 ;     genFarPointerSet
   052E 90s00r4A           3469 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000d)
   0531 74 72              3470 	mov	a,#0x72
   0533 F0                 3471 	movx	@dptr,a
                           3472 ;	genPointerSet
                           3473 ;     genFarPointerSet
   0534 90s00r4B           3474 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000e)
   0537 74 65              3475 	mov	a,#0x65
   0539 F0                 3476 	movx	@dptr,a
                           3477 ;	genPointerSet
                           3478 ;     genFarPointerSet
   053A 90s00r4C           3479 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000f)
   053D 74 73              3480 	mov	a,#0x73
   053F F0                 3481 	movx	@dptr,a
                           3482 ;	genPointerSet
                           3483 ;     genFarPointerSet
   0540 90s00r4D           3484 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0010)
   0543 74 73              3485 	mov	a,#0x73
   0545 F0                 3486 	movx	@dptr,a
                           3487 ;	genPointerSet
                           3488 ;     genFarPointerSet
   0546 90s00r4E           3489 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0011)
                           3490 ;	Peephole 181	changed mov to clr
   0549 E4                 3491 	clr	a
   054A F0                 3492 	movx	@dptr,a
                    054B   3493 	C$lcd.c$200$1$1 ==.
                           3494 ;	lcd.c:200: if((address>=0x90&&address<=0x9F)||(address>=0xD0&&address<=0xDF)||(address>=0xC0&&address<=0xCF)||(address>=0x80&&address<=0x8F))
                           3495 ;	genAssign
   054B 90s00r3C           3496 	mov	dptr,#_lcd_go_to_addr_address_1_1
   054E E0                 3497 	movx	a,@dptr
   054F FA                 3498 	mov	r2,a
                           3499 ;	genCmpLt
                           3500 ;	genCmp
   0550 BA 90 00           3501 	cjne	r2,#0x90,00117$
   0553                    3502 00117$:
                           3503 ;	genIfxJump
                           3504 ;	Peephole 112.b	changed ljmp to sjmp
                           3505 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0553 40 05              3506 	jc	00106$
                           3507 ;	Peephole 300	removed redundant label 00118$
                           3508 ;	genCmpGt
                           3509 ;	genCmp
                           3510 ;	genIfxJump
                           3511 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           3512 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0555 EA                 3513 	mov	a,r2
   0556 24 60              3514 	add	a,#0xff - 0x9F
   0558 50 2D              3515 	jnc	00101$
                           3516 ;	Peephole 300	removed redundant label 00119$
   055A                    3517 00106$:
                           3518 ;	genAssign
   055A 90s00r3C           3519 	mov	dptr,#_lcd_go_to_addr_address_1_1
   055D E0                 3520 	movx	a,@dptr
   055E FA                 3521 	mov	r2,a
                           3522 ;	genCmpLt
                           3523 ;	genCmp
   055F BA D0 00           3524 	cjne	r2,#0xD0,00120$
   0562                    3525 00120$:
                           3526 ;	genIfxJump
                           3527 ;	Peephole 112.b	changed ljmp to sjmp
                           3528 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0562 40 05              3529 	jc	00108$
                           3530 ;	Peephole 300	removed redundant label 00121$
                           3531 ;	genCmpGt
                           3532 ;	genCmp
                           3533 ;	genIfxJump
                           3534 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           3535 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0564 EA                 3536 	mov	a,r2
   0565 24 20              3537 	add	a,#0xff - 0xDF
   0567 50 1E              3538 	jnc	00101$
                           3539 ;	Peephole 300	removed redundant label 00122$
   0569                    3540 00108$:
                           3541 ;	genAssign
   0569 90s00r3C           3542 	mov	dptr,#_lcd_go_to_addr_address_1_1
   056C E0                 3543 	movx	a,@dptr
   056D FA                 3544 	mov	r2,a
                           3545 ;	genCmpLt
                           3546 ;	genCmp
   056E BA C0 00           3547 	cjne	r2,#0xC0,00123$
   0571                    3548 00123$:
                           3549 ;	genIfxJump
                           3550 ;	Peephole 112.b	changed ljmp to sjmp
                           3551 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0571 40 05              3552 	jc	00110$
                           3553 ;	Peephole 300	removed redundant label 00124$
                           3554 ;	genCmpGt
                           3555 ;	genCmp
                           3556 ;	genIfxJump
                           3557 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           3558 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0573 EA                 3559 	mov	a,r2
   0574 24 30              3560 	add	a,#0xff - 0xCF
   0576 50 0F              3561 	jnc	00101$
                           3562 ;	Peephole 300	removed redundant label 00125$
   0578                    3563 00110$:
                           3564 ;	genAssign
   0578 90s00r3C           3565 	mov	dptr,#_lcd_go_to_addr_address_1_1
   057B E0                 3566 	movx	a,@dptr
   057C FA                 3567 	mov	r2,a
                           3568 ;	genCmpLt
                           3569 ;	genCmp
   057D BA 80 00           3570 	cjne	r2,#0x80,00126$
   0580                    3571 00126$:
                           3572 ;	genIfxJump
                           3573 ;	Peephole 112.b	changed ljmp to sjmp
                           3574 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0580 40 1C              3575 	jc	00102$
                           3576 ;	Peephole 300	removed redundant label 00127$
                           3577 ;	genCmpGt
                           3578 ;	genCmp
                           3579 ;	genIfxJump
                           3580 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0582 EA                 3581 	mov	a,r2
   0583 24 70              3582 	add	a,#0xff - 0x8F
                           3583 ;	Peephole 112.b	changed ljmp to sjmp
                           3584 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0585 40 17              3585 	jc	00102$
                           3586 ;	Peephole 300	removed redundant label 00128$
   0587                    3587 00101$:
                    0587   3588 	C$lcd.c$202$2$2 ==.
                           3589 ;	lcd.c:202: lcd_busy_wait();
                           3590 ;	genCall
   0587 12s02r59           3591 	lcall	_lcd_busy_wait
                    058A   3592 	C$lcd.c$203$2$2 ==.
                           3593 ;	lcd.c:203: address |= lcd_ddram_address_mask;
                           3594 ;	genAssign
                           3595 ;	genOr
   058A 90s00r3C           3596 	mov	dptr,#_lcd_go_to_addr_address_1_1
   058D E0                 3597 	movx	a,@dptr
   058E FA                 3598 	mov	r2,a
                           3599 ;	Peephole 248.a	optimized or to xdata
   058F 44 80              3600 	orl	a,#0x80
   0591 F0                 3601 	movx	@dptr,a
                    0592   3602 	C$lcd.c$204$2$2 ==.
                           3603 ;	lcd.c:204: lcd_command_write(address);
                           3604 ;	genAssign
   0592 90s00r3C           3605 	mov	dptr,#_lcd_go_to_addr_address_1_1
   0595 E0                 3606 	movx	a,@dptr
                           3607 ;	genCall
   0596 FA                 3608 	mov	r2,a
                           3609 ;	Peephole 244.c	loading dpl from a instead of r2
   0597 F5 82              3610 	mov	dpl,a
   0599 12s07r6F           3611 	lcall	_lcd_command_write
                           3612 ;	Peephole 112.b	changed ljmp to sjmp
   059C 80 06              3613 	sjmp	00103$
   059E                    3614 00102$:
                    059E   3615 	C$lcd.c$208$2$3 ==.
                           3616 ;	lcd.c:208: my_printf(invalid_address_txt);
                           3617 ;	genCall
                           3618 ;	Peephole 182.a	used 16 bit load of DPTR
   059E 90s00r3D           3619 	mov	dptr,#_lcd_go_to_addr_invalid_address_txt_1_1
   05A1 12s00r00           3620 	lcall	_my_printf
   05A4                    3621 00103$:
                    05A4   3622 	C$lcd.c$210$1$1 ==.
                           3623 ;	lcd.c:210: return;
                           3624 ;	genRet
                           3625 ;	Peephole 300	removed redundant label 00111$
                    05A4   3626 	C$lcd.c$211$1$1 ==.
                    05A4   3627 	XG$lcd_go_to_addr$0$0 ==.
   05A4 22                 3628 	ret
                           3629 ;------------------------------------------------------------
                           3630 ;Allocation info for local variables in function 'lcd_go_to_x_y'
                           3631 ;------------------------------------------------------------
                           3632 ;column                    Allocated with name '_lcd_go_to_x_y_PARM_2'
                           3633 ;row                       Allocated with name '_lcd_go_to_x_y_row_1_1'
                           3634 ;invalid_row_txt           Allocated with name '_lcd_go_to_x_y_invalid_row_txt_1_1'
                           3635 ;invalid_column_txt        Allocated with name '_lcd_go_to_x_y_invalid_column_txt_1_1'
                           3636 ;lcd_row_base_address      Allocated with name '_lcd_go_to_x_y_lcd_row_base_address_1_1'
                           3637 ;address                   Allocated with name '_lcd_go_to_x_y_address_1_1'
                           3638 ;------------------------------------------------------------
                    05A5   3639 	G$lcd_go_to_x_y$0$0 ==.
                    05A5   3640 	C$lcd.c$219$1$1 ==.
                           3641 ;	lcd.c:219: void lcd_go_to_x_y(__xdata uint8_t row,__xdata uint8_t column)
                           3642 ;	-----------------------------------------
                           3643 ;	 function lcd_go_to_x_y
                           3644 ;	-----------------------------------------
   05A5                    3645 _lcd_go_to_x_y:
                           3646 ;	genReceive
   05A5 E5 82              3647 	mov	a,dpl
   05A7 90s00r50           3648 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   05AA F0                 3649 	movx	@dptr,a
                    05AB   3650 	C$lcd.c$221$1$1 ==.
                           3651 ;	lcd.c:221: __xdata uint8_t invalid_row_txt[]="\n\rInvalid Row Number";
                           3652 ;	genPointerSet
                           3653 ;     genFarPointerSet
   05AB 90s00r51           3654 	mov	dptr,#_lcd_go_to_x_y_invalid_row_txt_1_1
   05AE 74 0A              3655 	mov	a,#0x0A
   05B0 F0                 3656 	movx	@dptr,a
                           3657 ;	genPointerSet
                           3658 ;     genFarPointerSet
   05B1 90s00r52           3659 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0001)
   05B4 74 0D              3660 	mov	a,#0x0D
   05B6 F0                 3661 	movx	@dptr,a
                           3662 ;	genPointerSet
                           3663 ;     genFarPointerSet
   05B7 90s00r53           3664 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0002)
   05BA 74 49              3665 	mov	a,#0x49
   05BC F0                 3666 	movx	@dptr,a
                           3667 ;	genPointerSet
                           3668 ;     genFarPointerSet
   05BD 90s00r54           3669 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0003)
   05C0 74 6E              3670 	mov	a,#0x6E
   05C2 F0                 3671 	movx	@dptr,a
                           3672 ;	genPointerSet
                           3673 ;     genFarPointerSet
   05C3 90s00r55           3674 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0004)
   05C6 74 76              3675 	mov	a,#0x76
   05C8 F0                 3676 	movx	@dptr,a
                           3677 ;	genPointerSet
                           3678 ;     genFarPointerSet
   05C9 90s00r56           3679 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0005)
   05CC 74 61              3680 	mov	a,#0x61
   05CE F0                 3681 	movx	@dptr,a
                           3682 ;	genPointerSet
                           3683 ;     genFarPointerSet
   05CF 90s00r57           3684 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0006)
   05D2 74 6C              3685 	mov	a,#0x6C
   05D4 F0                 3686 	movx	@dptr,a
                           3687 ;	genPointerSet
                           3688 ;     genFarPointerSet
   05D5 90s00r58           3689 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0007)
   05D8 74 69              3690 	mov	a,#0x69
   05DA F0                 3691 	movx	@dptr,a
                           3692 ;	genPointerSet
                           3693 ;     genFarPointerSet
   05DB 90s00r59           3694 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0008)
   05DE 74 64              3695 	mov	a,#0x64
   05E0 F0                 3696 	movx	@dptr,a
                           3697 ;	genPointerSet
                           3698 ;     genFarPointerSet
   05E1 90s00r5A           3699 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0009)
   05E4 74 20              3700 	mov	a,#0x20
   05E6 F0                 3701 	movx	@dptr,a
                           3702 ;	genPointerSet
                           3703 ;     genFarPointerSet
   05E7 90s00r5B           3704 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000a)
   05EA 74 52              3705 	mov	a,#0x52
   05EC F0                 3706 	movx	@dptr,a
                           3707 ;	genPointerSet
                           3708 ;     genFarPointerSet
   05ED 90s00r5C           3709 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000b)
   05F0 74 6F              3710 	mov	a,#0x6F
   05F2 F0                 3711 	movx	@dptr,a
                           3712 ;	genPointerSet
                           3713 ;     genFarPointerSet
   05F3 90s00r5D           3714 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000c)
   05F6 74 77              3715 	mov	a,#0x77
   05F8 F0                 3716 	movx	@dptr,a
                           3717 ;	genPointerSet
                           3718 ;     genFarPointerSet
   05F9 90s00r5E           3719 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000d)
   05FC 74 20              3720 	mov	a,#0x20
   05FE F0                 3721 	movx	@dptr,a
                           3722 ;	genPointerSet
                           3723 ;     genFarPointerSet
   05FF 90s00r5F           3724 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000e)
   0602 74 4E              3725 	mov	a,#0x4E
   0604 F0                 3726 	movx	@dptr,a
                           3727 ;	genPointerSet
                           3728 ;     genFarPointerSet
   0605 90s00r60           3729 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000f)
   0608 74 75              3730 	mov	a,#0x75
   060A F0                 3731 	movx	@dptr,a
                           3732 ;	genPointerSet
                           3733 ;     genFarPointerSet
   060B 90s00r61           3734 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0010)
   060E 74 6D              3735 	mov	a,#0x6D
   0610 F0                 3736 	movx	@dptr,a
                           3737 ;	genPointerSet
                           3738 ;     genFarPointerSet
   0611 90s00r62           3739 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0011)
   0614 74 62              3740 	mov	a,#0x62
   0616 F0                 3741 	movx	@dptr,a
                           3742 ;	genPointerSet
                           3743 ;     genFarPointerSet
   0617 90s00r63           3744 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0012)
   061A 74 65              3745 	mov	a,#0x65
   061C F0                 3746 	movx	@dptr,a
                           3747 ;	genPointerSet
                           3748 ;     genFarPointerSet
   061D 90s00r64           3749 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0013)
   0620 74 72              3750 	mov	a,#0x72
   0622 F0                 3751 	movx	@dptr,a
                           3752 ;	genPointerSet
                           3753 ;     genFarPointerSet
   0623 90s00r65           3754 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0014)
                           3755 ;	Peephole 181	changed mov to clr
   0626 E4                 3756 	clr	a
   0627 F0                 3757 	movx	@dptr,a
                    0628   3758 	C$lcd.c$222$1$1 ==.
                           3759 ;	lcd.c:222: __xdata uint8_t invalid_column_txt[]="\n\rInvalid Column Number";
                           3760 ;	genPointerSet
                           3761 ;     genFarPointerSet
   0628 90s00r66           3762 	mov	dptr,#_lcd_go_to_x_y_invalid_column_txt_1_1
   062B 74 0A              3763 	mov	a,#0x0A
   062D F0                 3764 	movx	@dptr,a
                           3765 ;	genPointerSet
                           3766 ;     genFarPointerSet
   062E 90s00r67           3767 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0001)
   0631 74 0D              3768 	mov	a,#0x0D
   0633 F0                 3769 	movx	@dptr,a
                           3770 ;	genPointerSet
                           3771 ;     genFarPointerSet
   0634 90s00r68           3772 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0002)
   0637 74 49              3773 	mov	a,#0x49
   0639 F0                 3774 	movx	@dptr,a
                           3775 ;	genPointerSet
                           3776 ;     genFarPointerSet
   063A 90s00r69           3777 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0003)
   063D 74 6E              3778 	mov	a,#0x6E
   063F F0                 3779 	movx	@dptr,a
                           3780 ;	genPointerSet
                           3781 ;     genFarPointerSet
   0640 90s00r6A           3782 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0004)
   0643 74 76              3783 	mov	a,#0x76
   0645 F0                 3784 	movx	@dptr,a
                           3785 ;	genPointerSet
                           3786 ;     genFarPointerSet
   0646 90s00r6B           3787 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0005)
   0649 74 61              3788 	mov	a,#0x61
   064B F0                 3789 	movx	@dptr,a
                           3790 ;	genPointerSet
                           3791 ;     genFarPointerSet
   064C 90s00r6C           3792 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0006)
   064F 74 6C              3793 	mov	a,#0x6C
   0651 F0                 3794 	movx	@dptr,a
                           3795 ;	genPointerSet
                           3796 ;     genFarPointerSet
   0652 90s00r6D           3797 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0007)
   0655 74 69              3798 	mov	a,#0x69
   0657 F0                 3799 	movx	@dptr,a
                           3800 ;	genPointerSet
                           3801 ;     genFarPointerSet
   0658 90s00r6E           3802 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0008)
   065B 74 64              3803 	mov	a,#0x64
   065D F0                 3804 	movx	@dptr,a
                           3805 ;	genPointerSet
                           3806 ;     genFarPointerSet
   065E 90s00r6F           3807 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0009)
   0661 74 20              3808 	mov	a,#0x20
   0663 F0                 3809 	movx	@dptr,a
                           3810 ;	genPointerSet
                           3811 ;     genFarPointerSet
   0664 90s00r70           3812 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000a)
   0667 74 43              3813 	mov	a,#0x43
   0669 F0                 3814 	movx	@dptr,a
                           3815 ;	genPointerSet
                           3816 ;     genFarPointerSet
   066A 90s00r71           3817 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000b)
   066D 74 6F              3818 	mov	a,#0x6F
   066F F0                 3819 	movx	@dptr,a
                           3820 ;	genPointerSet
                           3821 ;     genFarPointerSet
   0670 90s00r72           3822 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000c)
   0673 74 6C              3823 	mov	a,#0x6C
   0675 F0                 3824 	movx	@dptr,a
                           3825 ;	genPointerSet
                           3826 ;     genFarPointerSet
   0676 90s00r73           3827 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000d)
   0679 74 75              3828 	mov	a,#0x75
   067B F0                 3829 	movx	@dptr,a
                           3830 ;	genPointerSet
                           3831 ;     genFarPointerSet
   067C 90s00r74           3832 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000e)
   067F 74 6D              3833 	mov	a,#0x6D
   0681 F0                 3834 	movx	@dptr,a
                           3835 ;	genPointerSet
                           3836 ;     genFarPointerSet
   0682 90s00r75           3837 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000f)
   0685 74 6E              3838 	mov	a,#0x6E
   0687 F0                 3839 	movx	@dptr,a
                           3840 ;	genPointerSet
                           3841 ;     genFarPointerSet
   0688 90s00r76           3842 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0010)
   068B 74 20              3843 	mov	a,#0x20
   068D F0                 3844 	movx	@dptr,a
                           3845 ;	genPointerSet
                           3846 ;     genFarPointerSet
   068E 90s00r77           3847 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0011)
   0691 74 4E              3848 	mov	a,#0x4E
   0693 F0                 3849 	movx	@dptr,a
                           3850 ;	genPointerSet
                           3851 ;     genFarPointerSet
   0694 90s00r78           3852 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0012)
   0697 74 75              3853 	mov	a,#0x75
   0699 F0                 3854 	movx	@dptr,a
                           3855 ;	genPointerSet
                           3856 ;     genFarPointerSet
   069A 90s00r79           3857 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0013)
   069D 74 6D              3858 	mov	a,#0x6D
   069F F0                 3859 	movx	@dptr,a
                           3860 ;	genPointerSet
                           3861 ;     genFarPointerSet
   06A0 90s00r7A           3862 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0014)
   06A3 74 62              3863 	mov	a,#0x62
   06A5 F0                 3864 	movx	@dptr,a
                           3865 ;	genPointerSet
                           3866 ;     genFarPointerSet
   06A6 90s00r7B           3867 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0015)
   06A9 74 65              3868 	mov	a,#0x65
   06AB F0                 3869 	movx	@dptr,a
                           3870 ;	genPointerSet
                           3871 ;     genFarPointerSet
   06AC 90s00r7C           3872 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0016)
   06AF 74 72              3873 	mov	a,#0x72
   06B1 F0                 3874 	movx	@dptr,a
                           3875 ;	genPointerSet
                           3876 ;     genFarPointerSet
   06B2 90s00r7D           3877 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0017)
                           3878 ;	Peephole 181	changed mov to clr
   06B5 E4                 3879 	clr	a
   06B6 F0                 3880 	movx	@dptr,a
                    06B7   3881 	C$lcd.c$223$1$1 ==.
                           3882 ;	lcd.c:223: __xdata uint8_t lcd_row_base_address[]={lcd_row_0_base_address,lcd_row_1_base_address,lcd_row_2_base_address,lcd_row_3_base_address};
                           3883 ;	genPointerSet
                           3884 ;     genFarPointerSet
   06B7 90s00r7E           3885 	mov	dptr,#_lcd_go_to_x_y_lcd_row_base_address_1_1
   06BA 74 80              3886 	mov	a,#0x80
   06BC F0                 3887 	movx	@dptr,a
                           3888 ;	genPointerSet
                           3889 ;     genFarPointerSet
   06BD 90s00r7F           3890 	mov	dptr,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 + 0x0001)
   06C0 74 C0              3891 	mov	a,#0xC0
   06C2 F0                 3892 	movx	@dptr,a
                           3893 ;	genPointerSet
                           3894 ;     genFarPointerSet
   06C3 90s00r80           3895 	mov	dptr,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 + 0x0002)
   06C6 74 90              3896 	mov	a,#0x90
   06C8 F0                 3897 	movx	@dptr,a
                           3898 ;	genPointerSet
                           3899 ;     genFarPointerSet
   06C9 90s00r81           3900 	mov	dptr,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 + 0x0003)
   06CC 74 D0              3901 	mov	a,#0xD0
   06CE F0                 3902 	movx	@dptr,a
                    06CF   3903 	C$lcd.c$225$1$1 ==.
                           3904 ;	lcd.c:225: lcd_busy_wait();
                           3905 ;	genCall
   06CF 12s02r59           3906 	lcall	_lcd_busy_wait
                    06D2   3907 	C$lcd.c$226$1$1 ==.
                           3908 ;	lcd.c:226: if(column >= lcd_width)
                           3909 ;	genAssign
   06D2 90s00r4F           3910 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   06D5 E0                 3911 	movx	a,@dptr
   06D6 FA                 3912 	mov	r2,a
                           3913 ;	genCmpLt
                           3914 ;	genCmp
   06D7 BA 10 00           3915 	cjne	r2,#0x10,00122$
   06DA                    3916 00122$:
                           3917 ;	genIfxJump
                           3918 ;	Peephole 112.b	changed ljmp to sjmp
                           3919 ;	Peephole 160.a	removed sjmp by inverse jump logic
   06DA 40 0C              3920 	jc	00102$
                           3921 ;	Peephole 300	removed redundant label 00123$
                    06DC   3922 	C$lcd.c$228$2$2 ==.
                           3923 ;	lcd.c:228: column = eeprom_read(lcd_current_column_address);
                           3924 ;	genCall
                           3925 ;	Peephole 182.b	used 16 bit load of dptr
   06DC 90 07 77           3926 	mov	dptr,#0x0777
   06DF 12s00r00           3927 	lcall	_eeprom_read
   06E2 E5 82              3928 	mov	a,dpl
                           3929 ;	genAssign
   06E4 90s00r4F           3930 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   06E7 F0                 3931 	movx	@dptr,a
   06E8                    3932 00102$:
                    06E8   3933 	C$lcd.c$230$1$1 ==.
                           3934 ;	lcd.c:230: if(row >= lcd_height)
                           3935 ;	genAssign
   06E8 90s00r50           3936 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   06EB E0                 3937 	movx	a,@dptr
   06EC FA                 3938 	mov	r2,a
                           3939 ;	genCmpLt
                           3940 ;	genCmp
   06ED BA 04 00           3941 	cjne	r2,#0x04,00124$
   06F0                    3942 00124$:
                           3943 ;	genIfxJump
                           3944 ;	Peephole 112.b	changed ljmp to sjmp
                           3945 ;	Peephole 160.a	removed sjmp by inverse jump logic
   06F0 40 0C              3946 	jc	00104$
                           3947 ;	Peephole 300	removed redundant label 00125$
                    06F2   3948 	C$lcd.c$232$2$3 ==.
                           3949 ;	lcd.c:232: row = eeprom_read(lcd_current_row_address);
                           3950 ;	genCall
                           3951 ;	Peephole 182.b	used 16 bit load of dptr
   06F2 90 05 55           3952 	mov	dptr,#0x0555
   06F5 12s00r00           3953 	lcall	_eeprom_read
   06F8 E5 82              3954 	mov	a,dpl
                           3955 ;	genAssign
   06FA 90s00r50           3956 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   06FD F0                 3957 	movx	@dptr,a
   06FE                    3958 00104$:
                    06FE   3959 	C$lcd.c$234$1$1 ==.
                           3960 ;	lcd.c:234: address = lcd_row_base_address[row] + column;
                           3961 ;	genAssign
   06FE 90s00r50           3962 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   0701 E0                 3963 	movx	a,@dptr
                           3964 ;	genPlus
   0702 FA                 3965 	mov	r2,a
                           3966 ;	Peephole 177.b	removed redundant mov
   0703 24r7E              3967 	add	a,#_lcd_go_to_x_y_lcd_row_base_address_1_1
   0705 F5 82              3968 	mov	dpl,a
                           3969 ;	Peephole 181	changed mov to clr
   0707 E4                 3970 	clr	a
   0708 34s00              3971 	addc	a,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 >> 8)
   070A F5 83              3972 	mov	dph,a
                           3973 ;	genPointerGet
                           3974 ;	genFarPointerGet
   070C E0                 3975 	movx	a,@dptr
   070D FA                 3976 	mov	r2,a
                           3977 ;	genAssign
   070E 90s00r4F           3978 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0711 E0                 3979 	movx	a,@dptr
                           3980 ;	genPlus
   0712 FB                 3981 	mov	r3,a
                           3982 ;	Peephole 177.b	removed redundant mov
                           3983 ;	Peephole 236.a	used r2 instead of ar2
   0713 2A                 3984 	add	a,r2
   0714 FA                 3985 	mov	r2,a
                    0715   3986 	C$lcd.c$235$1$1 ==.
                           3987 ;	lcd.c:235: if((address>=0x90&&address<=0x9F)||(address>=0xD0&&address<=0xD7)||(address>=0xC0&&address<=0xCF)||(address>=0x80&&address<=0x8F))
                           3988 ;	genCmpLt
                           3989 ;	genCmp
   0715 BA 90 00           3990 	cjne	r2,#0x90,00126$
   0718                    3991 00126$:
                           3992 ;	genIfxJump
                           3993 ;	Peephole 112.b	changed ljmp to sjmp
                           3994 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0718 40 05              3995 	jc	00109$
                           3996 ;	Peephole 300	removed redundant label 00127$
                           3997 ;	genCmpGt
                           3998 ;	genCmp
                           3999 ;	genIfxJump
                           4000 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           4001 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   071A EA                 4002 	mov	a,r2
   071B 24 60              4003 	add	a,#0xff - 0x9F
   071D 50 1E              4004 	jnc	00105$
                           4005 ;	Peephole 300	removed redundant label 00128$
   071F                    4006 00109$:
                           4007 ;	genCmpLt
                           4008 ;	genCmp
   071F BA D0 00           4009 	cjne	r2,#0xD0,00129$
   0722                    4010 00129$:
                           4011 ;	genIfxJump
                           4012 ;	Peephole 112.b	changed ljmp to sjmp
                           4013 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0722 40 05              4014 	jc	00111$
                           4015 ;	Peephole 300	removed redundant label 00130$
                           4016 ;	genCmpGt
                           4017 ;	genCmp
                           4018 ;	genIfxJump
                           4019 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           4020 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0724 EA                 4021 	mov	a,r2
   0725 24 28              4022 	add	a,#0xff - 0xD7
   0727 50 14              4023 	jnc	00105$
                           4024 ;	Peephole 300	removed redundant label 00131$
   0729                    4025 00111$:
                           4026 ;	genCmpLt
                           4027 ;	genCmp
   0729 BA C0 00           4028 	cjne	r2,#0xC0,00132$
   072C                    4029 00132$:
                           4030 ;	genIfxJump
                           4031 ;	Peephole 112.b	changed ljmp to sjmp
                           4032 ;	Peephole 160.a	removed sjmp by inverse jump logic
   072C 40 05              4033 	jc	00113$
                           4034 ;	Peephole 300	removed redundant label 00133$
                           4035 ;	genCmpGt
                           4036 ;	genCmp
                           4037 ;	genIfxJump
                           4038 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           4039 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   072E EA                 4040 	mov	a,r2
   072F 24 30              4041 	add	a,#0xff - 0xCF
   0731 50 0A              4042 	jnc	00105$
                           4043 ;	Peephole 300	removed redundant label 00134$
   0733                    4044 00113$:
                           4045 ;	genCmpLt
                           4046 ;	genCmp
   0733 BA 80 00           4047 	cjne	r2,#0x80,00135$
   0736                    4048 00135$:
                           4049 ;	genIfxJump
                           4050 ;	Peephole 112.b	changed ljmp to sjmp
                           4051 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0736 40 36              4052 	jc	00106$
                           4053 ;	Peephole 300	removed redundant label 00136$
                           4054 ;	genCmpGt
                           4055 ;	genCmp
                           4056 ;	genIfxJump
                           4057 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0738 EA                 4058 	mov	a,r2
   0739 24 70              4059 	add	a,#0xff - 0x8F
                           4060 ;	Peephole 112.b	changed ljmp to sjmp
                           4061 ;	Peephole 160.a	removed sjmp by inverse jump logic
   073B 40 31              4062 	jc	00106$
                           4063 ;	Peephole 300	removed redundant label 00137$
   073D                    4064 00105$:
                    073D   4065 	C$lcd.c$237$2$4 ==.
                           4066 ;	lcd.c:237: lcd_go_to_addr(address);
                           4067 ;	genCall
   073D 8A 82              4068 	mov	dpl,r2
   073F 12s04rDA           4069 	lcall	_lcd_go_to_addr
                    0742   4070 	C$lcd.c$238$2$4 ==.
                           4071 ;	lcd.c:238: lcd_current_column = column;
                           4072 ;	genAssign
   0742 90s00r4F           4073 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0745 E0                 4074 	movx	a,@dptr
                           4075 ;	genAssign
   0746 FA                 4076 	mov	r2,a
   0747 90s00r01           4077 	mov	dptr,#_lcd_current_column
                           4078 ;	Peephole 100	removed redundant mov
   074A F0                 4079 	movx	@dptr,a
                    074B   4080 	C$lcd.c$239$2$4 ==.
                           4081 ;	lcd.c:239: lcd_current_row = row;
                           4082 ;	genAssign
   074B 90s00r50           4083 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   074E E0                 4084 	movx	a,@dptr
                           4085 ;	genAssign
   074F FB                 4086 	mov	r3,a
   0750 90s00r02           4087 	mov	dptr,#_lcd_current_row
                           4088 ;	Peephole 100	removed redundant mov
   0753 F0                 4089 	movx	@dptr,a
                    0754   4090 	C$lcd.c$240$2$4 ==.
                           4091 ;	lcd.c:240: eeprom_write(lcd_current_column_address,column);
                           4092 ;	genAssign
   0754 90s00r00           4093 	mov	dptr,#_eeprom_write_PARM_2
   0757 EA                 4094 	mov	a,r2
   0758 F0                 4095 	movx	@dptr,a
                           4096 ;	genCall
                           4097 ;	Peephole 182.b	used 16 bit load of dptr
   0759 90 07 77           4098 	mov	dptr,#0x0777
   075C C0 03              4099 	push	ar3
   075E 12s00r00           4100 	lcall	_eeprom_write
   0761 D0 03              4101 	pop	ar3
                    0763   4102 	C$lcd.c$241$2$4 ==.
                           4103 ;	lcd.c:241: eeprom_write(lcd_current_row_address,row);
                           4104 ;	genAssign
   0763 90s00r00           4105 	mov	dptr,#_eeprom_write_PARM_2
   0766 EB                 4106 	mov	a,r3
   0767 F0                 4107 	movx	@dptr,a
                           4108 ;	genCall
                           4109 ;	Peephole 182.b	used 16 bit load of dptr
   0768 90 05 55           4110 	mov	dptr,#0x0555
   076B 12s00r00           4111 	lcall	_eeprom_write
   076E                    4112 00106$:
                    076E   4113 	C$lcd.c$243$1$1 ==.
                           4114 ;	lcd.c:243: return;
                           4115 ;	genRet
                           4116 ;	Peephole 300	removed redundant label 00114$
                    076E   4117 	C$lcd.c$244$1$1 ==.
                    076E   4118 	XG$lcd_go_to_x_y$0$0 ==.
   076E 22                 4119 	ret
                           4120 ;------------------------------------------------------------
                           4121 ;Allocation info for local variables in function 'lcd_command_write'
                           4122 ;------------------------------------------------------------
                           4123 ;data_byte                 Allocated with name '_lcd_command_write_data_byte_1_1'
                           4124 ;------------------------------------------------------------
                    076F   4125 	G$lcd_command_write$0$0 ==.
                    076F   4126 	C$lcd.c$251$1$1 ==.
                           4127 ;	lcd.c:251: void lcd_command_write(__xdata uint8_t data_byte)
                           4128 ;	-----------------------------------------
                           4129 ;	 function lcd_command_write
                           4130 ;	-----------------------------------------
   076F                    4131 _lcd_command_write:
                           4132 ;	genReceive
   076F E5 82              4133 	mov	a,dpl
   0771 90s00r82           4134 	mov	dptr,#_lcd_command_write_data_byte_1_1
   0774 F0                 4135 	movx	@dptr,a
                    0775   4136 	C$lcd.c$253$1$1 ==.
                           4137 ;	lcd.c:253: lcd_busy_wait();
                           4138 ;	genCall
   0775 12s02r59           4139 	lcall	_lcd_busy_wait
                    0778   4140 	C$lcd.c$254$1$1 ==.
                           4141 ;	lcd.c:254: *(lcd_command_write_address) = data_byte;
                           4142 ;	genAssign
   0778 7A 00              4143 	mov	r2,#0x00
   077A 7B 80              4144 	mov	r3,#0x80
                           4145 ;	genAssign
   077C 90s00r82           4146 	mov	dptr,#_lcd_command_write_data_byte_1_1
   077F E0                 4147 	movx	a,@dptr
                           4148 ;	genPointerSet
                           4149 ;     genFarPointerSet
   0780 FC                 4150 	mov	r4,a
   0781 8A 82              4151 	mov	dpl,r2
   0783 8B 83              4152 	mov	dph,r3
                           4153 ;	Peephole 136	removed redundant move
   0785 F0                 4154 	movx	@dptr,a
                    0786   4155 	C$lcd.c$255$1$1 ==.
                           4156 ;	lcd.c:255: return;
                           4157 ;	genRet
                           4158 ;	Peephole 300	removed redundant label 00101$
                    0786   4159 	C$lcd.c$256$1$1 ==.
                    0786   4160 	XG$lcd_command_write$0$0 ==.
   0786 22                 4161 	ret
                           4162 ;------------------------------------------------------------
                           4163 ;Allocation info for local variables in function 'lcd_put_ch'
                           4164 ;------------------------------------------------------------
                           4165 ;data_byte                 Allocated with name '_lcd_put_ch_data_byte_1_1'
                           4166 ;------------------------------------------------------------
                    0787   4167 	G$lcd_put_ch$0$0 ==.
                    0787   4168 	C$lcd.c$263$1$1 ==.
                           4169 ;	lcd.c:263: void lcd_put_ch(__xdata uint8_t data_byte)
                           4170 ;	-----------------------------------------
                           4171 ;	 function lcd_put_ch
                           4172 ;	-----------------------------------------
   0787                    4173 _lcd_put_ch:
                           4174 ;	genReceive
   0787 E5 82              4175 	mov	a,dpl
   0789 90s00r83           4176 	mov	dptr,#_lcd_put_ch_data_byte_1_1
   078C F0                 4177 	movx	@dptr,a
                    078D   4178 	C$lcd.c$265$1$1 ==.
                           4179 ;	lcd.c:265: lcd_busy_wait();
                           4180 ;	genCall
   078D 12s02r59           4181 	lcall	_lcd_busy_wait
                    0790   4182 	C$lcd.c$266$1$1 ==.
                           4183 ;	lcd.c:266: if(((lcd_current_row == 3)&&(lcd_current_column < 8))||(lcd_current_row < 3))
                           4184 ;	genAssign
   0790 90s00r02           4185 	mov	dptr,#_lcd_current_row
   0793 E0                 4186 	movx	a,@dptr
   0794 FA                 4187 	mov	r2,a
                           4188 ;	genCmpEq
                           4189 ;	gencjneshort
                           4190 ;	Peephole 112.b	changed ljmp to sjmp
                           4191 ;	Peephole 198.b	optimized misc jump sequence
   0795 BA 03 0A           4192 	cjne	r2,#0x03,00104$
                           4193 ;	Peephole 200.b	removed redundant sjmp
                           4194 ;	Peephole 300	removed redundant label 00115$
                           4195 ;	Peephole 300	removed redundant label 00116$
                           4196 ;	genAssign
   0798 90s00r01           4197 	mov	dptr,#_lcd_current_column
   079B E0                 4198 	movx	a,@dptr
   079C FB                 4199 	mov	r3,a
                           4200 ;	genCmpLt
                           4201 ;	genCmp
   079D BB 08 00           4202 	cjne	r3,#0x08,00117$
   07A0                    4203 00117$:
                           4204 ;	genIfxJump
                           4205 ;	Peephole 112.b	changed ljmp to sjmp
                           4206 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07A0 40 05              4207 	jc	00101$
                           4208 ;	Peephole 300	removed redundant label 00118$
   07A2                    4209 00104$:
                           4210 ;	genCmpLt
                           4211 ;	genCmp
   07A2 BA 03 00           4212 	cjne	r2,#0x03,00119$
   07A5                    4213 00119$:
                           4214 ;	genIfxJump
                           4215 ;	Peephole 108.a	removed ljmp by inverse jump logic
   07A5 50 3B              4216 	jnc	00102$
                           4217 ;	Peephole 300	removed redundant label 00120$
   07A7                    4218 00101$:
                    07A7   4219 	C$lcd.c$268$2$2 ==.
                           4220 ;	lcd.c:268: lcd_busy_wait();
                           4221 ;	genCall
   07A7 12s02r59           4222 	lcall	_lcd_busy_wait
                    07AA   4223 	C$lcd.c$269$2$2 ==.
                           4224 ;	lcd.c:269: *(lcd_data_write_address) = data_byte;
                           4225 ;	genAssign
   07AA 7A 00              4226 	mov	r2,#0x00
   07AC 7B A0              4227 	mov	r3,#0xA0
                           4228 ;	genAssign
   07AE 90s00r83           4229 	mov	dptr,#_lcd_put_ch_data_byte_1_1
   07B1 E0                 4230 	movx	a,@dptr
                           4231 ;	genPointerSet
                           4232 ;     genFarPointerSet
   07B2 FC                 4233 	mov	r4,a
   07B3 8A 82              4234 	mov	dpl,r2
   07B5 8B 83              4235 	mov	dph,r3
                           4236 ;	Peephole 136	removed redundant move
   07B7 F0                 4237 	movx	@dptr,a
                    07B8   4238 	C$lcd.c$270$2$2 ==.
                           4239 ;	lcd.c:270: lcd_current_column++;
                           4240 ;	genAssign
   07B8 90s00r01           4241 	mov	dptr,#_lcd_current_column
   07BB E0                 4242 	movx	a,@dptr
   07BC FA                 4243 	mov	r2,a
                           4244 ;	genPlus
   07BD 90s00r01           4245 	mov	dptr,#_lcd_current_column
                           4246 ;     genPlusIncr
   07C0 74 01              4247 	mov	a,#0x01
                           4248 ;	Peephole 236.a	used r2 instead of ar2
   07C2 2A                 4249 	add	a,r2
   07C3 F0                 4250 	movx	@dptr,a
                    07C4   4251 	C$lcd.c$271$2$2 ==.
                           4252 ;	lcd.c:271: eeprom_write(lcd_current_column_address,lcd_current_column);
                           4253 ;	genAssign
   07C4 90s00r01           4254 	mov	dptr,#_lcd_current_column
   07C7 E0                 4255 	movx	a,@dptr
                           4256 ;	genAssign
   07C8 FA                 4257 	mov	r2,a
   07C9 90s00r00           4258 	mov	dptr,#_eeprom_write_PARM_2
                           4259 ;	Peephole 100	removed redundant mov
   07CC F0                 4260 	movx	@dptr,a
                           4261 ;	genCall
                           4262 ;	Peephole 182.b	used 16 bit load of dptr
   07CD 90 07 77           4263 	mov	dptr,#0x0777
   07D0 12s00r00           4264 	lcall	_eeprom_write
                    07D3   4265 	C$lcd.c$272$2$2 ==.
                           4266 ;	lcd.c:272: eeprom_write(lcd_current_row_address,lcd_current_row);
                           4267 ;	genAssign
   07D3 90s00r02           4268 	mov	dptr,#_lcd_current_row
   07D6 E0                 4269 	movx	a,@dptr
                           4270 ;	genAssign
   07D7 FA                 4271 	mov	r2,a
   07D8 90s00r00           4272 	mov	dptr,#_eeprom_write_PARM_2
                           4273 ;	Peephole 100	removed redundant mov
   07DB F0                 4274 	movx	@dptr,a
                           4275 ;	genCall
                           4276 ;	Peephole 182.b	used 16 bit load of dptr
   07DC 90 05 55           4277 	mov	dptr,#0x0555
   07DF 12s00r00           4278 	lcall	_eeprom_write
   07E2                    4279 00102$:
                    07E2   4280 	C$lcd.c$274$1$1 ==.
                           4281 ;	lcd.c:274: if(((lcd_current_column >= 16)&&(lcd_current_row < 3))||((lcd_current_column >= 8)&&(lcd_current_row == 3)))
                           4282 ;	genAssign
   07E2 90s00r01           4283 	mov	dptr,#_lcd_current_column
   07E5 E0                 4284 	movx	a,@dptr
   07E6 FA                 4285 	mov	r2,a
                           4286 ;	genCmpLt
                           4287 ;	genCmp
   07E7 BA 10 00           4288 	cjne	r2,#0x10,00121$
   07EA                    4289 00121$:
                           4290 ;	genIfxJump
                           4291 ;	Peephole 112.b	changed ljmp to sjmp
                           4292 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07EA 40 0A              4293 	jc	00109$
                           4294 ;	Peephole 300	removed redundant label 00122$
                           4295 ;	genAssign
   07EC 90s00r02           4296 	mov	dptr,#_lcd_current_row
   07EF E0                 4297 	movx	a,@dptr
   07F0 FA                 4298 	mov	r2,a
                           4299 ;	genCmpLt
                           4300 ;	genCmp
   07F1 BA 03 00           4301 	cjne	r2,#0x03,00123$
   07F4                    4302 00123$:
                           4303 ;	genIfxJump
                           4304 ;	Peephole 112.b	changed ljmp to sjmp
                           4305 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07F4 40 12              4306 	jc	00105$
                           4307 ;	Peephole 300	removed redundant label 00124$
   07F6                    4308 00109$:
                           4309 ;	genAssign
   07F6 90s00r01           4310 	mov	dptr,#_lcd_current_column
   07F9 E0                 4311 	movx	a,@dptr
   07FA FA                 4312 	mov	r2,a
                           4313 ;	genCmpLt
                           4314 ;	genCmp
   07FB BA 08 00           4315 	cjne	r2,#0x08,00125$
   07FE                    4316 00125$:
                           4317 ;	genIfxJump
                           4318 ;	Peephole 112.b	changed ljmp to sjmp
                           4319 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07FE 40 0B              4320 	jc	00106$
                           4321 ;	Peephole 300	removed redundant label 00126$
                           4322 ;	genAssign
   0800 90s00r02           4323 	mov	dptr,#_lcd_current_row
   0803 E0                 4324 	movx	a,@dptr
   0804 FA                 4325 	mov	r2,a
                           4326 ;	genCmpEq
                           4327 ;	gencjneshort
                           4328 ;	Peephole 112.b	changed ljmp to sjmp
                           4329 ;	Peephole 198.b	optimized misc jump sequence
   0805 BA 03 03           4330 	cjne	r2,#0x03,00106$
                           4331 ;	Peephole 200.b	removed redundant sjmp
                           4332 ;	Peephole 300	removed redundant label 00127$
                           4333 ;	Peephole 300	removed redundant label 00128$
   0808                    4334 00105$:
                    0808   4335 	C$lcd.c$276$2$3 ==.
                           4336 ;	lcd.c:276: lcd_row_shifter();
                           4337 ;	genCall
   0808 12s01rDC           4338 	lcall	_lcd_row_shifter
   080B                    4339 00106$:
                    080B   4340 	C$lcd.c$278$1$1 ==.
                           4341 ;	lcd.c:278: return;
                           4342 ;	genRet
                           4343 ;	Peephole 300	removed redundant label 00110$
                    080B   4344 	C$lcd.c$279$1$1 ==.
                    080B   4345 	XG$lcd_put_ch$0$0 ==.
   080B 22                 4346 	ret
                           4347 ;------------------------------------------------------------
                           4348 ;Allocation info for local variables in function 'lcd_put_str'
                           4349 ;------------------------------------------------------------
                           4350 ;text_ptr                  Allocated with name '_lcd_put_str_text_ptr_1_1'
                           4351 ;------------------------------------------------------------
                    080C   4352 	G$lcd_put_str$0$0 ==.
                    080C   4353 	C$lcd.c$286$1$1 ==.
                           4354 ;	lcd.c:286: void lcd_put_str(__xdata uint8_t* text_ptr)
                           4355 ;	-----------------------------------------
                           4356 ;	 function lcd_put_str
                           4357 ;	-----------------------------------------
   080C                    4358 _lcd_put_str:
                           4359 ;	genReceive
   080C AA 83              4360 	mov	r2,dph
   080E E5 82              4361 	mov	a,dpl
   0810 90s00r84           4362 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   0813 F0                 4363 	movx	@dptr,a
   0814 A3                 4364 	inc	dptr
   0815 EA                 4365 	mov	a,r2
   0816 F0                 4366 	movx	@dptr,a
                    0817   4367 	C$lcd.c$288$1$1 ==.
                           4368 ;	lcd.c:288: while(*text_ptr!='\0')
                           4369 ;	genAssign
   0817 90s00r84           4370 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   081A E0                 4371 	movx	a,@dptr
   081B FA                 4372 	mov	r2,a
   081C A3                 4373 	inc	dptr
   081D E0                 4374 	movx	a,@dptr
   081E FB                 4375 	mov	r3,a
   081F                    4376 00101$:
                           4377 ;	genPointerGet
                           4378 ;	genFarPointerGet
   081F 8A 82              4379 	mov	dpl,r2
   0821 8B 83              4380 	mov	dph,r3
   0823 E0                 4381 	movx	a,@dptr
                           4382 ;	genCmpEq
                           4383 ;	gencjneshort
                           4384 ;	Peephole 112.b	changed ljmp to sjmp
   0824 FC                 4385 	mov	r4,a
                           4386 ;	Peephole 115.b	jump optimization
   0825 60 1C              4387 	jz	00108$
                           4388 ;	Peephole 300	removed redundant label 00109$
                    0827   4389 	C$lcd.c$290$2$2 ==.
                           4390 ;	lcd.c:290: lcd_put_ch(*text_ptr);
                           4391 ;	genCall
   0827 8C 82              4392 	mov	dpl,r4
   0829 C0 02              4393 	push	ar2
   082B C0 03              4394 	push	ar3
   082D 12s07r87           4395 	lcall	_lcd_put_ch
   0830 D0 03              4396 	pop	ar3
   0832 D0 02              4397 	pop	ar2
                    0834   4398 	C$lcd.c$291$2$2 ==.
                           4399 ;	lcd.c:291: text_ptr++;
                           4400 ;	genPlus
                           4401 ;     genPlusIncr
   0834 0A                 4402 	inc	r2
   0835 BA 00 01           4403 	cjne	r2,#0x00,00110$
   0838 0B                 4404 	inc	r3
   0839                    4405 00110$:
                           4406 ;	genAssign
   0839 90s00r84           4407 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   083C EA                 4408 	mov	a,r2
   083D F0                 4409 	movx	@dptr,a
   083E A3                 4410 	inc	dptr
   083F EB                 4411 	mov	a,r3
   0840 F0                 4412 	movx	@dptr,a
                           4413 ;	Peephole 112.b	changed ljmp to sjmp
   0841 80 DC              4414 	sjmp	00101$
   0843                    4415 00108$:
                           4416 ;	genAssign
   0843 90s00r84           4417 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   0846 EA                 4418 	mov	a,r2
   0847 F0                 4419 	movx	@dptr,a
   0848 A3                 4420 	inc	dptr
   0849 EB                 4421 	mov	a,r3
   084A F0                 4422 	movx	@dptr,a
                    084B   4423 	C$lcd.c$293$1$1 ==.
                           4424 ;	lcd.c:293: return;
                           4425 ;	genRet
                           4426 ;	Peephole 300	removed redundant label 00104$
                    084B   4427 	C$lcd.c$294$1$1 ==.
                    084B   4428 	XG$lcd_put_str$0$0 ==.
   084B 22                 4429 	ret
                           4430 ;------------------------------------------------------------
                           4431 ;Allocation info for local variables in function 'lcd_clear'
                           4432 ;------------------------------------------------------------
                           4433 ;------------------------------------------------------------
                    084C   4434 	G$lcd_clear$0$0 ==.
                    084C   4435 	C$lcd.c$300$1$1 ==.
                           4436 ;	lcd.c:300: void lcd_clear(void)
                           4437 ;	-----------------------------------------
                           4438 ;	 function lcd_clear
                           4439 ;	-----------------------------------------
   084C                    4440 _lcd_clear:
                    084C   4441 	C$lcd.c$302$1$1 ==.
                           4442 ;	lcd.c:302: lcd_command_write(lcd_clear_display);
                           4443 ;	genCall
   084C 75 82 01           4444 	mov	dpl,#0x01
   084F 12s07r6F           4445 	lcall	_lcd_command_write
                    0852   4446 	C$lcd.c$303$1$1 ==.
                           4447 ;	lcd.c:303: lcd_current_row=0;
                           4448 ;	genAssign
   0852 90s00r02           4449 	mov	dptr,#_lcd_current_row
                           4450 ;	Peephole 181	changed mov to clr
                    0855   4451 	C$lcd.c$304$1$1 ==.
                           4452 ;	lcd.c:304: eeprom_write(lcd_current_row_address,lcd_current_row);
                           4453 ;	genAssign
                           4454 ;	Peephole 181	changed mov to clr
                           4455 ;	Peephole 219.a	removed redundant clear
   0855 E4                 4456 	clr	a
   0856 F0                 4457 	movx	@dptr,a
   0857 90s00r00           4458 	mov	dptr,#_eeprom_write_PARM_2
   085A F0                 4459 	movx	@dptr,a
                           4460 ;	genCall
                           4461 ;	Peephole 182.b	used 16 bit load of dptr
   085B 90 05 55           4462 	mov	dptr,#0x0555
   085E 12s00r00           4463 	lcall	_eeprom_write
                    0861   4464 	C$lcd.c$305$1$1 ==.
                           4465 ;	lcd.c:305: lcd_current_column=0;
                           4466 ;	genAssign
   0861 90s00r01           4467 	mov	dptr,#_lcd_current_column
                           4468 ;	Peephole 181	changed mov to clr
                    0864   4469 	C$lcd.c$306$1$1 ==.
                           4470 ;	lcd.c:306: eeprom_write(lcd_current_column_address,lcd_current_column);
                           4471 ;	genAssign
                           4472 ;	Peephole 181	changed mov to clr
                           4473 ;	Peephole 219.a	removed redundant clear
   0864 E4                 4474 	clr	a
   0865 F0                 4475 	movx	@dptr,a
   0866 90s00r00           4476 	mov	dptr,#_eeprom_write_PARM_2
   0869 F0                 4477 	movx	@dptr,a
                           4478 ;	genCall
                           4479 ;	Peephole 182.b	used 16 bit load of dptr
   086A 90 07 77           4480 	mov	dptr,#0x0777
                    086D   4481 	C$lcd.c$307$1$1 ==.
                           4482 ;	lcd.c:307: return;
                           4483 ;	genRet
                    086D   4484 	C$lcd.c$308$1$1 ==.
                    086D   4485 	XG$lcd_clear$0$0 ==.
                           4486 ;	Peephole 253.b	replaced lcall/ret with ljmp
   086D 02s00r00           4487 	ljmp	_eeprom_write
                           4488 ;
                           4489 ;------------------------------------------------------------
                           4490 ;Allocation info for local variables in function 'lcd_custom_character_creation'
                           4491 ;------------------------------------------------------------
                           4492 ;number_of_custom_characters Allocated with name '_lcd_custom_character_creation_number_of_custom_characters_1_1'
                           4493 ;Base_query_txt            Allocated with name '_lcd_custom_character_creation_Base_query_txt_1_1'
                           4494 ;character_row_number      Allocated with name '_lcd_custom_character_creation_character_row_number_1_1'
                           4495 ;character_number          Allocated with name '_lcd_custom_character_creation_character_number_1_1'
                           4496 ;temp_char                 Allocated with name '_lcd_custom_character_creation_temp_char_1_1'
                           4497 ;custom_character_address  Allocated with name '_lcd_custom_character_creation_custom_character_address_1_1'
                           4498 ;base                      Allocated with name '_lcd_custom_character_creation_base_1_1'
                           4499 ;character_number_txt      Allocated with name '_lcd_custom_character_creation_character_number_txt_1_1'
                           4500 ;row_number_txt            Allocated with name '_lcd_custom_character_creation_row_number_txt_1_1'
                           4501 ;------------------------------------------------------------
                    0870   4502 	G$lcd_custom_character_creation$0$0 ==.
                    0870   4503 	C$lcd.c$314$1$1 ==.
                           4504 ;	lcd.c:314: void lcd_custom_character_creation(uint8_t number_of_custom_characters)
                           4505 ;	-----------------------------------------
                           4506 ;	 function lcd_custom_character_creation
                           4507 ;	-----------------------------------------
   0870                    4508 _lcd_custom_character_creation:
                           4509 ;	genReceive
   0870 E5 82              4510 	mov	a,dpl
   0872 90s00r86           4511 	mov	dptr,#_lcd_custom_character_creation_number_of_custom_characters_1_1
   0875 F0                 4512 	movx	@dptr,a
                    0876   4513 	C$lcd.c$316$1$1 ==.
                           4514 ;	lcd.c:316: __xdata uint8_t Base_query_txt[]="\n\rEnter base of your data entry";
                           4515 ;	genPointerSet
                           4516 ;     genFarPointerSet
   0876 90s00r87           4517 	mov	dptr,#_lcd_custom_character_creation_Base_query_txt_1_1
   0879 74 0A              4518 	mov	a,#0x0A
   087B F0                 4519 	movx	@dptr,a
                           4520 ;	genPointerSet
                           4521 ;     genFarPointerSet
   087C 90s00r88           4522 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0001)
   087F 74 0D              4523 	mov	a,#0x0D
   0881 F0                 4524 	movx	@dptr,a
                           4525 ;	genPointerSet
                           4526 ;     genFarPointerSet
   0882 90s00r89           4527 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0002)
   0885 74 45              4528 	mov	a,#0x45
   0887 F0                 4529 	movx	@dptr,a
                           4530 ;	genPointerSet
                           4531 ;     genFarPointerSet
   0888 90s00r8A           4532 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0003)
   088B 74 6E              4533 	mov	a,#0x6E
   088D F0                 4534 	movx	@dptr,a
                           4535 ;	genPointerSet
                           4536 ;     genFarPointerSet
   088E 90s00r8B           4537 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0004)
   0891 74 74              4538 	mov	a,#0x74
   0893 F0                 4539 	movx	@dptr,a
                           4540 ;	genPointerSet
                           4541 ;     genFarPointerSet
   0894 90s00r8C           4542 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0005)
   0897 74 65              4543 	mov	a,#0x65
   0899 F0                 4544 	movx	@dptr,a
                           4545 ;	genPointerSet
                           4546 ;     genFarPointerSet
   089A 90s00r8D           4547 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0006)
   089D 74 72              4548 	mov	a,#0x72
   089F F0                 4549 	movx	@dptr,a
                           4550 ;	genPointerSet
                           4551 ;     genFarPointerSet
   08A0 90s00r8E           4552 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0007)
   08A3 74 20              4553 	mov	a,#0x20
   08A5 F0                 4554 	movx	@dptr,a
                           4555 ;	genPointerSet
                           4556 ;     genFarPointerSet
   08A6 90s00r8F           4557 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0008)
   08A9 74 62              4558 	mov	a,#0x62
   08AB F0                 4559 	movx	@dptr,a
                           4560 ;	genPointerSet
                           4561 ;     genFarPointerSet
   08AC 90s00r90           4562 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0009)
   08AF 74 61              4563 	mov	a,#0x61
   08B1 F0                 4564 	movx	@dptr,a
                           4565 ;	genPointerSet
                           4566 ;     genFarPointerSet
   08B2 90s00r91           4567 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000a)
   08B5 74 73              4568 	mov	a,#0x73
   08B7 F0                 4569 	movx	@dptr,a
                           4570 ;	genPointerSet
                           4571 ;     genFarPointerSet
   08B8 90s00r92           4572 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000b)
   08BB 74 65              4573 	mov	a,#0x65
   08BD F0                 4574 	movx	@dptr,a
                           4575 ;	genPointerSet
                           4576 ;     genFarPointerSet
   08BE 90s00r93           4577 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000c)
   08C1 74 20              4578 	mov	a,#0x20
   08C3 F0                 4579 	movx	@dptr,a
                           4580 ;	genPointerSet
                           4581 ;     genFarPointerSet
   08C4 90s00r94           4582 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000d)
   08C7 74 6F              4583 	mov	a,#0x6F
   08C9 F0                 4584 	movx	@dptr,a
                           4585 ;	genPointerSet
                           4586 ;     genFarPointerSet
   08CA 90s00r95           4587 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000e)
   08CD 74 66              4588 	mov	a,#0x66
   08CF F0                 4589 	movx	@dptr,a
                           4590 ;	genPointerSet
                           4591 ;     genFarPointerSet
   08D0 90s00r96           4592 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000f)
   08D3 74 20              4593 	mov	a,#0x20
   08D5 F0                 4594 	movx	@dptr,a
                           4595 ;	genPointerSet
                           4596 ;     genFarPointerSet
   08D6 90s00r97           4597 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0010)
   08D9 74 79              4598 	mov	a,#0x79
   08DB F0                 4599 	movx	@dptr,a
                           4600 ;	genPointerSet
                           4601 ;     genFarPointerSet
   08DC 90s00r98           4602 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0011)
   08DF 74 6F              4603 	mov	a,#0x6F
   08E1 F0                 4604 	movx	@dptr,a
                           4605 ;	genPointerSet
                           4606 ;     genFarPointerSet
   08E2 90s00r99           4607 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0012)
   08E5 74 75              4608 	mov	a,#0x75
   08E7 F0                 4609 	movx	@dptr,a
                           4610 ;	genPointerSet
                           4611 ;     genFarPointerSet
   08E8 90s00r9A           4612 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0013)
   08EB 74 72              4613 	mov	a,#0x72
   08ED F0                 4614 	movx	@dptr,a
                           4615 ;	genPointerSet
                           4616 ;     genFarPointerSet
   08EE 90s00r9B           4617 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0014)
   08F1 74 20              4618 	mov	a,#0x20
   08F3 F0                 4619 	movx	@dptr,a
                           4620 ;	genPointerSet
                           4621 ;     genFarPointerSet
   08F4 90s00r9C           4622 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0015)
   08F7 74 64              4623 	mov	a,#0x64
   08F9 F0                 4624 	movx	@dptr,a
                           4625 ;	genPointerSet
                           4626 ;     genFarPointerSet
   08FA 90s00r9D           4627 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0016)
   08FD 74 61              4628 	mov	a,#0x61
   08FF F0                 4629 	movx	@dptr,a
                           4630 ;	genPointerSet
                           4631 ;     genFarPointerSet
   0900 90s00r9E           4632 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0017)
   0903 74 74              4633 	mov	a,#0x74
   0905 F0                 4634 	movx	@dptr,a
                           4635 ;	genPointerSet
                           4636 ;     genFarPointerSet
   0906 90s00r9F           4637 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0018)
   0909 74 61              4638 	mov	a,#0x61
   090B F0                 4639 	movx	@dptr,a
                           4640 ;	genPointerSet
                           4641 ;     genFarPointerSet
   090C 90s00rA0           4642 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0019)
   090F 74 20              4643 	mov	a,#0x20
   0911 F0                 4644 	movx	@dptr,a
                           4645 ;	genPointerSet
                           4646 ;     genFarPointerSet
   0912 90s00rA1           4647 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001a)
   0915 74 65              4648 	mov	a,#0x65
   0917 F0                 4649 	movx	@dptr,a
                           4650 ;	genPointerSet
                           4651 ;     genFarPointerSet
   0918 90s00rA2           4652 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001b)
   091B 74 6E              4653 	mov	a,#0x6E
   091D F0                 4654 	movx	@dptr,a
                           4655 ;	genPointerSet
                           4656 ;     genFarPointerSet
   091E 90s00rA3           4657 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001c)
   0921 74 74              4658 	mov	a,#0x74
   0923 F0                 4659 	movx	@dptr,a
                           4660 ;	genPointerSet
                           4661 ;     genFarPointerSet
   0924 90s00rA4           4662 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001d)
   0927 74 72              4663 	mov	a,#0x72
   0929 F0                 4664 	movx	@dptr,a
                           4665 ;	genPointerSet
                           4666 ;     genFarPointerSet
   092A 90s00rA5           4667 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001e)
   092D 74 79              4668 	mov	a,#0x79
   092F F0                 4669 	movx	@dptr,a
                           4670 ;	genPointerSet
                           4671 ;     genFarPointerSet
   0930 90s00rA6           4672 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001f)
                           4673 ;	Peephole 181	changed mov to clr
   0933 E4                 4674 	clr	a
   0934 F0                 4675 	movx	@dptr,a
                    0935   4676 	C$lcd.c$318$1$1 ==.
                           4677 ;	lcd.c:318: __xdata uint8_t character_number_txt[] = "\n\rCharacter ";
                           4678 ;	genPointerSet
                           4679 ;     genFarPointerSet
   0935 90s00rA7           4680 	mov	dptr,#_lcd_custom_character_creation_character_number_txt_1_1
   0938 74 0A              4681 	mov	a,#0x0A
   093A F0                 4682 	movx	@dptr,a
                           4683 ;	genPointerSet
                           4684 ;     genFarPointerSet
   093B 90s00rA8           4685 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0001)
   093E 74 0D              4686 	mov	a,#0x0D
   0940 F0                 4687 	movx	@dptr,a
                           4688 ;	genPointerSet
                           4689 ;     genFarPointerSet
   0941 90s00rA9           4690 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0002)
   0944 74 43              4691 	mov	a,#0x43
   0946 F0                 4692 	movx	@dptr,a
                           4693 ;	genPointerSet
                           4694 ;     genFarPointerSet
   0947 90s00rAA           4695 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0003)
   094A 74 68              4696 	mov	a,#0x68
   094C F0                 4697 	movx	@dptr,a
                           4698 ;	genPointerSet
                           4699 ;     genFarPointerSet
   094D 90s00rAB           4700 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0004)
   0950 74 61              4701 	mov	a,#0x61
   0952 F0                 4702 	movx	@dptr,a
                           4703 ;	genPointerSet
                           4704 ;     genFarPointerSet
   0953 90s00rAC           4705 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0005)
   0956 74 72              4706 	mov	a,#0x72
   0958 F0                 4707 	movx	@dptr,a
                           4708 ;	genPointerSet
                           4709 ;     genFarPointerSet
   0959 90s00rAD           4710 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0006)
   095C 74 61              4711 	mov	a,#0x61
   095E F0                 4712 	movx	@dptr,a
                           4713 ;	genPointerSet
                           4714 ;     genFarPointerSet
   095F 90s00rAE           4715 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0007)
   0962 74 63              4716 	mov	a,#0x63
   0964 F0                 4717 	movx	@dptr,a
                           4718 ;	genPointerSet
                           4719 ;     genFarPointerSet
   0965 90s00rAF           4720 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0008)
   0968 74 74              4721 	mov	a,#0x74
   096A F0                 4722 	movx	@dptr,a
                           4723 ;	genPointerSet
                           4724 ;     genFarPointerSet
   096B 90s00rB0           4725 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0009)
   096E 74 65              4726 	mov	a,#0x65
   0970 F0                 4727 	movx	@dptr,a
                           4728 ;	genPointerSet
                           4729 ;     genFarPointerSet
   0971 90s00rB1           4730 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x000a)
   0974 74 72              4731 	mov	a,#0x72
   0976 F0                 4732 	movx	@dptr,a
                           4733 ;	genPointerSet
                           4734 ;     genFarPointerSet
   0977 90s00rB2           4735 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x000b)
   097A 74 20              4736 	mov	a,#0x20
   097C F0                 4737 	movx	@dptr,a
                           4738 ;	genPointerSet
                           4739 ;     genFarPointerSet
   097D 90s00rB3           4740 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x000c)
                           4741 ;	Peephole 181	changed mov to clr
   0980 E4                 4742 	clr	a
   0981 F0                 4743 	movx	@dptr,a
                    0982   4744 	C$lcd.c$319$1$1 ==.
                           4745 ;	lcd.c:319: __xdata uint8_t row_number_txt[] = "\n\rRow ";
                           4746 ;	genPointerSet
                           4747 ;     genFarPointerSet
   0982 90s00rB4           4748 	mov	dptr,#_lcd_custom_character_creation_row_number_txt_1_1
   0985 74 0A              4749 	mov	a,#0x0A
   0987 F0                 4750 	movx	@dptr,a
                           4751 ;	genPointerSet
                           4752 ;     genFarPointerSet
   0988 90s00rB5           4753 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0001)
   098B 74 0D              4754 	mov	a,#0x0D
   098D F0                 4755 	movx	@dptr,a
                           4756 ;	genPointerSet
                           4757 ;     genFarPointerSet
   098E 90s00rB6           4758 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0002)
   0991 74 52              4759 	mov	a,#0x52
   0993 F0                 4760 	movx	@dptr,a
                           4761 ;	genPointerSet
                           4762 ;     genFarPointerSet
   0994 90s00rB7           4763 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0003)
   0997 74 6F              4764 	mov	a,#0x6F
   0999 F0                 4765 	movx	@dptr,a
                           4766 ;	genPointerSet
                           4767 ;     genFarPointerSet
   099A 90s00rB8           4768 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0004)
   099D 74 77              4769 	mov	a,#0x77
   099F F0                 4770 	movx	@dptr,a
                           4771 ;	genPointerSet
                           4772 ;     genFarPointerSet
   09A0 90s00rB9           4773 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0005)
   09A3 74 20              4774 	mov	a,#0x20
   09A5 F0                 4775 	movx	@dptr,a
                           4776 ;	genPointerSet
                           4777 ;     genFarPointerSet
   09A6 90s00rBA           4778 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0006)
                           4779 ;	Peephole 181	changed mov to clr
   09A9 E4                 4780 	clr	a
   09AA F0                 4781 	movx	@dptr,a
                    09AB   4782 	C$lcd.c$320$1$1 ==.
                           4783 ;	lcd.c:320: lcd_clear();
                           4784 ;	genCall
   09AB 12s08r4C           4785 	lcall	_lcd_clear
                    09AE   4786 	C$lcd.c$321$1$1 ==.
                           4787 ;	lcd.c:321: my_printf(Base_query_txt);
                           4788 ;	genCall
                           4789 ;	Peephole 182.a	used 16 bit load of DPTR
   09AE 90s00r87           4790 	mov	dptr,#_lcd_custom_character_creation_Base_query_txt_1_1
   09B1 12s00r00           4791 	lcall	_my_printf
                    09B4   4792 	C$lcd.c$322$1$1 ==.
                           4793 ;	lcd.c:322: base=fetch_number(10);
                           4794 ;	genCall
   09B4 75 82 0A           4795 	mov	dpl,#0x0A
   09B7 12s00r00           4796 	lcall	_fetch_number
   09BA AA 82              4797 	mov	r2,dpl
   09BC AB 83              4798 	mov	r3,dph
                           4799 ;	genCast
                    09BE   4800 	C$lcd.c$323$1$1 ==.
                           4801 ;	lcd.c:323: for(character_number=0;character_number<number_of_custom_characters;character_number++)
                           4802 ;	genAssign
   09BE 90s00r86           4803 	mov	dptr,#_lcd_custom_character_creation_number_of_custom_characters_1_1
   09C1 E0                 4804 	movx	a,@dptr
   09C2 FB                 4805 	mov	r3,a
                           4806 ;	genAssign
   09C3 7C 00              4807 	mov	r4,#0x00
   09C5                    4808 00105$:
                           4809 ;	genCmpLt
                           4810 ;	genCmp
   09C5 C3                 4811 	clr	c
   09C6 EC                 4812 	mov	a,r4
   09C7 9B                 4813 	subb	a,r3
                           4814 ;	genIfxJump
   09C8 40 03              4815 	jc	00117$
   09CA 02s0ArE2           4816 	ljmp	00108$
   09CD                    4817 00117$:
                    09CD   4818 	C$lcd.c$325$2$2 ==.
                           4819 ;	lcd.c:325: my_printf(character_number_txt);
                           4820 ;	genCall
                           4821 ;	Peephole 182.a	used 16 bit load of DPTR
   09CD 90s00rA7           4822 	mov	dptr,#_lcd_custom_character_creation_character_number_txt_1_1
   09D0 C0 02              4823 	push	ar2
   09D2 C0 03              4824 	push	ar3
   09D4 C0 04              4825 	push	ar4
   09D6 12s00r00           4826 	lcall	_my_printf
   09D9 D0 04              4827 	pop	ar4
   09DB D0 03              4828 	pop	ar3
   09DD D0 02              4829 	pop	ar2
                    09DF   4830 	C$lcd.c$326$2$2 ==.
                           4831 ;	lcd.c:326: print_number(character_number+1);
                           4832 ;	genCast
   09DF 8C 05              4833 	mov	ar5,r4
   09E1 7E 00              4834 	mov	r6,#0x00
                           4835 ;	genPlus
                           4836 ;     genPlusIncr
   09E3 0D                 4837 	inc	r5
   09E4 BD 00 01           4838 	cjne	r5,#0x00,00118$
   09E7 0E                 4839 	inc	r6
   09E8                    4840 00118$:
                           4841 ;	genCast
   09E8 EE                 4842 	mov	a,r6
   09E9 33                 4843 	rlc	a
   09EA 95 E0              4844 	subb	a,acc
   09EC FF                 4845 	mov	r7,a
                           4846 ;	genCall
   09ED F8                 4847 	mov	r0,a
   09EE 8D 82              4848 	mov	dpl,r5
   09F0 8E 83              4849 	mov	dph,r6
   09F2 8F F0              4850 	mov	b,r7
                           4851 ;	Peephole 191	removed redundant mov
   09F4 C0 02              4852 	push	ar2
   09F6 C0 03              4853 	push	ar3
   09F8 C0 04              4854 	push	ar4
   09FA 12s00r00           4855 	lcall	_print_number
   09FD D0 04              4856 	pop	ar4
   09FF D0 03              4857 	pop	ar3
   0A01 D0 02              4858 	pop	ar2
                    0A03   4859 	C$lcd.c$327$3$3 ==.
                           4860 ;	lcd.c:327: for(character_row_number=0;character_row_number<8;character_row_number++)
                           4861 ;	genLeftShift
                           4862 ;	genLeftShiftLiteral
                           4863 ;	genlshOne
   0A03 EC                 4864 	mov	a,r4
   0A04 C4                 4865 	swap	a
   0A05 03                 4866 	rr	a
   0A06 54 F8              4867 	anl	a,#0xf8
   0A08 FD                 4868 	mov	r5,a
                           4869 ;	genOr
   0A09 43 05 40           4870 	orl	ar5,#0x40
                           4871 ;	genAssign
   0A0C 7E 00              4872 	mov	r6,#0x00
   0A0E                    4873 00101$:
                           4874 ;	genCmpLt
                           4875 ;	genCmp
   0A0E BE 08 00           4876 	cjne	r6,#0x08,00119$
   0A11                    4877 00119$:
                           4878 ;	genIfxJump
   0A11 40 03              4879 	jc	00120$
   0A13 02s0ArB6           4880 	ljmp	00104$
   0A16                    4881 00120$:
                    0A16   4882 	C$lcd.c$329$1$1 ==.
                           4883 ;	lcd.c:329: my_printf(row_number_txt);
                           4884 ;	genIpush
   0A16 C0 03              4885 	push	ar3
                           4886 ;	genCall
                           4887 ;	Peephole 182.a	used 16 bit load of DPTR
   0A18 90s00rB4           4888 	mov	dptr,#_lcd_custom_character_creation_row_number_txt_1_1
   0A1B C0 02              4889 	push	ar2
   0A1D C0 03              4890 	push	ar3
   0A1F C0 04              4891 	push	ar4
   0A21 C0 05              4892 	push	ar5
   0A23 C0 06              4893 	push	ar6
   0A25 12s00r00           4894 	lcall	_my_printf
   0A28 D0 06              4895 	pop	ar6
   0A2A D0 05              4896 	pop	ar5
   0A2C D0 04              4897 	pop	ar4
   0A2E D0 03              4898 	pop	ar3
   0A30 D0 02              4899 	pop	ar2
                    0A32   4900 	C$lcd.c$330$3$3 ==.
                           4901 ;	lcd.c:330: print_number(character_row_number);
                           4902 ;	genCast
   0A32 8E 07              4903 	mov	ar7,r6
   0A34 78 00              4904 	mov	r0,#0x00
   0A36 79 00              4905 	mov	r1,#0x00
   0A38 7B 00              4906 	mov	r3,#0x00
                           4907 ;	genCall
   0A3A 8F 82              4908 	mov	dpl,r7
   0A3C 88 83              4909 	mov	dph,r0
   0A3E 89 F0              4910 	mov	b,r1
   0A40 EB                 4911 	mov	a,r3
   0A41 C0 02              4912 	push	ar2
   0A43 C0 03              4913 	push	ar3
   0A45 C0 04              4914 	push	ar4
   0A47 C0 05              4915 	push	ar5
   0A49 C0 06              4916 	push	ar6
   0A4B 12s00r00           4917 	lcall	_print_number
   0A4E D0 06              4918 	pop	ar6
   0A50 D0 05              4919 	pop	ar5
   0A52 D0 04              4920 	pop	ar4
   0A54 D0 03              4921 	pop	ar3
   0A56 D0 02              4922 	pop	ar2
                    0A58   4923 	C$lcd.c$331$3$3 ==.
                           4924 ;	lcd.c:331: temp_char = fetch_number(base);
                           4925 ;	genCall
   0A58 8A 82              4926 	mov	dpl,r2
   0A5A C0 02              4927 	push	ar2
   0A5C C0 04              4928 	push	ar4
   0A5E C0 05              4929 	push	ar5
   0A60 C0 06              4930 	push	ar6
   0A62 12s00r00           4931 	lcall	_fetch_number
   0A65 AB 82              4932 	mov	r3,dpl
   0A67 AF 83              4933 	mov	r7,dph
   0A69 D0 06              4934 	pop	ar6
   0A6B D0 05              4935 	pop	ar5
   0A6D D0 04              4936 	pop	ar4
   0A6F D0 02              4937 	pop	ar2
                           4938 ;	genCast
                    0A71   4939 	C$lcd.c$332$3$3 ==.
                           4940 ;	lcd.c:332: temp_char |= (character_row_number<<5);
                           4941 ;	genLeftShift
                           4942 ;	genLeftShiftLiteral
                           4943 ;	genlshOne
   0A71 EE                 4944 	mov	a,r6
   0A72 C4                 4945 	swap	a
   0A73 23                 4946 	rl	a
   0A74 54 E0              4947 	anl	a,#0xe0
                           4948 ;	genOr
   0A76 FF                 4949 	mov	r7,a
                           4950 ;	Peephole 105	removed redundant mov
   0A77 42 03              4951 	orl	ar3,a
                    0A79   4952 	C$lcd.c$333$3$3 ==.
                           4953 ;	lcd.c:333: custom_character_address = lcd_cgram_address_mask|(character_number<<3)|character_row_number;
                           4954 ;	genOr
   0A79 EE                 4955 	mov	a,r6
   0A7A 4D                 4956 	orl	a,r5
                    0A7B   4957 	C$lcd.c$334$3$3 ==.
                           4958 ;	lcd.c:334: custom_character_address &= lcd_cgram_address_mask_2;
                           4959 ;	genAnd
   0A7B 54 7F              4960 	anl	a,#0x7F
                    0A7D   4961 	C$lcd.c$335$3$3 ==.
                           4962 ;	lcd.c:335: lcd_command_write(custom_character_address);
                           4963 ;	genCall
   0A7D FF                 4964 	mov	r7,a
                           4965 ;	Peephole 244.c	loading dpl from a instead of r7
   0A7E F5 82              4966 	mov	dpl,a
   0A80 C0 02              4967 	push	ar2
   0A82 C0 03              4968 	push	ar3
   0A84 C0 04              4969 	push	ar4
   0A86 C0 05              4970 	push	ar5
   0A88 C0 06              4971 	push	ar6
   0A8A 12s07r6F           4972 	lcall	_lcd_command_write
   0A8D D0 06              4973 	pop	ar6
   0A8F D0 05              4974 	pop	ar5
   0A91 D0 04              4975 	pop	ar4
   0A93 D0 03              4976 	pop	ar3
   0A95 D0 02              4977 	pop	ar2
                    0A97   4978 	C$lcd.c$336$3$3 ==.
                           4979 ;	lcd.c:336: lcd_put_ch(temp_char);
                           4980 ;	genCall
   0A97 8B 82              4981 	mov	dpl,r3
   0A99 C0 02              4982 	push	ar2
   0A9B C0 03              4983 	push	ar3
   0A9D C0 04              4984 	push	ar4
   0A9F C0 05              4985 	push	ar5
   0AA1 C0 06              4986 	push	ar6
   0AA3 12s07r87           4987 	lcall	_lcd_put_ch
   0AA6 D0 06              4988 	pop	ar6
   0AA8 D0 05              4989 	pop	ar5
   0AAA D0 04              4990 	pop	ar4
   0AAC D0 03              4991 	pop	ar3
   0AAE D0 02              4992 	pop	ar2
                    0AB0   4993 	C$lcd.c$327$2$2 ==.
                           4994 ;	lcd.c:327: for(character_row_number=0;character_row_number<8;character_row_number++)
                           4995 ;	genPlus
                           4996 ;     genPlusIncr
   0AB0 0E                 4997 	inc	r6
                           4998 ;	genIpop
   0AB1 D0 03              4999 	pop	ar3
   0AB3 02s0Ar0E           5000 	ljmp	00101$
   0AB6                    5001 00104$:
                    0AB6   5002 	C$lcd.c$338$2$2 ==.
                           5003 ;	lcd.c:338: lcd_go_to_x_y(0,character_number);
                           5004 ;	genAssign
   0AB6 90s00r4F           5005 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0AB9 EC                 5006 	mov	a,r4
   0ABA F0                 5007 	movx	@dptr,a
                           5008 ;	genCall
   0ABB 75 82 00           5009 	mov	dpl,#0x00
   0ABE C0 02              5010 	push	ar2
   0AC0 C0 03              5011 	push	ar3
   0AC2 C0 04              5012 	push	ar4
   0AC4 12s05rA5           5013 	lcall	_lcd_go_to_x_y
   0AC7 D0 04              5014 	pop	ar4
   0AC9 D0 03              5015 	pop	ar3
   0ACB D0 02              5016 	pop	ar2
                    0ACD   5017 	C$lcd.c$339$2$2 ==.
                           5018 ;	lcd.c:339: lcd_put_ch(character_number);
                           5019 ;	genCall
   0ACD 8C 82              5020 	mov	dpl,r4
   0ACF C0 02              5021 	push	ar2
   0AD1 C0 03              5022 	push	ar3
   0AD3 C0 04              5023 	push	ar4
   0AD5 12s07r87           5024 	lcall	_lcd_put_ch
   0AD8 D0 04              5025 	pop	ar4
   0ADA D0 03              5026 	pop	ar3
   0ADC D0 02              5027 	pop	ar2
                    0ADE   5028 	C$lcd.c$323$1$1 ==.
                           5029 ;	lcd.c:323: for(character_number=0;character_number<number_of_custom_characters;character_number++)
                           5030 ;	genPlus
                           5031 ;     genPlusIncr
   0ADE 0C                 5032 	inc	r4
   0ADF 02s09rC5           5033 	ljmp	00105$
   0AE2                    5034 00108$:
                    0AE2   5035 	C$lcd.c$341$1$1 ==.
                           5036 ;	lcd.c:341: return;
                           5037 ;	genRet
                           5038 ;	Peephole 300	removed redundant label 00109$
                    0AE2   5039 	C$lcd.c$342$1$1 ==.
                    0AE2   5040 	XG$lcd_custom_character_creation$0$0 ==.
   0AE2 22                 5041 	ret
                           5042 ;------------------------------------------------------------
                           5043 ;Allocation info for local variables in function 'lcd_cu_boulder'
                           5044 ;------------------------------------------------------------
                           5045 ;sloc0                     Allocated with name '_lcd_cu_boulder_sloc0_1_0'
                           5046 ;sloc1                     Allocated with name '_lcd_cu_boulder_sloc1_1_0'
                           5047 ;cu_boulder_array          Allocated with name '_lcd_cu_boulder_cu_boulder_array_1_1'
                           5048 ;array_counter             Allocated with name '_lcd_cu_boulder_array_counter_1_1'
                           5049 ;lcd_row                   Allocated with name '_lcd_cu_boulder_lcd_row_1_1'
                           5050 ;lcd_column                Allocated with name '_lcd_cu_boulder_lcd_column_1_1'
                           5051 ;character_row_number      Allocated with name '_lcd_cu_boulder_character_row_number_1_1'
                           5052 ;character_number          Allocated with name '_lcd_cu_boulder_character_number_1_1'
                           5053 ;temp_char                 Allocated with name '_lcd_cu_boulder_temp_char_1_1'
                           5054 ;custom_character_address  Allocated with name '_lcd_cu_boulder_custom_character_address_1_1'
                           5055 ;base                      Allocated with name '_lcd_cu_boulder_base_1_1'
                           5056 ;------------------------------------------------------------
                    0AE3   5057 	G$lcd_cu_boulder$0$0 ==.
                    0AE3   5058 	C$lcd.c$348$1$1 ==.
                           5059 ;	lcd.c:348: void lcd_cu_boulder(void)
                           5060 ;	-----------------------------------------
                           5061 ;	 function lcd_cu_boulder
                           5062 ;	-----------------------------------------
   0AE3                    5063 _lcd_cu_boulder:
                    0AE3   5064 	C$lcd.c$577$1$1 ==.
                           5065 ;	lcd.c:577: lcd_command_write(lcd_cursor_off);
                           5066 ;	genCall
   0AE3 75 82 0C           5067 	mov	dpl,#0x0C
   0AE6 12s07r6F           5068 	lcall	_lcd_command_write
                    0AE9   5069 	C$lcd.c$578$1$1 ==.
                           5070 ;	lcd.c:578: loop = 1;
                           5071 ;	genAssign
   0AE9 90s00r00           5072 	mov	dptr,#_loop
   0AEC 74 01              5073 	mov	a,#0x01
   0AEE F0                 5074 	movx	@dptr,a
                    0AEF   5075 	C$lcd.c$579$1$1 ==.
                           5076 ;	lcd.c:579: while(loop)
   0AEF                    5077 00101$:
                           5078 ;	genAssign
   0AEF 90s00r00           5079 	mov	dptr,#_loop
   0AF2 E0                 5080 	movx	a,@dptr
                           5081 ;	genIfx
   0AF3 FA                 5082 	mov	r2,a
                           5083 ;	Peephole 105	removed redundant mov
                           5084 ;	genIfxJump
   0AF4 70 01              5085 	jnz	00128$
                           5086 ;	Peephole 251.a	replaced ljmp to ret with ret
   0AF6 22                 5087 	ret
   0AF7                    5088 00128$:
                    0AF7   5089 	C$lcd.c$581$2$2 ==.
                           5090 ;	lcd.c:581: array_counter=0;
                           5091 ;	genAssign
   0AF7 90s01r9B           5092 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0AFA E4                 5093 	clr	a
   0AFB F0                 5094 	movx	@dptr,a
   0AFC A3                 5095 	inc	dptr
   0AFD F0                 5096 	movx	@dptr,a
   0AFE A3                 5097 	inc	dptr
   0AFF F0                 5098 	movx	@dptr,a
   0B00 A3                 5099 	inc	dptr
   0B01 F0                 5100 	movx	@dptr,a
                    0B02   5101 	C$lcd.c$582$1$1 ==.
                           5102 ;	lcd.c:582: for(lcd_row=0;lcd_row<4;lcd_row++)
                           5103 ;	genAssign
   0B02 75*07 00           5104 	mov	_lcd_cu_boulder_sloc1_1_0,#0x00
   0B05                    5105 00112$:
                           5106 ;	genCmpLt
                           5107 ;	genCmp
                           5108 ;	genIfxJump
                           5109 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           5110 ;	Peephole 132.e	optimized genCmpLt by inverse logic (carry differs)
   0B05 74 FC              5111 	mov	a,#0x100 - 0x04
   0B07 25*07              5112 	add	a,_lcd_cu_boulder_sloc1_1_0
   0B09 40 E4              5113 	jc	00101$
                           5114 ;	Peephole 300	removed redundant label 00129$
                    0B0B   5115 	C$lcd.c$584$3$3 ==.
                           5116 ;	lcd.c:584: ms_delay(1);
                           5117 ;	genCall
                           5118 ;	Peephole 3.a	changed mov to clr
                           5119 ;	Peephole 3.b	changed mov to clr
                           5120 ;	Peephole 182.d	used 16 bit load of dptr
   0B0B 90 00 01           5121 	mov	dptr,#(0x01&0x00ff)
   0B0E E4                 5122 	clr	a
   0B0F F5 F0              5123 	mov	b,a
   0B11 12s00r00           5124 	lcall	_ms_delay
                    0B14   5125 	C$lcd.c$585$3$3 ==.
                           5126 ;	lcd.c:585: lcd_clear();
                           5127 ;	genCall
   0B14 12s08r4C           5128 	lcall	_lcd_clear
                    0B17   5129 	C$lcd.c$586$4$4 ==.
                           5130 ;	lcd.c:586: for(character_number=0;character_number<cu_boulder_logo_width;character_number++)
                           5131 ;	genAssign
   0B17 AB*07              5132 	mov	r3,_lcd_cu_boulder_sloc1_1_0
                           5133 ;	genAssign
   0B19 7C 00              5134 	mov	r4,#0x00
   0B1B                    5135 00108$:
                           5136 ;	genCmpLt
                           5137 ;	genCmp
   0B1B BC 07 00           5138 	cjne	r4,#0x07,00130$
   0B1E                    5139 00130$:
                           5140 ;	genIfxJump
   0B1E 40 03              5141 	jc	00131$
   0B20 02s0Cr1A           5142 	ljmp	00114$
   0B23                    5143 00131$:
                    0B23   5144 	C$lcd.c$588$5$5 ==.
                           5145 ;	lcd.c:588: for(character_row_number=0;character_row_number<8;character_row_number++)
                           5146 ;	genLeftShift
                           5147 ;	genLeftShiftLiteral
                           5148 ;	genlshOne
   0B23 EC                 5149 	mov	a,r4
   0B24 C4                 5150 	swap	a
   0B25 03                 5151 	rr	a
   0B26 54 F8              5152 	anl	a,#0xf8
   0B28 FD                 5153 	mov	r5,a
                           5154 ;	genOr
   0B29 43 05 40           5155 	orl	ar5,#0x40
                           5156 ;	genAssign
   0B2C 90s01r9B           5157 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0B2F E0                 5158 	movx	a,@dptr
   0B30 FE                 5159 	mov	r6,a
   0B31 A3                 5160 	inc	dptr
   0B32 E0                 5161 	movx	a,@dptr
   0B33 FF                 5162 	mov	r7,a
   0B34 A3                 5163 	inc	dptr
   0B35 E0                 5164 	movx	a,@dptr
   0B36 F8                 5165 	mov	r0,a
   0B37 A3                 5166 	inc	dptr
   0B38 E0                 5167 	movx	a,@dptr
   0B39 F9                 5168 	mov	r1,a
                           5169 ;	genAssign
   0B3A 75*06 00           5170 	mov	_lcd_cu_boulder_sloc0_1_0,#0x00
   0B3D                    5171 00104$:
                           5172 ;	genCmpLt
                           5173 ;	genCmp
                           5174 ;	genIfxJump
                           5175 ;	Peephole 132.f	optimized genCmpLt by inverse logic (carry differs)
   0B3D 74 F8              5176 	mov	a,#0x100 - 0x08
   0B3F 25*06              5177 	add	a,_lcd_cu_boulder_sloc0_1_0
   0B41 50 03              5178 	jnc	00132$
   0B43 02s0BrD5           5179 	ljmp	00126$
   0B46                    5180 00132$:
                    0B46   5181 	C$lcd.c$590$1$1 ==.
                           5182 ;	lcd.c:590: temp_char = cu_boulder_array[array_counter];
                           5183 ;	genIpush
   0B46 C0 03              5184 	push	ar3
                           5185 ;	genPlus
                           5186 ;	Peephole 236.g	used r6 instead of ar6
   0B48 EE                 5187 	mov	a,r6
   0B49 24rBB              5188 	add	a,#_lcd_cu_boulder_cu_boulder_array_1_1
   0B4B F5 82              5189 	mov	dpl,a
                           5190 ;	Peephole 236.g	used r7 instead of ar7
   0B4D EF                 5191 	mov	a,r7
   0B4E 34s00              5192 	addc	a,#(_lcd_cu_boulder_cu_boulder_array_1_1 >> 8)
   0B50 F5 83              5193 	mov	dph,a
                           5194 ;	genPointerGet
                           5195 ;	genFarPointerGet
   0B52 E0                 5196 	movx	a,@dptr
                           5197 ;	genAssign
   0B53 FB                 5198 	mov	r3,a
   0B54 90s01r9F           5199 	mov	dptr,#_lcd_cu_boulder_temp_char_1_1
                           5200 ;	Peephole 100	removed redundant mov
   0B57 F0                 5201 	movx	@dptr,a
                    0B58   5202 	C$lcd.c$591$5$5 ==.
                           5203 ;	lcd.c:591: array_counter++;
                           5204 ;	genPlus
                           5205 ;     genPlusIncr
   0B58 0E                 5206 	inc	r6
   0B59 BE 00 09           5207 	cjne	r6,#0x00,00133$
   0B5C 0F                 5208 	inc	r7
   0B5D BF 00 05           5209 	cjne	r7,#0x00,00133$
   0B60 08                 5210 	inc	r0
   0B61 B8 00 01           5211 	cjne	r0,#0x00,00133$
   0B64 09                 5212 	inc	r1
   0B65                    5213 00133$:
                           5214 ;	genAssign
   0B65 90s01r9B           5215 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0B68 EE                 5216 	mov	a,r6
   0B69 F0                 5217 	movx	@dptr,a
   0B6A A3                 5218 	inc	dptr
   0B6B EF                 5219 	mov	a,r7
   0B6C F0                 5220 	movx	@dptr,a
   0B6D A3                 5221 	inc	dptr
   0B6E E8                 5222 	mov	a,r0
   0B6F F0                 5223 	movx	@dptr,a
   0B70 A3                 5224 	inc	dptr
   0B71 E9                 5225 	mov	a,r1
   0B72 F0                 5226 	movx	@dptr,a
                    0B73   5227 	C$lcd.c$592$5$5 ==.
                           5228 ;	lcd.c:592: temp_char |= (character_row_number<<5);
                           5229 ;	genLeftShift
                           5230 ;	genLeftShiftLiteral
                           5231 ;	genlshOne
   0B73 E5*06              5232 	mov	a,_lcd_cu_boulder_sloc0_1_0
   0B75 C4                 5233 	swap	a
   0B76 23                 5234 	rl	a
   0B77 54 E0              5235 	anl	a,#0xe0
   0B79 FB                 5236 	mov	r3,a
                           5237 ;	genAssign
                           5238 ;	genOr
   0B7A 90s01r9F           5239 	mov	dptr,#_lcd_cu_boulder_temp_char_1_1
   0B7D E0                 5240 	movx	a,@dptr
   0B7E FA                 5241 	mov	r2,a
                           5242 ;	Peephole 248.a	optimized or to xdata
   0B7F 4B                 5243 	orl	a,r3
   0B80 F0                 5244 	movx	@dptr,a
                    0B81   5245 	C$lcd.c$593$5$5 ==.
                           5246 ;	lcd.c:593: custom_character_address = lcd_cgram_address_mask|(character_number<<3)|character_row_number;
                           5247 ;	genOr
   0B81 E5*06              5248 	mov	a,_lcd_cu_boulder_sloc0_1_0
   0B83 4D                 5249 	orl	a,r5
                    0B84   5250 	C$lcd.c$594$5$5 ==.
                           5251 ;	lcd.c:594: custom_character_address &= lcd_cgram_address_mask_2;
                           5252 ;	genAnd
   0B84 54 7F              5253 	anl	a,#0x7F
                    0B86   5254 	C$lcd.c$595$5$5 ==.
                           5255 ;	lcd.c:595: lcd_command_write(custom_character_address);
                           5256 ;	genCall
   0B86 FA                 5257 	mov	r2,a
                           5258 ;	Peephole 244.c	loading dpl from a instead of r2
   0B87 F5 82              5259 	mov	dpl,a
   0B89 C0 03              5260 	push	ar3
   0B8B C0 04              5261 	push	ar4
   0B8D C0 05              5262 	push	ar5
   0B8F C0 06              5263 	push	ar6
   0B91 C0 07              5264 	push	ar7
   0B93 C0 00              5265 	push	ar0
   0B95 C0 01              5266 	push	ar1
   0B97 12s07r6F           5267 	lcall	_lcd_command_write
   0B9A D0 01              5268 	pop	ar1
   0B9C D0 00              5269 	pop	ar0
   0B9E D0 07              5270 	pop	ar7
   0BA0 D0 06              5271 	pop	ar6
   0BA2 D0 05              5272 	pop	ar5
   0BA4 D0 04              5273 	pop	ar4
   0BA6 D0 03              5274 	pop	ar3
                    0BA8   5275 	C$lcd.c$596$5$5 ==.
                           5276 ;	lcd.c:596: lcd_put_ch(temp_char);
                           5277 ;	genAssign
   0BA8 90s01r9F           5278 	mov	dptr,#_lcd_cu_boulder_temp_char_1_1
   0BAB E0                 5279 	movx	a,@dptr
                           5280 ;	genCall
   0BAC FA                 5281 	mov	r2,a
                           5282 ;	Peephole 244.c	loading dpl from a instead of r2
   0BAD F5 82              5283 	mov	dpl,a
   0BAF C0 03              5284 	push	ar3
   0BB1 C0 04              5285 	push	ar4
   0BB3 C0 05              5286 	push	ar5
   0BB5 C0 06              5287 	push	ar6
   0BB7 C0 07              5288 	push	ar7
   0BB9 C0 00              5289 	push	ar0
   0BBB C0 01              5290 	push	ar1
   0BBD 12s07r87           5291 	lcall	_lcd_put_ch
   0BC0 D0 01              5292 	pop	ar1
   0BC2 D0 00              5293 	pop	ar0
   0BC4 D0 07              5294 	pop	ar7
   0BC6 D0 06              5295 	pop	ar6
   0BC8 D0 05              5296 	pop	ar5
   0BCA D0 04              5297 	pop	ar4
   0BCC D0 03              5298 	pop	ar3
                    0BCE   5299 	C$lcd.c$588$4$4 ==.
                           5300 ;	lcd.c:588: for(character_row_number=0;character_row_number<8;character_row_number++)
                           5301 ;	genPlus
                           5302 ;     genPlusIncr
   0BCE 05*06              5303 	inc	_lcd_cu_boulder_sloc0_1_0
                           5304 ;	genIpop
   0BD0 D0 03              5305 	pop	ar3
   0BD2 02s0Br3D           5306 	ljmp	00104$
   0BD5                    5307 00126$:
                           5308 ;	genAssign
   0BD5 90s01r9B           5309 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0BD8 EE                 5310 	mov	a,r6
   0BD9 F0                 5311 	movx	@dptr,a
   0BDA A3                 5312 	inc	dptr
   0BDB EF                 5313 	mov	a,r7
   0BDC F0                 5314 	movx	@dptr,a
   0BDD A3                 5315 	inc	dptr
   0BDE E8                 5316 	mov	a,r0
   0BDF F0                 5317 	movx	@dptr,a
   0BE0 A3                 5318 	inc	dptr
   0BE1 E9                 5319 	mov	a,r1
   0BE2 F0                 5320 	movx	@dptr,a
                    0BE3   5321 	C$lcd.c$598$4$4 ==.
                           5322 ;	lcd.c:598: lcd_go_to_x_y(lcd_row,character_number);
                           5323 ;	genAssign
   0BE3 90s00r4F           5324 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0BE6 EC                 5325 	mov	a,r4
   0BE7 F0                 5326 	movx	@dptr,a
                           5327 ;	genCall
   0BE8 8B 82              5328 	mov	dpl,r3
   0BEA C0 03              5329 	push	ar3
   0BEC C0 04              5330 	push	ar4
   0BEE 12s05rA5           5331 	lcall	_lcd_go_to_x_y
   0BF1 D0 04              5332 	pop	ar4
   0BF3 D0 03              5333 	pop	ar3
                    0BF5   5334 	C$lcd.c$599$4$4 ==.
                           5335 ;	lcd.c:599: lcd_put_ch(character_number);
                           5336 ;	genCall
   0BF5 8C 82              5337 	mov	dpl,r4
   0BF7 C0 03              5338 	push	ar3
   0BF9 C0 04              5339 	push	ar4
   0BFB 12s07r87           5340 	lcall	_lcd_put_ch
   0BFE D0 04              5341 	pop	ar4
   0C00 D0 03              5342 	pop	ar3
                    0C02   5343 	C$lcd.c$600$4$4 ==.
                           5344 ;	lcd.c:600: lcd_go_to_x_y(0,10);
                           5345 ;	genAssign
   0C02 90s00r4F           5346 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0C05 74 0A              5347 	mov	a,#0x0A
   0C07 F0                 5348 	movx	@dptr,a
                           5349 ;	genCall
   0C08 75 82 00           5350 	mov	dpl,#0x00
   0C0B C0 03              5351 	push	ar3
   0C0D C0 04              5352 	push	ar4
   0C0F 12s05rA5           5353 	lcall	_lcd_go_to_x_y
   0C12 D0 04              5354 	pop	ar4
   0C14 D0 03              5355 	pop	ar3
                    0C16   5356 	C$lcd.c$586$3$3 ==.
                           5357 ;	lcd.c:586: for(character_number=0;character_number<cu_boulder_logo_width;character_number++)
                           5358 ;	genPlus
                           5359 ;     genPlusIncr
   0C16 0C                 5360 	inc	r4
   0C17 02s0Br1B           5361 	ljmp	00108$
   0C1A                    5362 00114$:
                    0C1A   5363 	C$lcd.c$582$2$2 ==.
                           5364 ;	lcd.c:582: for(lcd_row=0;lcd_row<4;lcd_row++)
                           5365 ;	genPlus
                           5366 ;     genPlusIncr
   0C1A 05*07              5367 	inc	_lcd_cu_boulder_sloc1_1_0
                    0C1C   5368 	C$lcd.c$604$1$1 ==.
                    0C1C   5369 	XG$lcd_cu_boulder$0$0 ==.
   0C1C 02s0Br05           5370 	ljmp	00112$
                           5371 ;	Peephole 259.b	removed redundant label 00116$ and ret
                           5372 ;
                           5373 	.area CSEG    (CODE)
                           5374 	.area CONST   (CODE)
                           5375 	.area XINIT   (CODE)
