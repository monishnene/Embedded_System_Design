                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Sat Apr 14 19:58:49 2018
                              5 ;--------------------------------------------------------
                              6 	.module lcd
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _lcd_print_number
                             13 	.globl _P5_7
                             14 	.globl _P5_6
                             15 	.globl _P5_5
                             16 	.globl _P5_4
                             17 	.globl _P5_3
                             18 	.globl _P5_2
                             19 	.globl _P5_1
                             20 	.globl _P5_0
                             21 	.globl _P4_7
                             22 	.globl _P4_6
                             23 	.globl _P4_5
                             24 	.globl _P4_4
                             25 	.globl _P4_3
                             26 	.globl _P4_2
                             27 	.globl _P4_1
                             28 	.globl _P4_0
                             29 	.globl _PX0L
                             30 	.globl _PT0L
                             31 	.globl _PX1L
                             32 	.globl _PT1L
                             33 	.globl _PLS
                             34 	.globl _PT2L
                             35 	.globl _PPCL
                             36 	.globl _EC
                             37 	.globl _CCF0
                             38 	.globl _CCF1
                             39 	.globl _CCF2
                             40 	.globl _CCF3
                             41 	.globl _CCF4
                             42 	.globl _CR
                             43 	.globl _CF
                             44 	.globl _TF2
                             45 	.globl _EXF2
                             46 	.globl _RCLK
                             47 	.globl _TCLK
                             48 	.globl _EXEN2
                             49 	.globl _TR2
                             50 	.globl _C_T2
                             51 	.globl _CP_RL2
                             52 	.globl _T2CON_7
                             53 	.globl _T2CON_6
                             54 	.globl _T2CON_5
                             55 	.globl _T2CON_4
                             56 	.globl _T2CON_3
                             57 	.globl _T2CON_2
                             58 	.globl _T2CON_1
                             59 	.globl _T2CON_0
                             60 	.globl _PT2
                             61 	.globl _ET2
                             62 	.globl _CY
                             63 	.globl _AC
                             64 	.globl _F0
                             65 	.globl _RS1
                             66 	.globl _RS0
                             67 	.globl _OV
                             68 	.globl _F1
                             69 	.globl _P
                             70 	.globl _PS
                             71 	.globl _PT1
                             72 	.globl _PX1
                             73 	.globl _PT0
                             74 	.globl _PX0
                             75 	.globl _RD
                             76 	.globl _WR
                             77 	.globl _T1
                             78 	.globl _T0
                             79 	.globl _INT1
                             80 	.globl _INT0
                             81 	.globl _TXD
                             82 	.globl _RXD
                             83 	.globl _P3_7
                             84 	.globl _P3_6
                             85 	.globl _P3_5
                             86 	.globl _P3_4
                             87 	.globl _P3_3
                             88 	.globl _P3_2
                             89 	.globl _P3_1
                             90 	.globl _P3_0
                             91 	.globl _EA
                             92 	.globl _ES
                             93 	.globl _ET1
                             94 	.globl _EX1
                             95 	.globl _ET0
                             96 	.globl _EX0
                             97 	.globl _P2_7
                             98 	.globl _P2_6
                             99 	.globl _P2_5
                            100 	.globl _P2_4
                            101 	.globl _P2_3
                            102 	.globl _P2_2
                            103 	.globl _P2_1
                            104 	.globl _P2_0
                            105 	.globl _SM0
                            106 	.globl _SM1
                            107 	.globl _SM2
                            108 	.globl _REN
                            109 	.globl _TB8
                            110 	.globl _RB8
                            111 	.globl _TI
                            112 	.globl _RI
                            113 	.globl _P1_7
                            114 	.globl _P1_6
                            115 	.globl _P1_5
                            116 	.globl _P1_4
                            117 	.globl _P1_3
                            118 	.globl _P1_2
                            119 	.globl _P1_1
                            120 	.globl _P1_0
                            121 	.globl _TF1
                            122 	.globl _TR1
                            123 	.globl _TF0
                            124 	.globl _TR0
                            125 	.globl _IE1
                            126 	.globl _IT1
                            127 	.globl _IE0
                            128 	.globl _IT0
                            129 	.globl _P0_7
                            130 	.globl _P0_6
                            131 	.globl _P0_5
                            132 	.globl _P0_4
                            133 	.globl _P0_3
                            134 	.globl _P0_2
                            135 	.globl _P0_1
                            136 	.globl _P0_0
                            137 	.globl _EECON
                            138 	.globl _KBF
                            139 	.globl _KBE
                            140 	.globl _KBLS
                            141 	.globl _BRL
                            142 	.globl _BDRCON
                            143 	.globl _T2MOD
                            144 	.globl _SPDAT
                            145 	.globl _SPSTA
                            146 	.globl _SPCON
                            147 	.globl _SADEN
                            148 	.globl _SADDR
                            149 	.globl _WDTPRG
                            150 	.globl _WDTRST
                            151 	.globl _P5
                            152 	.globl _P4
                            153 	.globl _IPH1
                            154 	.globl _IPL1
                            155 	.globl _IPH0
                            156 	.globl _IPL0
                            157 	.globl _IEN1
                            158 	.globl _IEN0
                            159 	.globl _CMOD
                            160 	.globl _CL
                            161 	.globl _CH
                            162 	.globl _CCON
                            163 	.globl _CCAPM4
                            164 	.globl _CCAPM3
                            165 	.globl _CCAPM2
                            166 	.globl _CCAPM1
                            167 	.globl _CCAPM0
                            168 	.globl _CCAP4L
                            169 	.globl _CCAP3L
                            170 	.globl _CCAP2L
                            171 	.globl _CCAP1L
                            172 	.globl _CCAP0L
                            173 	.globl _CCAP4H
                            174 	.globl _CCAP3H
                            175 	.globl _CCAP2H
                            176 	.globl _CCAP1H
                            177 	.globl _CCAP0H
                            178 	.globl _CKRL
                            179 	.globl _AUXR1
                            180 	.globl _AUXR
                            181 	.globl _TH2
                            182 	.globl _TL2
                            183 	.globl _RCAP2H
                            184 	.globl _RCAP2L
                            185 	.globl _T2CON
                            186 	.globl _B
                            187 	.globl _ACC
                            188 	.globl _PSW
                            189 	.globl _IP
                            190 	.globl _P3
                            191 	.globl _IE
                            192 	.globl _P2
                            193 	.globl _SBUF
                            194 	.globl _SCON
                            195 	.globl _P1
                            196 	.globl _TH1
                            197 	.globl _TH0
                            198 	.globl _TL1
                            199 	.globl _TL0
                            200 	.globl _TMOD
                            201 	.globl _TCON
                            202 	.globl _PCON
                            203 	.globl _DPH
                            204 	.globl _DPL
                            205 	.globl _SP
                            206 	.globl _P0
                            207 	.globl _lcd_go_to_x_y_PARM_2
                            208 	.globl _lcd_print_number_PARM_2
                            209 	.globl _time
                            210 	.globl _timer_on_off_flag
                            211 	.globl _lcd_current_row
                            212 	.globl _lcd_current_column
                            213 	.globl _loop
                            214 	.globl _lcd_init
                            215 	.globl _lcd_row_shifter
                            216 	.globl _lcd_busy_wait
                            217 	.globl _lcd_ddram_flush
                            218 	.globl _lcd_cgram_flush
                            219 	.globl _lcd_go_to_addr
                            220 	.globl _lcd_go_to_x_y
                            221 	.globl _lcd_command_write
                            222 	.globl _lcd_put_ch
                            223 	.globl _lcd_put_str
                            224 	.globl _lcd_clear
                            225 	.globl _lcd_custom_character_creation
                            226 	.globl _lcd_cu_boulder
                            227 ;--------------------------------------------------------
                            228 ; special function registers
                            229 ;--------------------------------------------------------
                            230 	.area RSEG    (DATA)
                    0080    231 G$P0$0$0 == 0x0080
                    0080    232 _P0	=	0x0080
                    0081    233 G$SP$0$0 == 0x0081
                    0081    234 _SP	=	0x0081
                    0082    235 G$DPL$0$0 == 0x0082
                    0082    236 _DPL	=	0x0082
                    0083    237 G$DPH$0$0 == 0x0083
                    0083    238 _DPH	=	0x0083
                    0087    239 G$PCON$0$0 == 0x0087
                    0087    240 _PCON	=	0x0087
                    0088    241 G$TCON$0$0 == 0x0088
                    0088    242 _TCON	=	0x0088
                    0089    243 G$TMOD$0$0 == 0x0089
                    0089    244 _TMOD	=	0x0089
                    008A    245 G$TL0$0$0 == 0x008a
                    008A    246 _TL0	=	0x008a
                    008B    247 G$TL1$0$0 == 0x008b
                    008B    248 _TL1	=	0x008b
                    008C    249 G$TH0$0$0 == 0x008c
                    008C    250 _TH0	=	0x008c
                    008D    251 G$TH1$0$0 == 0x008d
                    008D    252 _TH1	=	0x008d
                    0090    253 G$P1$0$0 == 0x0090
                    0090    254 _P1	=	0x0090
                    0098    255 G$SCON$0$0 == 0x0098
                    0098    256 _SCON	=	0x0098
                    0099    257 G$SBUF$0$0 == 0x0099
                    0099    258 _SBUF	=	0x0099
                    00A0    259 G$P2$0$0 == 0x00a0
                    00A0    260 _P2	=	0x00a0
                    00A8    261 G$IE$0$0 == 0x00a8
                    00A8    262 _IE	=	0x00a8
                    00B0    263 G$P3$0$0 == 0x00b0
                    00B0    264 _P3	=	0x00b0
                    00B8    265 G$IP$0$0 == 0x00b8
                    00B8    266 _IP	=	0x00b8
                    00D0    267 G$PSW$0$0 == 0x00d0
                    00D0    268 _PSW	=	0x00d0
                    00E0    269 G$ACC$0$0 == 0x00e0
                    00E0    270 _ACC	=	0x00e0
                    00F0    271 G$B$0$0 == 0x00f0
                    00F0    272 _B	=	0x00f0
                    00C8    273 G$T2CON$0$0 == 0x00c8
                    00C8    274 _T2CON	=	0x00c8
                    00CA    275 G$RCAP2L$0$0 == 0x00ca
                    00CA    276 _RCAP2L	=	0x00ca
                    00CB    277 G$RCAP2H$0$0 == 0x00cb
                    00CB    278 _RCAP2H	=	0x00cb
                    00CC    279 G$TL2$0$0 == 0x00cc
                    00CC    280 _TL2	=	0x00cc
                    00CD    281 G$TH2$0$0 == 0x00cd
                    00CD    282 _TH2	=	0x00cd
                    008E    283 G$AUXR$0$0 == 0x008e
                    008E    284 _AUXR	=	0x008e
                    00A2    285 G$AUXR1$0$0 == 0x00a2
                    00A2    286 _AUXR1	=	0x00a2
                    0097    287 G$CKRL$0$0 == 0x0097
                    0097    288 _CKRL	=	0x0097
                    00FA    289 G$CCAP0H$0$0 == 0x00fa
                    00FA    290 _CCAP0H	=	0x00fa
                    00FB    291 G$CCAP1H$0$0 == 0x00fb
                    00FB    292 _CCAP1H	=	0x00fb
                    00FC    293 G$CCAP2H$0$0 == 0x00fc
                    00FC    294 _CCAP2H	=	0x00fc
                    00FD    295 G$CCAP3H$0$0 == 0x00fd
                    00FD    296 _CCAP3H	=	0x00fd
                    00FE    297 G$CCAP4H$0$0 == 0x00fe
                    00FE    298 _CCAP4H	=	0x00fe
                    00EA    299 G$CCAP0L$0$0 == 0x00ea
                    00EA    300 _CCAP0L	=	0x00ea
                    00EB    301 G$CCAP1L$0$0 == 0x00eb
                    00EB    302 _CCAP1L	=	0x00eb
                    00EC    303 G$CCAP2L$0$0 == 0x00ec
                    00EC    304 _CCAP2L	=	0x00ec
                    00ED    305 G$CCAP3L$0$0 == 0x00ed
                    00ED    306 _CCAP3L	=	0x00ed
                    00EE    307 G$CCAP4L$0$0 == 0x00ee
                    00EE    308 _CCAP4L	=	0x00ee
                    00DA    309 G$CCAPM0$0$0 == 0x00da
                    00DA    310 _CCAPM0	=	0x00da
                    00DB    311 G$CCAPM1$0$0 == 0x00db
                    00DB    312 _CCAPM1	=	0x00db
                    00DC    313 G$CCAPM2$0$0 == 0x00dc
                    00DC    314 _CCAPM2	=	0x00dc
                    00DD    315 G$CCAPM3$0$0 == 0x00dd
                    00DD    316 _CCAPM3	=	0x00dd
                    00DE    317 G$CCAPM4$0$0 == 0x00de
                    00DE    318 _CCAPM4	=	0x00de
                    00D8    319 G$CCON$0$0 == 0x00d8
                    00D8    320 _CCON	=	0x00d8
                    00F9    321 G$CH$0$0 == 0x00f9
                    00F9    322 _CH	=	0x00f9
                    00E9    323 G$CL$0$0 == 0x00e9
                    00E9    324 _CL	=	0x00e9
                    00D9    325 G$CMOD$0$0 == 0x00d9
                    00D9    326 _CMOD	=	0x00d9
                    00A8    327 G$IEN0$0$0 == 0x00a8
                    00A8    328 _IEN0	=	0x00a8
                    00B1    329 G$IEN1$0$0 == 0x00b1
                    00B1    330 _IEN1	=	0x00b1
                    00B8    331 G$IPL0$0$0 == 0x00b8
                    00B8    332 _IPL0	=	0x00b8
                    00B7    333 G$IPH0$0$0 == 0x00b7
                    00B7    334 _IPH0	=	0x00b7
                    00B2    335 G$IPL1$0$0 == 0x00b2
                    00B2    336 _IPL1	=	0x00b2
                    00B3    337 G$IPH1$0$0 == 0x00b3
                    00B3    338 _IPH1	=	0x00b3
                    00C0    339 G$P4$0$0 == 0x00c0
                    00C0    340 _P4	=	0x00c0
                    00E8    341 G$P5$0$0 == 0x00e8
                    00E8    342 _P5	=	0x00e8
                    00A6    343 G$WDTRST$0$0 == 0x00a6
                    00A6    344 _WDTRST	=	0x00a6
                    00A7    345 G$WDTPRG$0$0 == 0x00a7
                    00A7    346 _WDTPRG	=	0x00a7
                    00A9    347 G$SADDR$0$0 == 0x00a9
                    00A9    348 _SADDR	=	0x00a9
                    00B9    349 G$SADEN$0$0 == 0x00b9
                    00B9    350 _SADEN	=	0x00b9
                    00C3    351 G$SPCON$0$0 == 0x00c3
                    00C3    352 _SPCON	=	0x00c3
                    00C4    353 G$SPSTA$0$0 == 0x00c4
                    00C4    354 _SPSTA	=	0x00c4
                    00C5    355 G$SPDAT$0$0 == 0x00c5
                    00C5    356 _SPDAT	=	0x00c5
                    00C9    357 G$T2MOD$0$0 == 0x00c9
                    00C9    358 _T2MOD	=	0x00c9
                    009B    359 G$BDRCON$0$0 == 0x009b
                    009B    360 _BDRCON	=	0x009b
                    009A    361 G$BRL$0$0 == 0x009a
                    009A    362 _BRL	=	0x009a
                    009C    363 G$KBLS$0$0 == 0x009c
                    009C    364 _KBLS	=	0x009c
                    009D    365 G$KBE$0$0 == 0x009d
                    009D    366 _KBE	=	0x009d
                    009E    367 G$KBF$0$0 == 0x009e
                    009E    368 _KBF	=	0x009e
                    00D2    369 G$EECON$0$0 == 0x00d2
                    00D2    370 _EECON	=	0x00d2
                            371 ;--------------------------------------------------------
                            372 ; special function bits
                            373 ;--------------------------------------------------------
                            374 	.area RSEG    (DATA)
                    0080    375 G$P0_0$0$0 == 0x0080
                    0080    376 _P0_0	=	0x0080
                    0081    377 G$P0_1$0$0 == 0x0081
                    0081    378 _P0_1	=	0x0081
                    0082    379 G$P0_2$0$0 == 0x0082
                    0082    380 _P0_2	=	0x0082
                    0083    381 G$P0_3$0$0 == 0x0083
                    0083    382 _P0_3	=	0x0083
                    0084    383 G$P0_4$0$0 == 0x0084
                    0084    384 _P0_4	=	0x0084
                    0085    385 G$P0_5$0$0 == 0x0085
                    0085    386 _P0_5	=	0x0085
                    0086    387 G$P0_6$0$0 == 0x0086
                    0086    388 _P0_6	=	0x0086
                    0087    389 G$P0_7$0$0 == 0x0087
                    0087    390 _P0_7	=	0x0087
                    0088    391 G$IT0$0$0 == 0x0088
                    0088    392 _IT0	=	0x0088
                    0089    393 G$IE0$0$0 == 0x0089
                    0089    394 _IE0	=	0x0089
                    008A    395 G$IT1$0$0 == 0x008a
                    008A    396 _IT1	=	0x008a
                    008B    397 G$IE1$0$0 == 0x008b
                    008B    398 _IE1	=	0x008b
                    008C    399 G$TR0$0$0 == 0x008c
                    008C    400 _TR0	=	0x008c
                    008D    401 G$TF0$0$0 == 0x008d
                    008D    402 _TF0	=	0x008d
                    008E    403 G$TR1$0$0 == 0x008e
                    008E    404 _TR1	=	0x008e
                    008F    405 G$TF1$0$0 == 0x008f
                    008F    406 _TF1	=	0x008f
                    0090    407 G$P1_0$0$0 == 0x0090
                    0090    408 _P1_0	=	0x0090
                    0091    409 G$P1_1$0$0 == 0x0091
                    0091    410 _P1_1	=	0x0091
                    0092    411 G$P1_2$0$0 == 0x0092
                    0092    412 _P1_2	=	0x0092
                    0093    413 G$P1_3$0$0 == 0x0093
                    0093    414 _P1_3	=	0x0093
                    0094    415 G$P1_4$0$0 == 0x0094
                    0094    416 _P1_4	=	0x0094
                    0095    417 G$P1_5$0$0 == 0x0095
                    0095    418 _P1_5	=	0x0095
                    0096    419 G$P1_6$0$0 == 0x0096
                    0096    420 _P1_6	=	0x0096
                    0097    421 G$P1_7$0$0 == 0x0097
                    0097    422 _P1_7	=	0x0097
                    0098    423 G$RI$0$0 == 0x0098
                    0098    424 _RI	=	0x0098
                    0099    425 G$TI$0$0 == 0x0099
                    0099    426 _TI	=	0x0099
                    009A    427 G$RB8$0$0 == 0x009a
                    009A    428 _RB8	=	0x009a
                    009B    429 G$TB8$0$0 == 0x009b
                    009B    430 _TB8	=	0x009b
                    009C    431 G$REN$0$0 == 0x009c
                    009C    432 _REN	=	0x009c
                    009D    433 G$SM2$0$0 == 0x009d
                    009D    434 _SM2	=	0x009d
                    009E    435 G$SM1$0$0 == 0x009e
                    009E    436 _SM1	=	0x009e
                    009F    437 G$SM0$0$0 == 0x009f
                    009F    438 _SM0	=	0x009f
                    00A0    439 G$P2_0$0$0 == 0x00a0
                    00A0    440 _P2_0	=	0x00a0
                    00A1    441 G$P2_1$0$0 == 0x00a1
                    00A1    442 _P2_1	=	0x00a1
                    00A2    443 G$P2_2$0$0 == 0x00a2
                    00A2    444 _P2_2	=	0x00a2
                    00A3    445 G$P2_3$0$0 == 0x00a3
                    00A3    446 _P2_3	=	0x00a3
                    00A4    447 G$P2_4$0$0 == 0x00a4
                    00A4    448 _P2_4	=	0x00a4
                    00A5    449 G$P2_5$0$0 == 0x00a5
                    00A5    450 _P2_5	=	0x00a5
                    00A6    451 G$P2_6$0$0 == 0x00a6
                    00A6    452 _P2_6	=	0x00a6
                    00A7    453 G$P2_7$0$0 == 0x00a7
                    00A7    454 _P2_7	=	0x00a7
                    00A8    455 G$EX0$0$0 == 0x00a8
                    00A8    456 _EX0	=	0x00a8
                    00A9    457 G$ET0$0$0 == 0x00a9
                    00A9    458 _ET0	=	0x00a9
                    00AA    459 G$EX1$0$0 == 0x00aa
                    00AA    460 _EX1	=	0x00aa
                    00AB    461 G$ET1$0$0 == 0x00ab
                    00AB    462 _ET1	=	0x00ab
                    00AC    463 G$ES$0$0 == 0x00ac
                    00AC    464 _ES	=	0x00ac
                    00AF    465 G$EA$0$0 == 0x00af
                    00AF    466 _EA	=	0x00af
                    00B0    467 G$P3_0$0$0 == 0x00b0
                    00B0    468 _P3_0	=	0x00b0
                    00B1    469 G$P3_1$0$0 == 0x00b1
                    00B1    470 _P3_1	=	0x00b1
                    00B2    471 G$P3_2$0$0 == 0x00b2
                    00B2    472 _P3_2	=	0x00b2
                    00B3    473 G$P3_3$0$0 == 0x00b3
                    00B3    474 _P3_3	=	0x00b3
                    00B4    475 G$P3_4$0$0 == 0x00b4
                    00B4    476 _P3_4	=	0x00b4
                    00B5    477 G$P3_5$0$0 == 0x00b5
                    00B5    478 _P3_5	=	0x00b5
                    00B6    479 G$P3_6$0$0 == 0x00b6
                    00B6    480 _P3_6	=	0x00b6
                    00B7    481 G$P3_7$0$0 == 0x00b7
                    00B7    482 _P3_7	=	0x00b7
                    00B0    483 G$RXD$0$0 == 0x00b0
                    00B0    484 _RXD	=	0x00b0
                    00B1    485 G$TXD$0$0 == 0x00b1
                    00B1    486 _TXD	=	0x00b1
                    00B2    487 G$INT0$0$0 == 0x00b2
                    00B2    488 _INT0	=	0x00b2
                    00B3    489 G$INT1$0$0 == 0x00b3
                    00B3    490 _INT1	=	0x00b3
                    00B4    491 G$T0$0$0 == 0x00b4
                    00B4    492 _T0	=	0x00b4
                    00B5    493 G$T1$0$0 == 0x00b5
                    00B5    494 _T1	=	0x00b5
                    00B6    495 G$WR$0$0 == 0x00b6
                    00B6    496 _WR	=	0x00b6
                    00B7    497 G$RD$0$0 == 0x00b7
                    00B7    498 _RD	=	0x00b7
                    00B8    499 G$PX0$0$0 == 0x00b8
                    00B8    500 _PX0	=	0x00b8
                    00B9    501 G$PT0$0$0 == 0x00b9
                    00B9    502 _PT0	=	0x00b9
                    00BA    503 G$PX1$0$0 == 0x00ba
                    00BA    504 _PX1	=	0x00ba
                    00BB    505 G$PT1$0$0 == 0x00bb
                    00BB    506 _PT1	=	0x00bb
                    00BC    507 G$PS$0$0 == 0x00bc
                    00BC    508 _PS	=	0x00bc
                    00D0    509 G$P$0$0 == 0x00d0
                    00D0    510 _P	=	0x00d0
                    00D1    511 G$F1$0$0 == 0x00d1
                    00D1    512 _F1	=	0x00d1
                    00D2    513 G$OV$0$0 == 0x00d2
                    00D2    514 _OV	=	0x00d2
                    00D3    515 G$RS0$0$0 == 0x00d3
                    00D3    516 _RS0	=	0x00d3
                    00D4    517 G$RS1$0$0 == 0x00d4
                    00D4    518 _RS1	=	0x00d4
                    00D5    519 G$F0$0$0 == 0x00d5
                    00D5    520 _F0	=	0x00d5
                    00D6    521 G$AC$0$0 == 0x00d6
                    00D6    522 _AC	=	0x00d6
                    00D7    523 G$CY$0$0 == 0x00d7
                    00D7    524 _CY	=	0x00d7
                    00AD    525 G$ET2$0$0 == 0x00ad
                    00AD    526 _ET2	=	0x00ad
                    00BD    527 G$PT2$0$0 == 0x00bd
                    00BD    528 _PT2	=	0x00bd
                    00C8    529 G$T2CON_0$0$0 == 0x00c8
                    00C8    530 _T2CON_0	=	0x00c8
                    00C9    531 G$T2CON_1$0$0 == 0x00c9
                    00C9    532 _T2CON_1	=	0x00c9
                    00CA    533 G$T2CON_2$0$0 == 0x00ca
                    00CA    534 _T2CON_2	=	0x00ca
                    00CB    535 G$T2CON_3$0$0 == 0x00cb
                    00CB    536 _T2CON_3	=	0x00cb
                    00CC    537 G$T2CON_4$0$0 == 0x00cc
                    00CC    538 _T2CON_4	=	0x00cc
                    00CD    539 G$T2CON_5$0$0 == 0x00cd
                    00CD    540 _T2CON_5	=	0x00cd
                    00CE    541 G$T2CON_6$0$0 == 0x00ce
                    00CE    542 _T2CON_6	=	0x00ce
                    00CF    543 G$T2CON_7$0$0 == 0x00cf
                    00CF    544 _T2CON_7	=	0x00cf
                    00C8    545 G$CP_RL2$0$0 == 0x00c8
                    00C8    546 _CP_RL2	=	0x00c8
                    00C9    547 G$C_T2$0$0 == 0x00c9
                    00C9    548 _C_T2	=	0x00c9
                    00CA    549 G$TR2$0$0 == 0x00ca
                    00CA    550 _TR2	=	0x00ca
                    00CB    551 G$EXEN2$0$0 == 0x00cb
                    00CB    552 _EXEN2	=	0x00cb
                    00CC    553 G$TCLK$0$0 == 0x00cc
                    00CC    554 _TCLK	=	0x00cc
                    00CD    555 G$RCLK$0$0 == 0x00cd
                    00CD    556 _RCLK	=	0x00cd
                    00CE    557 G$EXF2$0$0 == 0x00ce
                    00CE    558 _EXF2	=	0x00ce
                    00CF    559 G$TF2$0$0 == 0x00cf
                    00CF    560 _TF2	=	0x00cf
                    00DF    561 G$CF$0$0 == 0x00df
                    00DF    562 _CF	=	0x00df
                    00DE    563 G$CR$0$0 == 0x00de
                    00DE    564 _CR	=	0x00de
                    00DC    565 G$CCF4$0$0 == 0x00dc
                    00DC    566 _CCF4	=	0x00dc
                    00DB    567 G$CCF3$0$0 == 0x00db
                    00DB    568 _CCF3	=	0x00db
                    00DA    569 G$CCF2$0$0 == 0x00da
                    00DA    570 _CCF2	=	0x00da
                    00D9    571 G$CCF1$0$0 == 0x00d9
                    00D9    572 _CCF1	=	0x00d9
                    00D8    573 G$CCF0$0$0 == 0x00d8
                    00D8    574 _CCF0	=	0x00d8
                    00AE    575 G$EC$0$0 == 0x00ae
                    00AE    576 _EC	=	0x00ae
                    00BE    577 G$PPCL$0$0 == 0x00be
                    00BE    578 _PPCL	=	0x00be
                    00BD    579 G$PT2L$0$0 == 0x00bd
                    00BD    580 _PT2L	=	0x00bd
                    00BC    581 G$PLS$0$0 == 0x00bc
                    00BC    582 _PLS	=	0x00bc
                    00BB    583 G$PT1L$0$0 == 0x00bb
                    00BB    584 _PT1L	=	0x00bb
                    00BA    585 G$PX1L$0$0 == 0x00ba
                    00BA    586 _PX1L	=	0x00ba
                    00B9    587 G$PT0L$0$0 == 0x00b9
                    00B9    588 _PT0L	=	0x00b9
                    00B8    589 G$PX0L$0$0 == 0x00b8
                    00B8    590 _PX0L	=	0x00b8
                    00C0    591 G$P4_0$0$0 == 0x00c0
                    00C0    592 _P4_0	=	0x00c0
                    00C1    593 G$P4_1$0$0 == 0x00c1
                    00C1    594 _P4_1	=	0x00c1
                    00C2    595 G$P4_2$0$0 == 0x00c2
                    00C2    596 _P4_2	=	0x00c2
                    00C3    597 G$P4_3$0$0 == 0x00c3
                    00C3    598 _P4_3	=	0x00c3
                    00C4    599 G$P4_4$0$0 == 0x00c4
                    00C4    600 _P4_4	=	0x00c4
                    00C5    601 G$P4_5$0$0 == 0x00c5
                    00C5    602 _P4_5	=	0x00c5
                    00C6    603 G$P4_6$0$0 == 0x00c6
                    00C6    604 _P4_6	=	0x00c6
                    00C7    605 G$P4_7$0$0 == 0x00c7
                    00C7    606 _P4_7	=	0x00c7
                    00E8    607 G$P5_0$0$0 == 0x00e8
                    00E8    608 _P5_0	=	0x00e8
                    00E9    609 G$P5_1$0$0 == 0x00e9
                    00E9    610 _P5_1	=	0x00e9
                    00EA    611 G$P5_2$0$0 == 0x00ea
                    00EA    612 _P5_2	=	0x00ea
                    00EB    613 G$P5_3$0$0 == 0x00eb
                    00EB    614 _P5_3	=	0x00eb
                    00EC    615 G$P5_4$0$0 == 0x00ec
                    00EC    616 _P5_4	=	0x00ec
                    00ED    617 G$P5_5$0$0 == 0x00ed
                    00ED    618 _P5_5	=	0x00ed
                    00EE    619 G$P5_6$0$0 == 0x00ee
                    00EE    620 _P5_6	=	0x00ee
                    00EF    621 G$P5_7$0$0 == 0x00ef
                    00EF    622 _P5_7	=	0x00ef
                            623 ;--------------------------------------------------------
                            624 ; overlayable register banks
                            625 ;--------------------------------------------------------
                            626 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     627 	.ds 8
                            628 ;--------------------------------------------------------
                            629 ; internal ram data
                            630 ;--------------------------------------------------------
                            631 	.area DSEG    (DATA)
                    0000    632 Llcd_print_number$sloc0$1$0==.
   0000                     633 _lcd_print_number_sloc0_1_0:
   0000                     634 	.ds 1
                    0001    635 Llcd_print_number$sloc1$1$0==.
   0001                     636 _lcd_print_number_sloc1_1_0:
   0001                     637 	.ds 1
                    0002    638 Llcd_print_number$sloc3$1$0==.
   0002                     639 _lcd_print_number_sloc3_1_0:
   0002                     640 	.ds 4
                    0006    641 Llcd_cu_boulder$sloc0$1$0==.
   0006                     642 _lcd_cu_boulder_sloc0_1_0:
   0006                     643 	.ds 1
                    0007    644 Llcd_cu_boulder$sloc1$1$0==.
   0007                     645 _lcd_cu_boulder_sloc1_1_0:
   0007                     646 	.ds 1
                            647 ;--------------------------------------------------------
                            648 ; overlayable items in internal ram 
                            649 ;--------------------------------------------------------
                            650 	.area OSEG    (OVR,DATA)
                            651 ;--------------------------------------------------------
                            652 ; indirectly addressable internal ram data
                            653 ;--------------------------------------------------------
                            654 	.area ISEG    (DATA)
                            655 ;--------------------------------------------------------
                            656 ; bit data
                            657 ;--------------------------------------------------------
                            658 	.area BSEG    (BIT)
                            659 ;--------------------------------------------------------
                            660 ; paged external ram data
                            661 ;--------------------------------------------------------
                            662 	.area PSEG    (PAG,XDATA)
                            663 ;--------------------------------------------------------
                            664 ; external ram data
                            665 ;--------------------------------------------------------
                            666 	.area XSEG    (XDATA)
                    0000    667 G$loop$0$0==.
   0000                     668 _loop::
   0000                     669 	.ds 1
                    0001    670 G$lcd_current_column$0$0==.
   0001                     671 _lcd_current_column::
   0001                     672 	.ds 1
                    0002    673 G$lcd_current_row$0$0==.
   0002                     674 _lcd_current_row::
   0002                     675 	.ds 1
                    0003    676 G$timer_on_off_flag$0$0==.
   0003                     677 _timer_on_off_flag::
   0003                     678 	.ds 1
                    0004    679 G$time$0$0==.
   0004                     680 _time::
   0004                     681 	.ds 4
                    0008    682 Llcd_print_number$display_width$1$1==.
   0008                     683 _lcd_print_number_PARM_2:
   0008                     684 	.ds 1
                    0009    685 Llcd_print_number$number$1$1==.
   0009                     686 _lcd_print_number_number_1_1:
   0009                     687 	.ds 4
                    000D    688 Llcd_print_number$temp_ascii_store$1$1==.
   000D                     689 _lcd_print_number_temp_ascii_store_1_1:
   000D                     690 	.ds 10
                    0017    691 Llcd_print_number$counter$1$1==.
   0017                     692 _lcd_print_number_counter_1_1:
   0017                     693 	.ds 1
                    0018    694 Llcd_row_shifter$lcd_row_base_address$1$1==.
   0018                     695 _lcd_row_shifter_lcd_row_base_address_1_1:
   0018                     696 	.ds 4
                    001C    697 Llcd_ddram_flush$ddram_flush_txt$1$1==.
   001C                     698 _lcd_ddram_flush_ddram_flush_txt_1_1:
   001C                     699 	.ds 16
                    002C    700 Llcd_cgram_flush$cgram_flush_txt$1$1==.
   002C                     701 _lcd_cgram_flush_cgram_flush_txt_1_1:
   002C                     702 	.ds 16
                    003C    703 Llcd_go_to_addr$address$1$1==.
   003C                     704 _lcd_go_to_addr_address_1_1:
   003C                     705 	.ds 1
                    003D    706 Llcd_go_to_addr$invalid_address_txt$1$1==.
   003D                     707 _lcd_go_to_addr_invalid_address_txt_1_1:
   003D                     708 	.ds 18
                    004F    709 Llcd_go_to_x_y$column$1$1==.
   004F                     710 _lcd_go_to_x_y_PARM_2:
   004F                     711 	.ds 1
                    0050    712 Llcd_go_to_x_y$row$1$1==.
   0050                     713 _lcd_go_to_x_y_row_1_1:
   0050                     714 	.ds 1
                    0051    715 Llcd_go_to_x_y$invalid_row_txt$1$1==.
   0051                     716 _lcd_go_to_x_y_invalid_row_txt_1_1:
   0051                     717 	.ds 21
                    0066    718 Llcd_go_to_x_y$invalid_column_txt$1$1==.
   0066                     719 _lcd_go_to_x_y_invalid_column_txt_1_1:
   0066                     720 	.ds 24
                    007E    721 Llcd_go_to_x_y$lcd_row_base_address$1$1==.
   007E                     722 _lcd_go_to_x_y_lcd_row_base_address_1_1:
   007E                     723 	.ds 4
                    0082    724 Llcd_command_write$data_byte$1$1==.
   0082                     725 _lcd_command_write_data_byte_1_1:
   0082                     726 	.ds 1
                    0083    727 Llcd_put_ch$data_byte$1$1==.
   0083                     728 _lcd_put_ch_data_byte_1_1:
   0083                     729 	.ds 1
                    0084    730 Llcd_put_str$text_ptr$1$1==.
   0084                     731 _lcd_put_str_text_ptr_1_1:
   0084                     732 	.ds 2
                    0086    733 Llcd_custom_character_creation$number_of_custom_characters$1$1==.
   0086                     734 _lcd_custom_character_creation_number_of_custom_characters_1_1:
   0086                     735 	.ds 1
                    0087    736 Llcd_custom_character_creation$Base_query_txt$1$1==.
   0087                     737 _lcd_custom_character_creation_Base_query_txt_1_1:
   0087                     738 	.ds 32
                    00A7    739 Llcd_custom_character_creation$character_number_txt$1$1==.
   00A7                     740 _lcd_custom_character_creation_character_number_txt_1_1:
   00A7                     741 	.ds 13
                    00B4    742 Llcd_custom_character_creation$row_number_txt$1$1==.
   00B4                     743 _lcd_custom_character_creation_row_number_txt_1_1:
   00B4                     744 	.ds 7
                    00BB    745 Llcd_cu_boulder$cu_boulder_array$1$1==.
   00BB                     746 _lcd_cu_boulder_cu_boulder_array_1_1:
   00BB                     747 	.ds 224
                    019B    748 Llcd_cu_boulder$array_counter$1$1==.
   019B                     749 _lcd_cu_boulder_array_counter_1_1:
   019B                     750 	.ds 4
                    019F    751 Llcd_cu_boulder$temp_char$1$1==.
   019F                     752 _lcd_cu_boulder_temp_char_1_1:
   019F                     753 	.ds 1
                            754 ;--------------------------------------------------------
                            755 ; external initialized ram data
                            756 ;--------------------------------------------------------
                            757 	.area XISEG   (XDATA)
                            758 	.area HOME    (CODE)
                            759 	.area GSINIT0 (CODE)
                            760 	.area GSINIT1 (CODE)
                            761 	.area GSINIT2 (CODE)
                            762 	.area GSINIT3 (CODE)
                            763 	.area GSINIT4 (CODE)
                            764 	.area GSINIT5 (CODE)
                            765 	.area GSINIT  (CODE)
                            766 	.area GSFINAL (CODE)
                            767 	.area CSEG    (CODE)
                            768 ;--------------------------------------------------------
                            769 ; global & static initialisations
                            770 ;--------------------------------------------------------
                            771 	.area HOME    (CODE)
                            772 	.area GSINIT  (CODE)
                            773 	.area GSFINAL (CODE)
                            774 	.area GSINIT  (CODE)
                            775 ;------------------------------------------------------------
                            776 ;Allocation info for local variables in function 'lcd_cu_boulder'
                            777 ;------------------------------------------------------------
                            778 ;sloc0                     Allocated with name '_lcd_cu_boulder_sloc0_1_0'
                            779 ;sloc1                     Allocated with name '_lcd_cu_boulder_sloc1_1_0'
                            780 ;cu_boulder_array          Allocated with name '_lcd_cu_boulder_cu_boulder_array_1_1'
                            781 ;array_counter             Allocated with name '_lcd_cu_boulder_array_counter_1_1'
                            782 ;lcd_row                   Allocated with name '_lcd_cu_boulder_lcd_row_1_1'
                            783 ;lcd_column                Allocated with name '_lcd_cu_boulder_lcd_column_1_1'
                            784 ;character_row_number      Allocated with name '_lcd_cu_boulder_character_row_number_1_1'
                            785 ;character_number          Allocated with name '_lcd_cu_boulder_character_number_1_1'
                            786 ;temp_char                 Allocated with name '_lcd_cu_boulder_temp_char_1_1'
                            787 ;custom_character_address  Allocated with name '_lcd_cu_boulder_custom_character_address_1_1'
                            788 ;base                      Allocated with name '_lcd_cu_boulder_base_1_1'
                            789 ;------------------------------------------------------------
                    0000    790 	G$lcd_cu_boulder$0$0 ==.
                    0000    791 	C$lcd.c$350$1$1 ==.
                            792 ;	lcd.c:350: __xdata uint8_t static cu_boulder_array[]={3	,
                            793 ;	genPointerSet
                            794 ;     genFarPointerSet
   0000 90s00rBB            795 	mov	dptr,#_lcd_cu_boulder_cu_boulder_array_1_1
   0003 74 03               796 	mov	a,#0x03
   0005 F0                  797 	movx	@dptr,a
                            798 ;	genPointerSet
                            799 ;     genFarPointerSet
   0006 90s00rBC            800 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0001)
   0009 74 06               801 	mov	a,#0x06
   000B F0                  802 	movx	@dptr,a
                            803 ;	genPointerSet
                            804 ;     genFarPointerSet
   000C 90s00rBD            805 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0002)
   000F 74 0C               806 	mov	a,#0x0C
   0011 F0                  807 	movx	@dptr,a
                            808 ;	genPointerSet
                            809 ;     genFarPointerSet
   0012 90s00rBE            810 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0003)
   0015 74 18               811 	mov	a,#0x18
   0017 F0                  812 	movx	@dptr,a
                            813 ;	genPointerSet
                            814 ;     genFarPointerSet
   0018 90s00rBF            815 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0004)
   001B 74 10               816 	mov	a,#0x10
   001D F0                  817 	movx	@dptr,a
                            818 ;	genPointerSet
                            819 ;     genFarPointerSet
   001E 90s00rC0            820 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0005)
   0021 74 10               821 	mov	a,#0x10
   0023 F0                  822 	movx	@dptr,a
                            823 ;	genPointerSet
                            824 ;     genFarPointerSet
   0024 90s00rC1            825 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0006)
   0027 74 10               826 	mov	a,#0x10
   0029 F0                  827 	movx	@dptr,a
                            828 ;	genPointerSet
                            829 ;     genFarPointerSet
   002A 90s00rC2            830 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0007)
   002D 74 10               831 	mov	a,#0x10
   002F F0                  832 	movx	@dptr,a
                            833 ;	genPointerSet
                            834 ;     genFarPointerSet
   0030 90s00rC3            835 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0008)
   0033 74 1F               836 	mov	a,#0x1F
   0035 F0                  837 	movx	@dptr,a
                            838 ;	genPointerSet
                            839 ;     genFarPointerSet
   0036 90s00rC4            840 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0009)
                            841 ;	Peephole 181	changed mov to clr
                            842 ;	genPointerSet
                            843 ;     genFarPointerSet
                            844 ;	Peephole 181	changed mov to clr
                            845 ;	Peephole 219.a	removed redundant clear
                            846 ;	genPointerSet
                            847 ;     genFarPointerSet
                            848 ;	Peephole 181	changed mov to clr
                            849 ;	genPointerSet
                            850 ;     genFarPointerSet
                            851 ;	Peephole 181	changed mov to clr
                            852 ;	Peephole 219.a	removed redundant clear
   0039 E4                  853 	clr	a
   003A F0                  854 	movx	@dptr,a
   003B 90s00rC5            855 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000a)
   003E F0                  856 	movx	@dptr,a
   003F 90s00rC6            857 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000b)
                            858 ;	Peephole 219.b	removed redundant clear
   0042 F0                  859 	movx	@dptr,a
   0043 90s00rC7            860 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000c)
   0046 F0                  861 	movx	@dptr,a
                            862 ;	genPointerSet
                            863 ;     genFarPointerSet
   0047 90s00rC8            864 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000d)
                            865 ;	Peephole 181	changed mov to clr
   004A E4                  866 	clr	a
   004B F0                  867 	movx	@dptr,a
                            868 ;	genPointerSet
                            869 ;     genFarPointerSet
   004C 90s00rC9            870 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000e)
   004F 74 0F               871 	mov	a,#0x0F
   0051 F0                  872 	movx	@dptr,a
                            873 ;	genPointerSet
                            874 ;     genFarPointerSet
   0052 90s00rCA            875 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x000f)
   0055 74 0F               876 	mov	a,#0x0F
   0057 F0                  877 	movx	@dptr,a
                            878 ;	genPointerSet
                            879 ;     genFarPointerSet
   0058 90s00rCB            880 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0010)
   005B 74 1F               881 	mov	a,#0x1F
   005D F0                  882 	movx	@dptr,a
                            883 ;	genPointerSet
                            884 ;     genFarPointerSet
   005E 90s00rCC            885 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0011)
                            886 ;	Peephole 181	changed mov to clr
                            887 ;	genPointerSet
                            888 ;     genFarPointerSet
                            889 ;	Peephole 181	changed mov to clr
                            890 ;	Peephole 219.a	removed redundant clear
                            891 ;	genPointerSet
                            892 ;     genFarPointerSet
                            893 ;	Peephole 181	changed mov to clr
                            894 ;	genPointerSet
                            895 ;     genFarPointerSet
                            896 ;	Peephole 181	changed mov to clr
                            897 ;	Peephole 219.a	removed redundant clear
   0061 E4                  898 	clr	a
   0062 F0                  899 	movx	@dptr,a
   0063 90s00rCD            900 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0012)
   0066 F0                  901 	movx	@dptr,a
   0067 90s00rCE            902 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0013)
                            903 ;	Peephole 219.b	removed redundant clear
   006A F0                  904 	movx	@dptr,a
   006B 90s00rCF            905 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0014)
   006E F0                  906 	movx	@dptr,a
                            907 ;	genPointerSet
                            908 ;     genFarPointerSet
   006F 90s00rD0            909 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0015)
                            910 ;	Peephole 181	changed mov to clr
   0072 E4                  911 	clr	a
   0073 F0                  912 	movx	@dptr,a
                            913 ;	genPointerSet
                            914 ;     genFarPointerSet
   0074 90s00rD1            915 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0016)
   0077 74 1F               916 	mov	a,#0x1F
   0079 F0                  917 	movx	@dptr,a
                            918 ;	genPointerSet
                            919 ;     genFarPointerSet
   007A 90s00rD2            920 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0017)
   007D 74 1F               921 	mov	a,#0x1F
   007F F0                  922 	movx	@dptr,a
                            923 ;	genPointerSet
                            924 ;     genFarPointerSet
   0080 90s00rD3            925 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0018)
   0083 74 1F               926 	mov	a,#0x1F
   0085 F0                  927 	movx	@dptr,a
                            928 ;	genPointerSet
                            929 ;     genFarPointerSet
   0086 90s00rD4            930 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0019)
   0089 74 01               931 	mov	a,#0x01
   008B F0                  932 	movx	@dptr,a
                            933 ;	genPointerSet
                            934 ;     genFarPointerSet
   008C 90s00rD5            935 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001a)
                            936 ;	Peephole 181	changed mov to clr
                            937 ;	genPointerSet
                            938 ;     genFarPointerSet
                            939 ;	Peephole 181	changed mov to clr
                            940 ;	Peephole 219.a	removed redundant clear
                            941 ;	genPointerSet
                            942 ;     genFarPointerSet
                            943 ;	Peephole 181	changed mov to clr
                            944 ;	genPointerSet
                            945 ;     genFarPointerSet
                            946 ;	Peephole 181	changed mov to clr
                            947 ;	Peephole 219.a	removed redundant clear
   008F E4                  948 	clr	a
   0090 F0                  949 	movx	@dptr,a
   0091 90s00rD6            950 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001b)
   0094 F0                  951 	movx	@dptr,a
   0095 90s00rD7            952 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001c)
                            953 ;	Peephole 219.b	removed redundant clear
   0098 F0                  954 	movx	@dptr,a
   0099 90s00rD8            955 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001d)
   009C F0                  956 	movx	@dptr,a
                            957 ;	genPointerSet
                            958 ;     genFarPointerSet
   009D 90s00rD9            959 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001e)
   00A0 74 18               960 	mov	a,#0x18
   00A2 F0                  961 	movx	@dptr,a
                            962 ;	genPointerSet
                            963 ;     genFarPointerSet
   00A3 90s00rDA            964 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x001f)
   00A6 74 18               965 	mov	a,#0x18
   00A8 F0                  966 	movx	@dptr,a
                            967 ;	genPointerSet
                            968 ;     genFarPointerSet
   00A9 90s00rDB            969 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0020)
                            970 ;	Peephole 181	changed mov to clr
   00AC E4                  971 	clr	a
   00AD F0                  972 	movx	@dptr,a
                            973 ;	genPointerSet
                            974 ;     genFarPointerSet
   00AE 90s00rDC            975 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0021)
   00B1 74 10               976 	mov	a,#0x10
   00B3 F0                  977 	movx	@dptr,a
                            978 ;	genPointerSet
                            979 ;     genFarPointerSet
   00B4 90s00rDD            980 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0022)
   00B7 74 18               981 	mov	a,#0x18
   00B9 F0                  982 	movx	@dptr,a
                            983 ;	genPointerSet
                            984 ;     genFarPointerSet
   00BA 90s00rDE            985 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0023)
   00BD 74 08               986 	mov	a,#0x08
   00BF F0                  987 	movx	@dptr,a
                            988 ;	genPointerSet
                            989 ;     genFarPointerSet
   00C0 90s00rDF            990 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0024)
   00C3 74 08               991 	mov	a,#0x08
   00C5 F0                  992 	movx	@dptr,a
                            993 ;	genPointerSet
                            994 ;     genFarPointerSet
   00C6 90s00rE0            995 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0025)
   00C9 74 08               996 	mov	a,#0x08
   00CB F0                  997 	movx	@dptr,a
                            998 ;	genPointerSet
                            999 ;     genFarPointerSet
   00CC 90s00rE1           1000 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0026)
   00CF 74 08              1001 	mov	a,#0x08
   00D1 F0                 1002 	movx	@dptr,a
                           1003 ;	genPointerSet
                           1004 ;     genFarPointerSet
   00D2 90s00rE2           1005 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0027)
   00D5 74 08              1006 	mov	a,#0x08
   00D7 F0                 1007 	movx	@dptr,a
                           1008 ;	genPointerSet
                           1009 ;     genFarPointerSet
   00D8 90s00rE3           1010 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0028)
                           1011 ;	Peephole 181	changed mov to clr
                           1012 ;	genPointerSet
                           1013 ;     genFarPointerSet
                           1014 ;	Peephole 181	changed mov to clr
                           1015 ;	Peephole 219.a	removed redundant clear
                           1016 ;	genPointerSet
                           1017 ;     genFarPointerSet
                           1018 ;	Peephole 181	changed mov to clr
                           1019 ;	genPointerSet
                           1020 ;     genFarPointerSet
                           1021 ;	Peephole 181	changed mov to clr
                           1022 ;	Peephole 219.a	removed redundant clear
   00DB E4                 1023 	clr	a
   00DC F0                 1024 	movx	@dptr,a
   00DD 90s00rE4           1025 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0029)
   00E0 F0                 1026 	movx	@dptr,a
   00E1 90s00rE5           1027 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002a)
                           1028 ;	Peephole 219.b	removed redundant clear
   00E4 F0                 1029 	movx	@dptr,a
   00E5 90s00rE6           1030 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002b)
   00E8 F0                 1031 	movx	@dptr,a
                           1032 ;	genPointerSet
                           1033 ;     genFarPointerSet
   00E9 90s00rE7           1034 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002c)
                           1035 ;	Peephole 181	changed mov to clr
                           1036 ;	genPointerSet
                           1037 ;     genFarPointerSet
                           1038 ;	Peephole 181	changed mov to clr
                           1039 ;	Peephole 219.a	removed redundant clear
                           1040 ;	genPointerSet
                           1041 ;     genFarPointerSet
                           1042 ;	Peephole 181	changed mov to clr
                           1043 ;	genPointerSet
                           1044 ;     genFarPointerSet
                           1045 ;	Peephole 181	changed mov to clr
                           1046 ;	Peephole 219.a	removed redundant clear
   00EC E4                 1047 	clr	a
   00ED F0                 1048 	movx	@dptr,a
   00EE 90s00rE8           1049 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002d)
   00F1 F0                 1050 	movx	@dptr,a
   00F2 90s00rE9           1051 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002e)
                           1052 ;	Peephole 219.b	removed redundant clear
   00F5 F0                 1053 	movx	@dptr,a
   00F6 90s00rEA           1054 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x002f)
   00F9 F0                 1055 	movx	@dptr,a
                           1056 ;	genPointerSet
                           1057 ;     genFarPointerSet
   00FA 90s00rEB           1058 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0030)
                           1059 ;	Peephole 181	changed mov to clr
                           1060 ;	genPointerSet
                           1061 ;     genFarPointerSet
                           1062 ;	Peephole 181	changed mov to clr
                           1063 ;	Peephole 219.a	removed redundant clear
                           1064 ;	genPointerSet
                           1065 ;     genFarPointerSet
                           1066 ;	Peephole 181	changed mov to clr
                           1067 ;	genPointerSet
                           1068 ;     genFarPointerSet
                           1069 ;	Peephole 181	changed mov to clr
                           1070 ;	Peephole 219.a	removed redundant clear
   00FD E4                 1071 	clr	a
   00FE F0                 1072 	movx	@dptr,a
   00FF 90s00rEC           1073 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0031)
   0102 F0                 1074 	movx	@dptr,a
   0103 90s00rED           1075 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0032)
                           1076 ;	Peephole 219.b	removed redundant clear
   0106 F0                 1077 	movx	@dptr,a
   0107 90s00rEE           1078 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0033)
   010A F0                 1079 	movx	@dptr,a
                           1080 ;	genPointerSet
                           1081 ;     genFarPointerSet
   010B 90s00rEF           1082 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0034)
                           1083 ;	Peephole 181	changed mov to clr
                           1084 ;	genPointerSet
                           1085 ;     genFarPointerSet
                           1086 ;	Peephole 181	changed mov to clr
                           1087 ;	Peephole 219.a	removed redundant clear
                           1088 ;	genPointerSet
                           1089 ;     genFarPointerSet
                           1090 ;	Peephole 181	changed mov to clr
                           1091 ;	genPointerSet
                           1092 ;     genFarPointerSet
                           1093 ;	Peephole 181	changed mov to clr
                           1094 ;	Peephole 219.a	removed redundant clear
   010E E4                 1095 	clr	a
   010F F0                 1096 	movx	@dptr,a
   0110 90s00rF0           1097 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0035)
   0113 F0                 1098 	movx	@dptr,a
   0114 90s00rF1           1099 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0036)
                           1100 ;	Peephole 219.b	removed redundant clear
   0117 F0                 1101 	movx	@dptr,a
   0118 90s00rF2           1102 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0037)
   011B F0                 1103 	movx	@dptr,a
                           1104 ;	genPointerSet
                           1105 ;     genFarPointerSet
   011C 90s00rF3           1106 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0038)
   011F 74 10              1107 	mov	a,#0x10
   0121 F0                 1108 	movx	@dptr,a
                           1109 ;	genPointerSet
                           1110 ;     genFarPointerSet
   0122 90s00rF4           1111 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0039)
   0125 74 10              1112 	mov	a,#0x10
   0127 F0                 1113 	movx	@dptr,a
                           1114 ;	genPointerSet
                           1115 ;     genFarPointerSet
   0128 90s00rF5           1116 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003a)
   012B 74 10              1117 	mov	a,#0x10
   012D F0                 1118 	movx	@dptr,a
                           1119 ;	genPointerSet
                           1120 ;     genFarPointerSet
   012E 90s00rF6           1121 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003b)
   0131 74 10              1122 	mov	a,#0x10
   0133 F0                 1123 	movx	@dptr,a
                           1124 ;	genPointerSet
                           1125 ;     genFarPointerSet
   0134 90s00rF7           1126 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003c)
   0137 74 10              1127 	mov	a,#0x10
   0139 F0                 1128 	movx	@dptr,a
                           1129 ;	genPointerSet
                           1130 ;     genFarPointerSet
   013A 90s00rF8           1131 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003d)
   013D 74 10              1132 	mov	a,#0x10
   013F F0                 1133 	movx	@dptr,a
                           1134 ;	genPointerSet
                           1135 ;     genFarPointerSet
   0140 90s00rF9           1136 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003e)
   0143 74 10              1137 	mov	a,#0x10
   0145 F0                 1138 	movx	@dptr,a
                           1139 ;	genPointerSet
                           1140 ;     genFarPointerSet
   0146 90s00rFA           1141 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x003f)
   0149 74 10              1142 	mov	a,#0x10
   014B F0                 1143 	movx	@dptr,a
                           1144 ;	genPointerSet
                           1145 ;     genFarPointerSet
   014C 90s00rFB           1146 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0040)
   014F 74 0F              1147 	mov	a,#0x0F
   0151 F0                 1148 	movx	@dptr,a
                           1149 ;	genPointerSet
                           1150 ;     genFarPointerSet
   0152 90s00rFC           1151 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0041)
   0155 74 0C              1152 	mov	a,#0x0C
   0157 F0                 1153 	movx	@dptr,a
                           1154 ;	genPointerSet
                           1155 ;     genFarPointerSet
   0158 90s00rFD           1156 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0042)
   015B 74 0C              1157 	mov	a,#0x0C
   015D F0                 1158 	movx	@dptr,a
                           1159 ;	genPointerSet
                           1160 ;     genFarPointerSet
   015E 90s00rFE           1161 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0043)
   0161 74 0C              1162 	mov	a,#0x0C
   0163 F0                 1163 	movx	@dptr,a
                           1164 ;	genPointerSet
                           1165 ;     genFarPointerSet
   0164 90s00rFF           1166 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0044)
   0167 74 0C              1167 	mov	a,#0x0C
   0169 F0                 1168 	movx	@dptr,a
                           1169 ;	genPointerSet
                           1170 ;     genFarPointerSet
   016A 90s01r00           1171 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0045)
   016D 74 0C              1172 	mov	a,#0x0C
   016F F0                 1173 	movx	@dptr,a
                           1174 ;	genPointerSet
                           1175 ;     genFarPointerSet
   0170 90s01r01           1176 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0046)
   0173 74 0F              1177 	mov	a,#0x0F
   0175 F0                 1178 	movx	@dptr,a
                           1179 ;	genPointerSet
                           1180 ;     genFarPointerSet
   0176 90s01r02           1181 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0047)
   0179 74 0F              1182 	mov	a,#0x0F
   017B F0                 1183 	movx	@dptr,a
                           1184 ;	genPointerSet
                           1185 ;     genFarPointerSet
   017C 90s01r03           1186 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0048)
   017F 74 1F              1187 	mov	a,#0x1F
   0181 F0                 1188 	movx	@dptr,a
                           1189 ;	genPointerSet
                           1190 ;     genFarPointerSet
   0182 90s01r04           1191 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0049)
                           1192 ;	Peephole 181	changed mov to clr
                           1193 ;	genPointerSet
                           1194 ;     genFarPointerSet
                           1195 ;	Peephole 181	changed mov to clr
                           1196 ;	Peephole 219.a	removed redundant clear
                           1197 ;	genPointerSet
                           1198 ;     genFarPointerSet
                           1199 ;	Peephole 181	changed mov to clr
                           1200 ;	genPointerSet
                           1201 ;     genFarPointerSet
                           1202 ;	Peephole 181	changed mov to clr
                           1203 ;	Peephole 219.a	removed redundant clear
   0185 E4                 1204 	clr	a
   0186 F0                 1205 	movx	@dptr,a
   0187 90s01r05           1206 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004a)
   018A F0                 1207 	movx	@dptr,a
   018B 90s01r06           1208 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004b)
                           1209 ;	Peephole 219.b	removed redundant clear
   018E F0                 1210 	movx	@dptr,a
   018F 90s01r07           1211 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004c)
   0192 F0                 1212 	movx	@dptr,a
                           1213 ;	genPointerSet
                           1214 ;     genFarPointerSet
   0193 90s01r08           1215 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004d)
                           1216 ;	Peephole 181	changed mov to clr
                           1217 ;	genPointerSet
                           1218 ;     genFarPointerSet
                           1219 ;	Peephole 181	changed mov to clr
                           1220 ;	Peephole 219.a	removed redundant clear
                           1221 ;	genPointerSet
                           1222 ;     genFarPointerSet
                           1223 ;	Peephole 181	changed mov to clr
   0196 E4                 1224 	clr	a
   0197 F0                 1225 	movx	@dptr,a
   0198 90s01r09           1226 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004e)
   019B F0                 1227 	movx	@dptr,a
   019C 90s01r0A           1228 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x004f)
                           1229 ;	Peephole 219.b	removed redundant clear
   019F F0                 1230 	movx	@dptr,a
                           1231 ;	genPointerSet
                           1232 ;     genFarPointerSet
   01A0 90s01r0B           1233 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0050)
   01A3 74 18              1234 	mov	a,#0x18
   01A5 F0                 1235 	movx	@dptr,a
                           1236 ;	genPointerSet
                           1237 ;     genFarPointerSet
   01A6 90s01r0C           1238 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0051)
   01A9 74 1F              1239 	mov	a,#0x1F
   01AB F0                 1240 	movx	@dptr,a
                           1241 ;	genPointerSet
                           1242 ;     genFarPointerSet
   01AC 90s01r0D           1243 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0052)
   01AF 74 1F              1244 	mov	a,#0x1F
   01B1 F0                 1245 	movx	@dptr,a
                           1246 ;	genPointerSet
                           1247 ;     genFarPointerSet
   01B2 90s01r0E           1248 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0053)
   01B5 74 1F              1249 	mov	a,#0x1F
   01B7 F0                 1250 	movx	@dptr,a
                           1251 ;	genPointerSet
                           1252 ;     genFarPointerSet
   01B8 90s01r0F           1253 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0054)
   01BB 74 1F              1254 	mov	a,#0x1F
   01BD F0                 1255 	movx	@dptr,a
                           1256 ;	genPointerSet
                           1257 ;     genFarPointerSet
   01BE 90s01r10           1258 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0055)
   01C1 74 1F              1259 	mov	a,#0x1F
   01C3 F0                 1260 	movx	@dptr,a
                           1261 ;	genPointerSet
                           1262 ;     genFarPointerSet
   01C4 90s01r11           1263 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0056)
   01C7 74 18              1264 	mov	a,#0x18
   01C9 F0                 1265 	movx	@dptr,a
                           1266 ;	genPointerSet
                           1267 ;     genFarPointerSet
   01CA 90s01r12           1268 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0057)
   01CD 74 18              1269 	mov	a,#0x18
   01CF F0                 1270 	movx	@dptr,a
                           1271 ;	genPointerSet
                           1272 ;     genFarPointerSet
   01D0 90s01r13           1273 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0058)
   01D3 74 0F              1274 	mov	a,#0x0F
   01D5 F0                 1275 	movx	@dptr,a
                           1276 ;	genPointerSet
                           1277 ;     genFarPointerSet
   01D6 90s01r14           1278 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0059)
   01D9 74 1E              1279 	mov	a,#0x1E
   01DB F0                 1280 	movx	@dptr,a
                           1281 ;	genPointerSet
                           1282 ;     genFarPointerSet
   01DC 90s01r15           1283 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005a)
   01DF 74 1E              1284 	mov	a,#0x1E
   01E1 F0                 1285 	movx	@dptr,a
                           1286 ;	genPointerSet
                           1287 ;     genFarPointerSet
   01E2 90s01r16           1288 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005b)
   01E5 74 1E              1289 	mov	a,#0x1E
   01E7 F0                 1290 	movx	@dptr,a
                           1291 ;	genPointerSet
                           1292 ;     genFarPointerSet
   01E8 90s01r17           1293 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005c)
   01EB 74 1E              1294 	mov	a,#0x1E
   01ED F0                 1295 	movx	@dptr,a
                           1296 ;	genPointerSet
                           1297 ;     genFarPointerSet
   01EE 90s01r18           1298 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005d)
   01F1 74 1E              1299 	mov	a,#0x1E
   01F3 F0                 1300 	movx	@dptr,a
                           1301 ;	genPointerSet
                           1302 ;     genFarPointerSet
   01F4 90s01r19           1303 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005e)
   01F7 74 0E              1304 	mov	a,#0x0E
   01F9 F0                 1305 	movx	@dptr,a
                           1306 ;	genPointerSet
                           1307 ;     genFarPointerSet
   01FA 90s01r1A           1308 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x005f)
   01FD 74 0E              1309 	mov	a,#0x0E
   01FF F0                 1310 	movx	@dptr,a
                           1311 ;	genPointerSet
                           1312 ;     genFarPointerSet
   0200 90s01r1B           1313 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0060)
   0203 74 1F              1314 	mov	a,#0x1F
   0205 F0                 1315 	movx	@dptr,a
                           1316 ;	genPointerSet
                           1317 ;     genFarPointerSet
   0206 90s01r1C           1318 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0061)
                           1319 ;	Peephole 181	changed mov to clr
                           1320 ;	genPointerSet
                           1321 ;     genFarPointerSet
                           1322 ;	Peephole 181	changed mov to clr
                           1323 ;	Peephole 219.a	removed redundant clear
                           1324 ;	genPointerSet
                           1325 ;     genFarPointerSet
                           1326 ;	Peephole 181	changed mov to clr
                           1327 ;	genPointerSet
                           1328 ;     genFarPointerSet
                           1329 ;	Peephole 181	changed mov to clr
                           1330 ;	Peephole 219.a	removed redundant clear
   0209 E4                 1331 	clr	a
   020A F0                 1332 	movx	@dptr,a
   020B 90s01r1D           1333 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0062)
   020E F0                 1334 	movx	@dptr,a
   020F 90s01r1E           1335 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0063)
                           1336 ;	Peephole 219.b	removed redundant clear
   0212 F0                 1337 	movx	@dptr,a
   0213 90s01r1F           1338 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0064)
   0216 F0                 1339 	movx	@dptr,a
                           1340 ;	genPointerSet
                           1341 ;     genFarPointerSet
   0217 90s01r20           1342 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0065)
                           1343 ;	Peephole 181	changed mov to clr
   021A E4                 1344 	clr	a
   021B F0                 1345 	movx	@dptr,a
                           1346 ;	genPointerSet
                           1347 ;     genFarPointerSet
   021C 90s01r21           1348 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0066)
   021F 74 01              1349 	mov	a,#0x01
   0221 F0                 1350 	movx	@dptr,a
                           1351 ;	genPointerSet
                           1352 ;     genFarPointerSet
   0222 90s01r22           1353 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0067)
   0225 74 01              1354 	mov	a,#0x01
   0227 F0                 1355 	movx	@dptr,a
                           1356 ;	genPointerSet
                           1357 ;     genFarPointerSet
   0228 90s01r23           1358 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0068)
   022B 74 18              1359 	mov	a,#0x18
   022D F0                 1360 	movx	@dptr,a
                           1361 ;	genPointerSet
                           1362 ;     genFarPointerSet
   022E 90s01r24           1363 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0069)
   0231 74 08              1364 	mov	a,#0x08
   0233 F0                 1365 	movx	@dptr,a
                           1366 ;	genPointerSet
                           1367 ;     genFarPointerSet
   0234 90s01r25           1368 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006a)
   0237 74 08              1369 	mov	a,#0x08
   0239 F0                 1370 	movx	@dptr,a
                           1371 ;	genPointerSet
                           1372 ;     genFarPointerSet
   023A 90s01r26           1373 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006b)
   023D 74 08              1374 	mov	a,#0x08
   023F F0                 1375 	movx	@dptr,a
                           1376 ;	genPointerSet
                           1377 ;     genFarPointerSet
   0240 90s01r27           1378 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006c)
   0243 74 08              1379 	mov	a,#0x08
   0245 F0                 1380 	movx	@dptr,a
                           1381 ;	genPointerSet
                           1382 ;     genFarPointerSet
   0246 90s01r28           1383 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006d)
   0249 74 08              1384 	mov	a,#0x08
   024B F0                 1385 	movx	@dptr,a
                           1386 ;	genPointerSet
                           1387 ;     genFarPointerSet
   024C 90s01r29           1388 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006e)
   024F 74 18              1389 	mov	a,#0x18
   0251 F0                 1390 	movx	@dptr,a
                           1391 ;	genPointerSet
                           1392 ;     genFarPointerSet
   0252 90s01r2A           1393 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x006f)
                           1394 ;	Peephole 181	changed mov to clr
   0255 E4                 1395 	clr	a
   0256 F0                 1396 	movx	@dptr,a
                           1397 ;	genPointerSet
                           1398 ;     genFarPointerSet
   0257 90s01r2B           1399 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0070)
   025A 74 10              1400 	mov	a,#0x10
   025C F0                 1401 	movx	@dptr,a
                           1402 ;	genPointerSet
                           1403 ;     genFarPointerSet
   025D 90s01r2C           1404 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0071)
   0260 74 10              1405 	mov	a,#0x10
   0262 F0                 1406 	movx	@dptr,a
                           1407 ;	genPointerSet
                           1408 ;     genFarPointerSet
   0263 90s01r2D           1409 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0072)
   0266 74 10              1410 	mov	a,#0x10
   0268 F0                 1411 	movx	@dptr,a
                           1412 ;	genPointerSet
                           1413 ;     genFarPointerSet
   0269 90s01r2E           1414 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0073)
   026C 74 18              1415 	mov	a,#0x18
   026E F0                 1416 	movx	@dptr,a
                           1417 ;	genPointerSet
                           1418 ;     genFarPointerSet
   026F 90s01r2F           1419 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0074)
   0272 74 0C              1420 	mov	a,#0x0C
   0274 F0                 1421 	movx	@dptr,a
                           1422 ;	genPointerSet
                           1423 ;     genFarPointerSet
   0275 90s01r30           1424 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0075)
   0278 74 06              1425 	mov	a,#0x06
   027A F0                 1426 	movx	@dptr,a
                           1427 ;	genPointerSet
                           1428 ;     genFarPointerSet
   027B 90s01r31           1429 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0076)
   027E 74 03              1430 	mov	a,#0x03
   0280 F0                 1431 	movx	@dptr,a
                           1432 ;	genPointerSet
                           1433 ;     genFarPointerSet
   0281 90s01r32           1434 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0077)
                           1435 ;	Peephole 181	changed mov to clr
   0284 E4                 1436 	clr	a
   0285 F0                 1437 	movx	@dptr,a
                           1438 ;	genPointerSet
                           1439 ;     genFarPointerSet
   0286 90s01r33           1440 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0078)
   0289 74 0F              1441 	mov	a,#0x0F
   028B F0                 1442 	movx	@dptr,a
                           1443 ;	genPointerSet
                           1444 ;     genFarPointerSet
   028C 90s01r34           1445 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0079)
                           1446 ;	Peephole 181	changed mov to clr
                           1447 ;	genPointerSet
                           1448 ;     genFarPointerSet
                           1449 ;	Peephole 181	changed mov to clr
                           1450 ;	Peephole 219.a	removed redundant clear
                           1451 ;	genPointerSet
                           1452 ;     genFarPointerSet
                           1453 ;	Peephole 181	changed mov to clr
                           1454 ;	genPointerSet
                           1455 ;     genFarPointerSet
                           1456 ;	Peephole 181	changed mov to clr
                           1457 ;	Peephole 219.a	removed redundant clear
   028F E4                 1458 	clr	a
   0290 F0                 1459 	movx	@dptr,a
   0291 90s01r35           1460 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007a)
   0294 F0                 1461 	movx	@dptr,a
   0295 90s01r36           1462 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007b)
                           1463 ;	Peephole 219.b	removed redundant clear
   0298 F0                 1464 	movx	@dptr,a
   0299 90s01r37           1465 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007c)
   029C F0                 1466 	movx	@dptr,a
                           1467 ;	genPointerSet
                           1468 ;     genFarPointerSet
   029D 90s01r38           1469 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007d)
                           1470 ;	Peephole 181	changed mov to clr
   02A0 E4                 1471 	clr	a
   02A1 F0                 1472 	movx	@dptr,a
                           1473 ;	genPointerSet
                           1474 ;     genFarPointerSet
   02A2 90s01r39           1475 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007e)
   02A5 74 1F              1476 	mov	a,#0x1F
   02A7 F0                 1477 	movx	@dptr,a
                           1478 ;	genPointerSet
                           1479 ;     genFarPointerSet
   02A8 90s01r3A           1480 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x007f)
   02AB 74 01              1481 	mov	a,#0x01
   02AD F0                 1482 	movx	@dptr,a
                           1483 ;	genPointerSet
                           1484 ;     genFarPointerSet
   02AE 90s01r3B           1485 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0080)
                           1486 ;	Peephole 181	changed mov to clr
                           1487 ;	genPointerSet
                           1488 ;     genFarPointerSet
                           1489 ;	Peephole 181	changed mov to clr
                           1490 ;	Peephole 219.a	removed redundant clear
                           1491 ;	genPointerSet
                           1492 ;     genFarPointerSet
                           1493 ;	Peephole 181	changed mov to clr
                           1494 ;	genPointerSet
                           1495 ;     genFarPointerSet
                           1496 ;	Peephole 181	changed mov to clr
                           1497 ;	Peephole 219.a	removed redundant clear
   02B1 E4                 1498 	clr	a
   02B2 F0                 1499 	movx	@dptr,a
   02B3 90s01r3C           1500 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0081)
   02B6 F0                 1501 	movx	@dptr,a
   02B7 90s01r3D           1502 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0082)
                           1503 ;	Peephole 219.b	removed redundant clear
   02BA F0                 1504 	movx	@dptr,a
   02BB 90s01r3E           1505 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0083)
   02BE F0                 1506 	movx	@dptr,a
                           1507 ;	genPointerSet
                           1508 ;     genFarPointerSet
   02BF 90s01r3F           1509 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0084)
                           1510 ;	Peephole 181	changed mov to clr
                           1511 ;	genPointerSet
                           1512 ;     genFarPointerSet
                           1513 ;	Peephole 181	changed mov to clr
                           1514 ;	Peephole 219.a	removed redundant clear
                           1515 ;	genPointerSet
                           1516 ;     genFarPointerSet
                           1517 ;	Peephole 181	changed mov to clr
                           1518 ;	genPointerSet
                           1519 ;     genFarPointerSet
                           1520 ;	Peephole 181	changed mov to clr
                           1521 ;	Peephole 219.a	removed redundant clear
   02C2 E4                 1522 	clr	a
   02C3 F0                 1523 	movx	@dptr,a
   02C4 90s01r40           1524 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0085)
   02C7 F0                 1525 	movx	@dptr,a
   02C8 90s01r41           1526 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0086)
                           1527 ;	Peephole 219.b	removed redundant clear
   02CB F0                 1528 	movx	@dptr,a
   02CC 90s01r42           1529 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0087)
   02CF F0                 1530 	movx	@dptr,a
                           1531 ;	genPointerSet
                           1532 ;     genFarPointerSet
   02D0 90s01r43           1533 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0088)
   02D3 74 18              1534 	mov	a,#0x18
   02D5 F0                 1535 	movx	@dptr,a
                           1536 ;	genPointerSet
                           1537 ;     genFarPointerSet
   02D6 90s01r44           1538 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0089)
                           1539 ;	Peephole 181	changed mov to clr
                           1540 ;	genPointerSet
                           1541 ;     genFarPointerSet
                           1542 ;	Peephole 181	changed mov to clr
                           1543 ;	Peephole 219.a	removed redundant clear
                           1544 ;	genPointerSet
                           1545 ;     genFarPointerSet
                           1546 ;	Peephole 181	changed mov to clr
                           1547 ;	genPointerSet
                           1548 ;     genFarPointerSet
                           1549 ;	Peephole 181	changed mov to clr
                           1550 ;	Peephole 219.a	removed redundant clear
   02D9 E4                 1551 	clr	a
   02DA F0                 1552 	movx	@dptr,a
   02DB 90s01r45           1553 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008a)
   02DE F0                 1554 	movx	@dptr,a
   02DF 90s01r46           1555 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008b)
                           1556 ;	Peephole 219.b	removed redundant clear
   02E2 F0                 1557 	movx	@dptr,a
   02E3 90s01r47           1558 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008c)
   02E6 F0                 1559 	movx	@dptr,a
                           1560 ;	genPointerSet
                           1561 ;     genFarPointerSet
   02E7 90s01r48           1562 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008d)
   02EA 74 01              1563 	mov	a,#0x01
   02EC F0                 1564 	movx	@dptr,a
                           1565 ;	genPointerSet
                           1566 ;     genFarPointerSet
   02ED 90s01r49           1567 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008e)
   02F0 74 1F              1568 	mov	a,#0x1F
   02F2 F0                 1569 	movx	@dptr,a
                           1570 ;	genPointerSet
                           1571 ;     genFarPointerSet
   02F3 90s01r4A           1572 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x008f)
   02F6 74 1F              1573 	mov	a,#0x1F
   02F8 F0                 1574 	movx	@dptr,a
                           1575 ;	genPointerSet
                           1576 ;     genFarPointerSet
   02F9 90s01r4B           1577 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0090)
   02FC 74 0E              1578 	mov	a,#0x0E
   02FE F0                 1579 	movx	@dptr,a
                           1580 ;	genPointerSet
                           1581 ;     genFarPointerSet
   02FF 90s01r4C           1582 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0091)
   0302 74 0E              1583 	mov	a,#0x0E
   0304 F0                 1584 	movx	@dptr,a
                           1585 ;	genPointerSet
                           1586 ;     genFarPointerSet
   0305 90s01r4D           1587 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0092)
   0308 74 0E              1588 	mov	a,#0x0E
   030A F0                 1589 	movx	@dptr,a
                           1590 ;	genPointerSet
                           1591 ;     genFarPointerSet
   030B 90s01r4E           1592 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0093)
   030E 74 0E              1593 	mov	a,#0x0E
   0310 F0                 1594 	movx	@dptr,a
                           1595 ;	genPointerSet
                           1596 ;     genFarPointerSet
   0311 90s01r4F           1597 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0094)
   0314 74 1E              1598 	mov	a,#0x1E
   0316 F0                 1599 	movx	@dptr,a
                           1600 ;	genPointerSet
                           1601 ;     genFarPointerSet
   0317 90s01r50           1602 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0095)
   031A 74 1E              1603 	mov	a,#0x1E
   031C F0                 1604 	movx	@dptr,a
                           1605 ;	genPointerSet
                           1606 ;     genFarPointerSet
   031D 90s01r51           1607 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0096)
   0320 74 1E              1608 	mov	a,#0x1E
   0322 F0                 1609 	movx	@dptr,a
                           1610 ;	genPointerSet
                           1611 ;     genFarPointerSet
   0323 90s01r52           1612 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0097)
   0326 74 1E              1613 	mov	a,#0x1E
   0328 F0                 1614 	movx	@dptr,a
                           1615 ;	genPointerSet
                           1616 ;     genFarPointerSet
   0329 90s01r53           1617 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0098)
   032C 74 01              1618 	mov	a,#0x01
   032E F0                 1619 	movx	@dptr,a
                           1620 ;	genPointerSet
                           1621 ;     genFarPointerSet
   032F 90s01r54           1622 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x0099)
   0332 74 01              1623 	mov	a,#0x01
   0334 F0                 1624 	movx	@dptr,a
                           1625 ;	genPointerSet
                           1626 ;     genFarPointerSet
   0335 90s01r55           1627 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009a)
   0338 74 01              1628 	mov	a,#0x01
   033A F0                 1629 	movx	@dptr,a
                           1630 ;	genPointerSet
                           1631 ;     genFarPointerSet
   033B 90s01r56           1632 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009b)
   033E 74 01              1633 	mov	a,#0x01
   0340 F0                 1634 	movx	@dptr,a
                           1635 ;	genPointerSet
                           1636 ;     genFarPointerSet
   0341 90s01r57           1637 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009c)
   0344 74 01              1638 	mov	a,#0x01
   0346 F0                 1639 	movx	@dptr,a
                           1640 ;	genPointerSet
                           1641 ;     genFarPointerSet
   0347 90s01r58           1642 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009d)
   034A 74 01              1643 	mov	a,#0x01
   034C F0                 1644 	movx	@dptr,a
                           1645 ;	genPointerSet
                           1646 ;     genFarPointerSet
   034D 90s01r59           1647 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009e)
   0350 74 01              1648 	mov	a,#0x01
   0352 F0                 1649 	movx	@dptr,a
                           1650 ;	genPointerSet
                           1651 ;     genFarPointerSet
   0353 90s01r5A           1652 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x009f)
   0356 74 01              1653 	mov	a,#0x01
   0358 F0                 1654 	movx	@dptr,a
                           1655 ;	genPointerSet
                           1656 ;     genFarPointerSet
   0359 90s01r5B           1657 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a0)
                           1658 ;	Peephole 181	changed mov to clr
                           1659 ;	genPointerSet
                           1660 ;     genFarPointerSet
                           1661 ;	Peephole 181	changed mov to clr
                           1662 ;	Peephole 219.a	removed redundant clear
                           1663 ;	genPointerSet
                           1664 ;     genFarPointerSet
                           1665 ;	Peephole 181	changed mov to clr
                           1666 ;	genPointerSet
                           1667 ;     genFarPointerSet
                           1668 ;	Peephole 181	changed mov to clr
                           1669 ;	Peephole 219.a	removed redundant clear
   035C E4                 1670 	clr	a
   035D F0                 1671 	movx	@dptr,a
   035E 90s01r5C           1672 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a1)
   0361 F0                 1673 	movx	@dptr,a
   0362 90s01r5D           1674 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a2)
                           1675 ;	Peephole 219.b	removed redundant clear
   0365 F0                 1676 	movx	@dptr,a
   0366 90s01r5E           1677 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a3)
   0369 F0                 1678 	movx	@dptr,a
                           1679 ;	genPointerSet
                           1680 ;     genFarPointerSet
   036A 90s01r5F           1681 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a4)
                           1682 ;	Peephole 181	changed mov to clr
                           1683 ;	genPointerSet
                           1684 ;     genFarPointerSet
                           1685 ;	Peephole 181	changed mov to clr
                           1686 ;	Peephole 219.a	removed redundant clear
                           1687 ;	genPointerSet
                           1688 ;     genFarPointerSet
                           1689 ;	Peephole 181	changed mov to clr
                           1690 ;	genPointerSet
                           1691 ;     genFarPointerSet
                           1692 ;	Peephole 181	changed mov to clr
                           1693 ;	Peephole 219.a	removed redundant clear
   036D E4                 1694 	clr	a
   036E F0                 1695 	movx	@dptr,a
   036F 90s01r60           1696 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a5)
   0372 F0                 1697 	movx	@dptr,a
   0373 90s01r61           1698 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a6)
                           1699 ;	Peephole 219.b	removed redundant clear
   0376 F0                 1700 	movx	@dptr,a
   0377 90s01r62           1701 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a7)
   037A F0                 1702 	movx	@dptr,a
                           1703 ;	genPointerSet
                           1704 ;     genFarPointerSet
   037B 90s01r63           1705 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a8)
                           1706 ;	Peephole 181	changed mov to clr
                           1707 ;	genPointerSet
                           1708 ;     genFarPointerSet
                           1709 ;	Peephole 181	changed mov to clr
                           1710 ;	Peephole 219.a	removed redundant clear
                           1711 ;	genPointerSet
                           1712 ;     genFarPointerSet
                           1713 ;	Peephole 181	changed mov to clr
                           1714 ;	genPointerSet
                           1715 ;     genFarPointerSet
                           1716 ;	Peephole 181	changed mov to clr
                           1717 ;	Peephole 219.a	removed redundant clear
   037E E4                 1718 	clr	a
   037F F0                 1719 	movx	@dptr,a
   0380 90s01r64           1720 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00a9)
   0383 F0                 1721 	movx	@dptr,a
   0384 90s01r65           1722 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00aa)
                           1723 ;	Peephole 219.b	removed redundant clear
   0387 F0                 1724 	movx	@dptr,a
   0388 90s01r66           1725 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ab)
   038B F0                 1726 	movx	@dptr,a
                           1727 ;	genPointerSet
                           1728 ;     genFarPointerSet
   038C 90s01r67           1729 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ac)
                           1730 ;	Peephole 181	changed mov to clr
                           1731 ;	genPointerSet
                           1732 ;     genFarPointerSet
                           1733 ;	Peephole 181	changed mov to clr
                           1734 ;	Peephole 219.a	removed redundant clear
                           1735 ;	genPointerSet
                           1736 ;     genFarPointerSet
                           1737 ;	Peephole 181	changed mov to clr
                           1738 ;	genPointerSet
                           1739 ;     genFarPointerSet
                           1740 ;	Peephole 181	changed mov to clr
                           1741 ;	Peephole 219.a	removed redundant clear
   038F E4                 1742 	clr	a
   0390 F0                 1743 	movx	@dptr,a
   0391 90s01r68           1744 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ad)
   0394 F0                 1745 	movx	@dptr,a
   0395 90s01r69           1746 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ae)
                           1747 ;	Peephole 219.b	removed redundant clear
   0398 F0                 1748 	movx	@dptr,a
   0399 90s01r6A           1749 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00af)
   039C F0                 1750 	movx	@dptr,a
                           1751 ;	genPointerSet
                           1752 ;     genFarPointerSet
   039D 90s01r6B           1753 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b0)
   03A0 74 01              1754 	mov	a,#0x01
   03A2 F0                 1755 	movx	@dptr,a
                           1756 ;	genPointerSet
                           1757 ;     genFarPointerSet
   03A3 90s01r6C           1758 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b1)
   03A6 74 01              1759 	mov	a,#0x01
   03A8 F0                 1760 	movx	@dptr,a
                           1761 ;	genPointerSet
                           1762 ;     genFarPointerSet
   03A9 90s01r6D           1763 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b2)
   03AC 74 01              1764 	mov	a,#0x01
   03AE F0                 1765 	movx	@dptr,a
                           1766 ;	genPointerSet
                           1767 ;     genFarPointerSet
   03AF 90s01r6E           1768 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b3)
   03B2 74 01              1769 	mov	a,#0x01
   03B4 F0                 1770 	movx	@dptr,a
                           1771 ;	genPointerSet
                           1772 ;     genFarPointerSet
   03B5 90s01r6F           1773 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b4)
                           1774 ;	Peephole 181	changed mov to clr
                           1775 ;	genPointerSet
                           1776 ;     genFarPointerSet
                           1777 ;	Peephole 181	changed mov to clr
                           1778 ;	Peephole 219.a	removed redundant clear
                           1779 ;	genPointerSet
                           1780 ;     genFarPointerSet
                           1781 ;	Peephole 181	changed mov to clr
                           1782 ;	genPointerSet
                           1783 ;     genFarPointerSet
                           1784 ;	Peephole 181	changed mov to clr
                           1785 ;	Peephole 219.a	removed redundant clear
   03B8 E4                 1786 	clr	a
   03B9 F0                 1787 	movx	@dptr,a
   03BA 90s01r70           1788 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b5)
   03BD F0                 1789 	movx	@dptr,a
   03BE 90s01r71           1790 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b6)
                           1791 ;	Peephole 219.b	removed redundant clear
   03C1 F0                 1792 	movx	@dptr,a
   03C2 90s01r72           1793 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b7)
   03C5 F0                 1794 	movx	@dptr,a
                           1795 ;	genPointerSet
                           1796 ;     genFarPointerSet
   03C6 90s01r73           1797 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b8)
                           1798 ;	Peephole 181	changed mov to clr
                           1799 ;	genPointerSet
                           1800 ;     genFarPointerSet
                           1801 ;	Peephole 181	changed mov to clr
                           1802 ;	Peephole 219.a	removed redundant clear
                           1803 ;	genPointerSet
                           1804 ;     genFarPointerSet
                           1805 ;	Peephole 181	changed mov to clr
   03C9 E4                 1806 	clr	a
   03CA F0                 1807 	movx	@dptr,a
   03CB 90s01r74           1808 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00b9)
   03CE F0                 1809 	movx	@dptr,a
   03CF 90s01r75           1810 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ba)
                           1811 ;	Peephole 219.b	removed redundant clear
   03D2 F0                 1812 	movx	@dptr,a
                           1813 ;	genPointerSet
                           1814 ;     genFarPointerSet
   03D3 90s01r76           1815 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bb)
   03D6 74 10              1816 	mov	a,#0x10
   03D8 F0                 1817 	movx	@dptr,a
                           1818 ;	genPointerSet
                           1819 ;     genFarPointerSet
   03D9 90s01r77           1820 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bc)
   03DC 74 18              1821 	mov	a,#0x18
   03DE F0                 1822 	movx	@dptr,a
                           1823 ;	genPointerSet
                           1824 ;     genFarPointerSet
   03DF 90s01r78           1825 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bd)
   03E2 74 0C              1826 	mov	a,#0x0C
   03E4 F0                 1827 	movx	@dptr,a
                           1828 ;	genPointerSet
                           1829 ;     genFarPointerSet
   03E5 90s01r79           1830 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00be)
   03E8 74 06              1831 	mov	a,#0x06
   03EA F0                 1832 	movx	@dptr,a
                           1833 ;	genPointerSet
                           1834 ;     genFarPointerSet
   03EB 90s01r7A           1835 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00bf)
   03EE 74 03              1836 	mov	a,#0x03
   03F0 F0                 1837 	movx	@dptr,a
                           1838 ;	genPointerSet
                           1839 ;     genFarPointerSet
   03F1 90s01r7B           1840 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c0)
   03F4 74 1F              1841 	mov	a,#0x1F
   03F6 F0                 1842 	movx	@dptr,a
                           1843 ;	genPointerSet
                           1844 ;     genFarPointerSet
   03F7 90s01r7C           1845 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c1)
   03FA 74 1F              1846 	mov	a,#0x1F
   03FC F0                 1847 	movx	@dptr,a
                           1848 ;	genPointerSet
                           1849 ;     genFarPointerSet
   03FD 90s01r7D           1850 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c2)
                           1851 ;	Peephole 181	changed mov to clr
                           1852 ;	genPointerSet
                           1853 ;     genFarPointerSet
                           1854 ;	Peephole 181	changed mov to clr
                           1855 ;	Peephole 219.a	removed redundant clear
                           1856 ;	genPointerSet
                           1857 ;     genFarPointerSet
                           1858 ;	Peephole 181	changed mov to clr
                           1859 ;	genPointerSet
                           1860 ;     genFarPointerSet
                           1861 ;	Peephole 181	changed mov to clr
                           1862 ;	Peephole 219.a	removed redundant clear
   0400 E4                 1863 	clr	a
   0401 F0                 1864 	movx	@dptr,a
   0402 90s01r7E           1865 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c3)
   0405 F0                 1866 	movx	@dptr,a
   0406 90s01r7F           1867 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c4)
                           1868 ;	Peephole 219.b	removed redundant clear
   0409 F0                 1869 	movx	@dptr,a
   040A 90s01r80           1870 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c5)
   040D F0                 1871 	movx	@dptr,a
                           1872 ;	genPointerSet
                           1873 ;     genFarPointerSet
   040E 90s01r81           1874 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c6)
                           1875 ;	Peephole 181	changed mov to clr
   0411 E4                 1876 	clr	a
   0412 F0                 1877 	movx	@dptr,a
                           1878 ;	genPointerSet
                           1879 ;     genFarPointerSet
   0413 90s01r82           1880 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c7)
   0416 74 1F              1881 	mov	a,#0x1F
   0418 F0                 1882 	movx	@dptr,a
                           1883 ;	genPointerSet
                           1884 ;     genFarPointerSet
   0419 90s01r83           1885 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c8)
   041C 74 1E              1886 	mov	a,#0x1E
   041E F0                 1887 	movx	@dptr,a
                           1888 ;	genPointerSet
                           1889 ;     genFarPointerSet
   041F 90s01r84           1890 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00c9)
   0422 74 1E              1891 	mov	a,#0x1E
   0424 F0                 1892 	movx	@dptr,a
                           1893 ;	genPointerSet
                           1894 ;     genFarPointerSet
   0425 90s01r85           1895 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ca)
                           1896 ;	Peephole 181	changed mov to clr
                           1897 ;	genPointerSet
                           1898 ;     genFarPointerSet
                           1899 ;	Peephole 181	changed mov to clr
                           1900 ;	Peephole 219.a	removed redundant clear
                           1901 ;	genPointerSet
                           1902 ;     genFarPointerSet
                           1903 ;	Peephole 181	changed mov to clr
                           1904 ;	genPointerSet
                           1905 ;     genFarPointerSet
                           1906 ;	Peephole 181	changed mov to clr
                           1907 ;	Peephole 219.a	removed redundant clear
   0428 E4                 1908 	clr	a
   0429 F0                 1909 	movx	@dptr,a
   042A 90s01r86           1910 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cb)
   042D F0                 1911 	movx	@dptr,a
   042E 90s01r87           1912 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cc)
                           1913 ;	Peephole 219.b	removed redundant clear
   0431 F0                 1914 	movx	@dptr,a
   0432 90s01r88           1915 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cd)
   0435 F0                 1916 	movx	@dptr,a
                           1917 ;	genPointerSet
                           1918 ;     genFarPointerSet
   0436 90s01r89           1919 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00ce)
                           1920 ;	Peephole 181	changed mov to clr
   0439 E4                 1921 	clr	a
   043A F0                 1922 	movx	@dptr,a
                           1923 ;	genPointerSet
                           1924 ;     genFarPointerSet
   043B 90s01r8A           1925 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00cf)
   043E 74 1F              1926 	mov	a,#0x1F
   0440 F0                 1927 	movx	@dptr,a
                           1928 ;	genPointerSet
                           1929 ;     genFarPointerSet
   0441 90s01r8B           1930 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d0)
   0444 74 01              1931 	mov	a,#0x01
   0446 F0                 1932 	movx	@dptr,a
                           1933 ;	genPointerSet
                           1934 ;     genFarPointerSet
   0447 90s01r8C           1935 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d1)
   044A 74 01              1936 	mov	a,#0x01
   044C F0                 1937 	movx	@dptr,a
                           1938 ;	genPointerSet
                           1939 ;     genFarPointerSet
   044D 90s01r8D           1940 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d2)
   0450 74 01              1941 	mov	a,#0x01
   0452 F0                 1942 	movx	@dptr,a
                           1943 ;	genPointerSet
                           1944 ;     genFarPointerSet
   0453 90s01r8E           1945 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d3)
   0456 74 03              1946 	mov	a,#0x03
   0458 F0                 1947 	movx	@dptr,a
                           1948 ;	genPointerSet
                           1949 ;     genFarPointerSet
   0459 90s01r8F           1950 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d4)
   045C 74 06              1951 	mov	a,#0x06
   045E F0                 1952 	movx	@dptr,a
                           1953 ;	genPointerSet
                           1954 ;     genFarPointerSet
   045F 90s01r90           1955 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d5)
   0462 74 0C              1956 	mov	a,#0x0C
   0464 F0                 1957 	movx	@dptr,a
                           1958 ;	genPointerSet
                           1959 ;     genFarPointerSet
   0465 90s01r91           1960 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d6)
   0468 74 18              1961 	mov	a,#0x18
   046A F0                 1962 	movx	@dptr,a
                           1963 ;	genPointerSet
                           1964 ;     genFarPointerSet
   046B 90s01r92           1965 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d7)
   046E 74 10              1966 	mov	a,#0x10
   0470 F0                 1967 	movx	@dptr,a
                           1968 ;	genPointerSet
                           1969 ;     genFarPointerSet
   0471 90s01r93           1970 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d8)
                           1971 ;	Peephole 181	changed mov to clr
                           1972 ;	genPointerSet
                           1973 ;     genFarPointerSet
                           1974 ;	Peephole 181	changed mov to clr
                           1975 ;	Peephole 219.a	removed redundant clear
                           1976 ;	genPointerSet
                           1977 ;     genFarPointerSet
                           1978 ;	Peephole 181	changed mov to clr
                           1979 ;	genPointerSet
                           1980 ;     genFarPointerSet
                           1981 ;	Peephole 181	changed mov to clr
                           1982 ;	Peephole 219.a	removed redundant clear
   0474 E4                 1983 	clr	a
   0475 F0                 1984 	movx	@dptr,a
   0476 90s01r94           1985 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00d9)
   0479 F0                 1986 	movx	@dptr,a
   047A 90s01r95           1987 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00da)
                           1988 ;	Peephole 219.b	removed redundant clear
   047D F0                 1989 	movx	@dptr,a
   047E 90s01r96           1990 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00db)
   0481 F0                 1991 	movx	@dptr,a
                           1992 ;	genPointerSet
                           1993 ;     genFarPointerSet
   0482 90s01r97           1994 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00dc)
                           1995 ;	Peephole 181	changed mov to clr
                           1996 ;	genPointerSet
                           1997 ;     genFarPointerSet
                           1998 ;	Peephole 181	changed mov to clr
                           1999 ;	Peephole 219.a	removed redundant clear
                           2000 ;	genPointerSet
                           2001 ;     genFarPointerSet
                           2002 ;	Peephole 181	changed mov to clr
                           2003 ;	genPointerSet
                           2004 ;     genFarPointerSet
                           2005 ;	Peephole 181	changed mov to clr
                           2006 ;	Peephole 219.a	removed redundant clear
   0485 E4                 2007 	clr	a
   0486 F0                 2008 	movx	@dptr,a
   0487 90s01r98           2009 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00dd)
   048A F0                 2010 	movx	@dptr,a
   048B 90s01r99           2011 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00de)
                           2012 ;	Peephole 219.b	removed redundant clear
   048E F0                 2013 	movx	@dptr,a
   048F 90s01r9A           2014 	mov	dptr,#(_lcd_cu_boulder_cu_boulder_array_1_1 + 0x00df)
   0492 F0                 2015 	movx	@dptr,a
                           2016 ;--------------------------------------------------------
                           2017 ; Home
                           2018 ;--------------------------------------------------------
                           2019 	.area HOME    (CODE)
                           2020 	.area CSEG    (CODE)
                           2021 ;--------------------------------------------------------
                           2022 ; code
                           2023 ;--------------------------------------------------------
                           2024 	.area CSEG    (CODE)
                           2025 ;------------------------------------------------------------
                           2026 ;Allocation info for local variables in function 'lcd_print_number'
                           2027 ;------------------------------------------------------------
                           2028 ;sloc0                     Allocated with name '_lcd_print_number_sloc0_1_0'
                           2029 ;sloc1                     Allocated with name '_lcd_print_number_sloc1_1_0'
                           2030 ;sloc2                     Allocated with name '_lcd_print_number_sloc2_1_0'
                           2031 ;sloc3                     Allocated with name '_lcd_print_number_sloc3_1_0'
                           2032 ;display_width             Allocated with name '_lcd_print_number_PARM_2'
                           2033 ;number                    Allocated with name '_lcd_print_number_number_1_1'
                           2034 ;temp_ascii_store          Allocated with name '_lcd_print_number_temp_ascii_store_1_1'
                           2035 ;temp_data                 Allocated with name '_lcd_print_number_temp_data_1_1'
                           2036 ;counter                   Allocated with name '_lcd_print_number_counter_1_1'
                           2037 ;value_check               Allocated with name '_lcd_print_number_value_check_1_1'
                           2038 ;------------------------------------------------------------
                    0000   2039 	G$lcd_print_number$0$0 ==.
                    0000   2040 	C$lcd.c$19$0$0 ==.
                           2041 ;	lcd.c:19: void lcd_print_number(__xdata int32_t number,__xdata uint8_t display_width)
                           2042 ;	-----------------------------------------
                           2043 ;	 function lcd_print_number
                           2044 ;	-----------------------------------------
   0000                    2045 _lcd_print_number:
                    0002   2046 	ar2 = 0x02
                    0003   2047 	ar3 = 0x03
                    0004   2048 	ar4 = 0x04
                    0005   2049 	ar5 = 0x05
                    0006   2050 	ar6 = 0x06
                    0007   2051 	ar7 = 0x07
                    0000   2052 	ar0 = 0x00
                    0001   2053 	ar1 = 0x01
                           2054 ;	genReceive
   0000 AA 82              2055 	mov	r2,dpl
   0002 AB 83              2056 	mov	r3,dph
   0004 AC F0              2057 	mov	r4,b
   0006 FD                 2058 	mov	r5,a
   0007 90s00r09           2059 	mov	dptr,#_lcd_print_number_number_1_1
   000A EA                 2060 	mov	a,r2
   000B F0                 2061 	movx	@dptr,a
   000C A3                 2062 	inc	dptr
   000D EB                 2063 	mov	a,r3
   000E F0                 2064 	movx	@dptr,a
   000F A3                 2065 	inc	dptr
   0010 EC                 2066 	mov	a,r4
   0011 F0                 2067 	movx	@dptr,a
   0012 A3                 2068 	inc	dptr
   0013 ED                 2069 	mov	a,r5
   0014 F0                 2070 	movx	@dptr,a
                    0015   2071 	C$lcd.c$24$1$1 ==.
                           2072 ;	lcd.c:24: for(counter=display_width;counter>1;counter--)
                           2073 ;	genAssign
   0015 90s00r08           2074 	mov	dptr,#_lcd_print_number_PARM_2
   0018 E0                 2075 	movx	a,@dptr
   0019 F5*00              2076 	mov	_lcd_print_number_sloc0_1_0,a
                           2077 ;	genAssign
   001B 90s00r09           2078 	mov	dptr,#_lcd_print_number_number_1_1
   001E E0                 2079 	movx	a,@dptr
   001F FB                 2080 	mov	r3,a
   0020 A3                 2081 	inc	dptr
   0021 E0                 2082 	movx	a,@dptr
   0022 FC                 2083 	mov	r4,a
   0023 A3                 2084 	inc	dptr
   0024 E0                 2085 	movx	a,@dptr
   0025 FD                 2086 	mov	r5,a
   0026 A3                 2087 	inc	dptr
   0027 E0                 2088 	movx	a,@dptr
   0028 FE                 2089 	mov	r6,a
                           2090 ;	genAssign
   0029 8B 07              2091 	mov	ar7,r3
   002B 8C 00              2092 	mov	ar0,r4
   002D 8D 01              2093 	mov	ar1,r5
   002F 8E 02              2094 	mov	ar2,r6
                           2095 ;	genCmpGt
                           2096 ;	genCmp
   0031 C3                 2097 	clr	c
   0032 74 09              2098 	mov	a,#0x09
   0034 9F                 2099 	subb	a,r7
                           2100 ;	Peephole 181	changed mov to clr
   0035 E4                 2101 	clr	a
   0036 98                 2102 	subb	a,r0
                           2103 ;	Peephole 181	changed mov to clr
   0037 E4                 2104 	clr	a
   0038 99                 2105 	subb	a,r1
                           2106 ;	Peephole 181	changed mov to clr
   0039 E4                 2107 	clr	a
   003A 9A                 2108 	subb	a,r2
   003B E4                 2109 	clr	a
   003C 33                 2110 	rlc	a
   003D F5*01              2111 	mov	_lcd_print_number_sloc1_1_0,a
                           2112 ;	genAssign
   003F 8B 07              2113 	mov	ar7,r3
   0041 8C 00              2114 	mov	ar0,r4
   0043 8D 01              2115 	mov	ar1,r5
   0045 8E 02              2116 	mov	ar2,r6
                           2117 ;	genCmpGt
                           2118 ;	genCmp
   0047 C3                 2119 	clr	c
   0048 74 63              2120 	mov	a,#0x63
   004A 9F                 2121 	subb	a,r7
                           2122 ;	Peephole 181	changed mov to clr
   004B E4                 2123 	clr	a
   004C 98                 2124 	subb	a,r0
                           2125 ;	Peephole 181	changed mov to clr
   004D E4                 2126 	clr	a
   004E 99                 2127 	subb	a,r1
                           2128 ;	Peephole 181	changed mov to clr
   004F E4                 2129 	clr	a
   0050 9A                 2130 	subb	a,r2
   0051 E4                 2131 	clr	a
   0052 33                 2132 	rlc	a
   0053 FA                 2133 	mov	r2,a
                           2134 ;	genAssign
                           2135 ;	genCmpGt
                           2136 ;	genCmp
   0054 C3                 2137 	clr	c
   0055 74 E7              2138 	mov	a,#0xE7
   0057 9B                 2139 	subb	a,r3
   0058 74 03              2140 	mov	a,#0x03
   005A 9C                 2141 	subb	a,r4
                           2142 ;	Peephole 181	changed mov to clr
   005B E4                 2143 	clr	a
   005C 9D                 2144 	subb	a,r5
                           2145 ;	Peephole 181	changed mov to clr
   005D E4                 2146 	clr	a
   005E 9E                 2147 	subb	a,r6
   005F E4                 2148 	clr	a
   0060 33                 2149 	rlc	a
   0061 FB                 2150 	mov	r3,a
                           2151 ;	genAssign
   0062 AC*00              2152 	mov	r4,_lcd_print_number_sloc0_1_0
   0064                    2153 00114$:
                           2154 ;	genCmpGt
                           2155 ;	genCmp
   0064 C3                 2156 	clr	c
                           2157 ;	Peephole 159	avoided xrl during execution
   0065 74 81              2158 	mov	a,#(0x01 ^ 0x80)
   0067 8C F0              2159 	mov	b,r4
   0069 63 F0 80           2160 	xrl	b,#0x80
   006C 95 F0              2161 	subb	a,b
                           2162 ;	genIfxJump
                           2163 ;	Peephole 108.a	removed ljmp by inverse jump logic
   006E 50 3F              2164 	jnc	00132$
                           2165 ;	Peephole 300	removed redundant label 00139$
                    0070   2166 	C$lcd.c$26$2$2 ==.
                           2167 ;	lcd.c:26: lcd_busy_wait();
                           2168 ;	genCall
   0070 C0 02              2169 	push	ar2
   0072 C0 03              2170 	push	ar3
   0074 C0 04              2171 	push	ar4
   0076 12s02r59           2172 	lcall	_lcd_busy_wait
   0079 D0 04              2173 	pop	ar4
   007B D0 03              2174 	pop	ar3
   007D D0 02              2175 	pop	ar2
                    007F   2176 	C$lcd.c$27$2$2 ==.
                           2177 ;	lcd.c:27: switch(counter)
                           2178 ;	genCmpEq
                           2179 ;	gencjneshort
   007F BC 02 02           2180 	cjne	r4,#0x02,00140$
                           2181 ;	Peephole 112.b	changed ljmp to sjmp
   0082 80 1E              2182 	sjmp	00107$
   0084                    2183 00140$:
                           2184 ;	genCmpEq
                           2185 ;	gencjneshort
   0084 BC 03 02           2186 	cjne	r4,#0x03,00141$
                           2187 ;	Peephole 112.b	changed ljmp to sjmp
   0087 80 0E              2188 	sjmp	00104$
   0089                    2189 00141$:
                           2190 ;	genCmpEq
                           2191 ;	gencjneshort
                           2192 ;	Peephole 112.b	changed ljmp to sjmp
                           2193 ;	Peephole 198.b	optimized misc jump sequence
   0089 BC 04 20           2194 	cjne	r4,#0x04,00116$
                           2195 ;	Peephole 200.b	removed redundant sjmp
                           2196 ;	Peephole 300	removed redundant label 00142$
                           2197 ;	Peephole 300	removed redundant label 00143$
                    008C   2198 	C$lcd.c$32$4$4 ==.
                           2199 ;	lcd.c:32: if(number<=value_check)
                           2200 ;	genIfx
   008C EB                 2201 	mov	a,r3
                           2202 ;	genIfxJump
                           2203 ;	Peephole 108.b	removed ljmp by inverse jump logic
   008D 70 1D              2204 	jnz	00116$
                           2205 ;	Peephole 300	removed redundant label 00144$
                    008F   2206 	C$lcd.c$34$5$5 ==.
                           2207 ;	lcd.c:34: *(lcd_data_write_address) = '0';
                           2208 ;	genAssign
                           2209 ;	Peephole 182.b	used 16 bit load of dptr
   008F 90 A0 00           2210 	mov	dptr,#0xA000
                           2211 ;	genPointerSet
                           2212 ;     genFarPointerSet
   0092 74 30              2213 	mov	a,#0x30
   0094 F0                 2214 	movx	@dptr,a
                    0095   2215 	C$lcd.c$36$4$4 ==.
                           2216 ;	lcd.c:36: break;
                    0095   2217 	C$lcd.c$39$3$3 ==.
                           2218 ;	lcd.c:39: case 3:
                           2219 ;	Peephole 112.b	changed ljmp to sjmp
   0095 80 15              2220 	sjmp	00116$
   0097                    2221 00104$:
                    0097   2222 	C$lcd.c$42$4$6 ==.
                           2223 ;	lcd.c:42: if(number<=value_check)
                           2224 ;	genIfx
   0097 EA                 2225 	mov	a,r2
                           2226 ;	genIfxJump
                           2227 ;	Peephole 108.b	removed ljmp by inverse jump logic
   0098 70 12              2228 	jnz	00116$
                           2229 ;	Peephole 300	removed redundant label 00145$
                    009A   2230 	C$lcd.c$44$5$7 ==.
                           2231 ;	lcd.c:44: *(lcd_data_write_address) = '0';
                           2232 ;	genAssign
                           2233 ;	Peephole 182.b	used 16 bit load of dptr
   009A 90 A0 00           2234 	mov	dptr,#0xA000
                           2235 ;	genPointerSet
                           2236 ;     genFarPointerSet
   009D 74 30              2237 	mov	a,#0x30
   009F F0                 2238 	movx	@dptr,a
                    00A0   2239 	C$lcd.c$46$4$6 ==.
                           2240 ;	lcd.c:46: break;
                    00A0   2241 	C$lcd.c$49$3$3 ==.
                           2242 ;	lcd.c:49: case 2:
                           2243 ;	Peephole 112.b	changed ljmp to sjmp
   00A0 80 0A              2244 	sjmp	00116$
   00A2                    2245 00107$:
                    00A2   2246 	C$lcd.c$52$4$8 ==.
                           2247 ;	lcd.c:52: if(number<=value_check)
                           2248 ;	genIfx
   00A2 E5*01              2249 	mov	a,_lcd_print_number_sloc1_1_0
                           2250 ;	genIfxJump
                           2251 ;	Peephole 108.b	removed ljmp by inverse jump logic
   00A4 70 06              2252 	jnz	00116$
                           2253 ;	Peephole 300	removed redundant label 00146$
                    00A6   2254 	C$lcd.c$54$5$9 ==.
                           2255 ;	lcd.c:54: *(lcd_data_write_address) = '0';
                           2256 ;	genAssign
                           2257 ;	Peephole 182.b	used 16 bit load of dptr
   00A6 90 A0 00           2258 	mov	dptr,#0xA000
                           2259 ;	genPointerSet
                           2260 ;     genFarPointerSet
   00A9 74 30              2261 	mov	a,#0x30
   00AB F0                 2262 	movx	@dptr,a
                    00AC   2263 	C$lcd.c$58$2$2 ==.
                           2264 ;	lcd.c:58: }
   00AC                    2265 00116$:
                    00AC   2266 	C$lcd.c$24$1$1 ==.
                           2267 ;	lcd.c:24: for(counter=display_width;counter>1;counter--)
                           2268 ;	genMinus
                           2269 ;	genMinusDec
   00AC 1C                 2270 	dec	r4
                    00AD   2271 	C$lcd.c$60$1$1 ==.
                           2272 ;	lcd.c:60: do
                           2273 ;	Peephole 112.b	changed ljmp to sjmp
   00AD 80 B5              2274 	sjmp	00114$
   00AF                    2275 00132$:
                           2276 ;	genAssign
   00AF 8C 02              2277 	mov	ar2,r4
   00B1                    2278 00111$:
                    00B1   2279 	C$lcd.c$62$2$10 ==.
                           2280 ;	lcd.c:62: temp_ascii_store[counter]='0'+ number%10;
                           2281 ;	genPlus
                           2282 ;	Peephole 236.g	used r2 instead of ar2
   00B1 EA                 2283 	mov	a,r2
   00B2 24r0D              2284 	add	a,#_lcd_print_number_temp_ascii_store_1_1
   00B4 FE                 2285 	mov	r6,a
                           2286 ;	Peephole 181	changed mov to clr
   00B5 E4                 2287 	clr	a
   00B6 34s00              2288 	addc	a,#(_lcd_print_number_temp_ascii_store_1_1 >> 8)
   00B8 FF                 2289 	mov	r7,a
                           2290 ;	genAssign
   00B9 90s00r09           2291 	mov	dptr,#_lcd_print_number_number_1_1
   00BC E0                 2292 	movx	a,@dptr
   00BD F5*02              2293 	mov	_lcd_print_number_sloc3_1_0,a
   00BF A3                 2294 	inc	dptr
   00C0 E0                 2295 	movx	a,@dptr
   00C1 F5*03              2296 	mov	(_lcd_print_number_sloc3_1_0 + 1),a
   00C3 A3                 2297 	inc	dptr
   00C4 E0                 2298 	movx	a,@dptr
   00C5 F5*04              2299 	mov	(_lcd_print_number_sloc3_1_0 + 2),a
   00C7 A3                 2300 	inc	dptr
   00C8 E0                 2301 	movx	a,@dptr
   00C9 F5*05              2302 	mov	(_lcd_print_number_sloc3_1_0 + 3),a
                           2303 ;	genAssign
   00CB 90s00r00           2304 	mov	dptr,#__modslong_PARM_2
   00CE 74 0A              2305 	mov	a,#0x0A
   00D0 F0                 2306 	movx	@dptr,a
   00D1 E4                 2307 	clr	a
   00D2 A3                 2308 	inc	dptr
   00D3 F0                 2309 	movx	@dptr,a
   00D4 A3                 2310 	inc	dptr
   00D5 F0                 2311 	movx	@dptr,a
   00D6 A3                 2312 	inc	dptr
   00D7 F0                 2313 	movx	@dptr,a
                           2314 ;	genCall
   00D8 85*02 82           2315 	mov	dpl,_lcd_print_number_sloc3_1_0
   00DB 85*03 83           2316 	mov	dph,(_lcd_print_number_sloc3_1_0 + 1)
   00DE 85*04 F0           2317 	mov	b,(_lcd_print_number_sloc3_1_0 + 2)
   00E1 E5*05              2318 	mov	a,(_lcd_print_number_sloc3_1_0 + 3)
   00E3 C0 02              2319 	push	ar2
   00E5 C0 06              2320 	push	ar6
   00E7 C0 07              2321 	push	ar7
   00E9 12s00r00           2322 	lcall	__modslong
   00EC A9 82              2323 	mov	r1,dpl
   00EE AB 83              2324 	mov	r3,dph
   00F0 AC F0              2325 	mov	r4,b
   00F2 FD                 2326 	mov	r5,a
   00F3 D0 07              2327 	pop	ar7
   00F5 D0 06              2328 	pop	ar6
   00F7 D0 02              2329 	pop	ar2
                           2330 ;	genCast
                           2331 ;	genPlus
                           2332 ;     genPlusIncr
   00F9 74 30              2333 	mov	a,#0x30
                           2334 ;	Peephole 236.a	used r1 instead of ar1
   00FB 29                 2335 	add	a,r1
                           2336 ;	genPointerSet
                           2337 ;     genFarPointerSet
   00FC F9                 2338 	mov	r1,a
   00FD 8E 82              2339 	mov	dpl,r6
   00FF 8F 83              2340 	mov	dph,r7
                           2341 ;	Peephole 136	removed redundant move
   0101 F0                 2342 	movx	@dptr,a
                    0102   2343 	C$lcd.c$63$1$1 ==.
                           2344 ;	lcd.c:63: number/=10;
                           2345 ;	genAssign
   0102 90s00r00           2346 	mov	dptr,#__divslong_PARM_2
   0105 74 0A              2347 	mov	a,#0x0A
   0107 F0                 2348 	movx	@dptr,a
   0108 E4                 2349 	clr	a
   0109 A3                 2350 	inc	dptr
   010A F0                 2351 	movx	@dptr,a
   010B A3                 2352 	inc	dptr
   010C F0                 2353 	movx	@dptr,a
   010D A3                 2354 	inc	dptr
   010E F0                 2355 	movx	@dptr,a
                           2356 ;	genCall
   010F 85*02 82           2357 	mov	dpl,_lcd_print_number_sloc3_1_0
   0112 85*03 83           2358 	mov	dph,(_lcd_print_number_sloc3_1_0 + 1)
   0115 85*04 F0           2359 	mov	b,(_lcd_print_number_sloc3_1_0 + 2)
   0118 E5*05              2360 	mov	a,(_lcd_print_number_sloc3_1_0 + 3)
   011A C0 02              2361 	push	ar2
   011C 12s00r00           2362 	lcall	__divslong
   011F AB 82              2363 	mov	r3,dpl
   0121 AC 83              2364 	mov	r4,dph
   0123 AD F0              2365 	mov	r5,b
   0125 FE                 2366 	mov	r6,a
   0126 D0 02              2367 	pop	ar2
                           2368 ;	genAssign
   0128 90s00r09           2369 	mov	dptr,#_lcd_print_number_number_1_1
   012B EB                 2370 	mov	a,r3
   012C F0                 2371 	movx	@dptr,a
   012D A3                 2372 	inc	dptr
   012E EC                 2373 	mov	a,r4
   012F F0                 2374 	movx	@dptr,a
   0130 A3                 2375 	inc	dptr
   0131 ED                 2376 	mov	a,r5
   0132 F0                 2377 	movx	@dptr,a
   0133 A3                 2378 	inc	dptr
   0134 EE                 2379 	mov	a,r6
   0135 F0                 2380 	movx	@dptr,a
                    0136   2381 	C$lcd.c$64$2$10 ==.
                           2382 ;	lcd.c:64: counter++;
                           2383 ;	genPlus
                           2384 ;     genPlusIncr
   0136 0A                 2385 	inc	r2
                    0137   2386 	C$lcd.c$65$1$1 ==.
                           2387 ;	lcd.c:65: }while(number>0);
                           2388 ;	genAssign
   0137 90s00r09           2389 	mov	dptr,#_lcd_print_number_number_1_1
   013A E0                 2390 	movx	a,@dptr
   013B FB                 2391 	mov	r3,a
   013C A3                 2392 	inc	dptr
   013D E0                 2393 	movx	a,@dptr
   013E FC                 2394 	mov	r4,a
   013F A3                 2395 	inc	dptr
   0140 E0                 2396 	movx	a,@dptr
   0141 FD                 2397 	mov	r5,a
   0142 A3                 2398 	inc	dptr
   0143 E0                 2399 	movx	a,@dptr
   0144 FE                 2400 	mov	r6,a
                           2401 ;	genCmpGt
                           2402 ;	genCmp
   0145 C3                 2403 	clr	c
                           2404 ;	Peephole 181	changed mov to clr
   0146 E4                 2405 	clr	a
   0147 9B                 2406 	subb	a,r3
                           2407 ;	Peephole 181	changed mov to clr
   0148 E4                 2408 	clr	a
   0149 9C                 2409 	subb	a,r4
                           2410 ;	Peephole 181	changed mov to clr
   014A E4                 2411 	clr	a
   014B 9D                 2412 	subb	a,r5
                           2413 ;	Peephole 159	avoided xrl during execution
   014C 74 80              2414 	mov	a,#(0x00 ^ 0x80)
   014E 8E F0              2415 	mov	b,r6
   0150 63 F0 80           2416 	xrl	b,#0x80
   0153 95 F0              2417 	subb	a,b
                           2418 ;	genIfxJump
   0155 50 03              2419 	jnc	00147$
   0157 02s00rB1           2420 	ljmp	00111$
   015A                    2421 00147$:
                    015A   2422 	C$lcd.c$66$1$1 ==.
                           2423 ;	lcd.c:66: for(counter-=1;counter>0;counter--)
                           2424 ;	genMinus
                           2425 ;	genMinusDec
   015A EA                 2426 	mov	a,r2
   015B 14                 2427 	dec	a
                           2428 ;	genAssign
   015C 90s00r17           2429 	mov	dptr,#_lcd_print_number_counter_1_1
   015F F0                 2430 	movx	@dptr,a
                           2431 ;	genAssign
   0160 90s00r17           2432 	mov	dptr,#_lcd_print_number_counter_1_1
   0163 E0                 2433 	movx	a,@dptr
   0164 FA                 2434 	mov	r2,a
   0165                    2435 00118$:
                           2436 ;	genCmpGt
                           2437 ;	genCmp
   0165 C3                 2438 	clr	c
                           2439 ;	Peephole 159	avoided xrl during execution
   0166 74 80              2440 	mov	a,#(0x00 ^ 0x80)
   0168 8A F0              2441 	mov	b,r2
   016A 63 F0 80           2442 	xrl	b,#0x80
   016D 95 F0              2443 	subb	a,b
                           2444 ;	genIfxJump
                           2445 ;	Peephole 108.a	removed ljmp by inverse jump logic
   016F 50 1F              2446 	jnc	00121$
                           2447 ;	Peephole 300	removed redundant label 00148$
                    0171   2448 	C$lcd.c$68$2$11 ==.
                           2449 ;	lcd.c:68: lcd_busy_wait();
                           2450 ;	genCall
   0171 C0 02              2451 	push	ar2
   0173 12s02r59           2452 	lcall	_lcd_busy_wait
   0176 D0 02              2453 	pop	ar2
                    0178   2454 	C$lcd.c$69$2$11 ==.
                           2455 ;	lcd.c:69: *(lcd_data_write_address) = temp_ascii_store[counter];
                           2456 ;	genAssign
   0178 7B 00              2457 	mov	r3,#0x00
   017A 7C A0              2458 	mov	r4,#0xA0
                           2459 ;	genPlus
                           2460 ;	Peephole 236.g	used r2 instead of ar2
   017C EA                 2461 	mov	a,r2
   017D 24r0D              2462 	add	a,#_lcd_print_number_temp_ascii_store_1_1
   017F F5 82              2463 	mov	dpl,a
                           2464 ;	Peephole 181	changed mov to clr
   0181 E4                 2465 	clr	a
   0182 34s00              2466 	addc	a,#(_lcd_print_number_temp_ascii_store_1_1 >> 8)
   0184 F5 83              2467 	mov	dph,a
                           2468 ;	genPointerGet
                           2469 ;	genFarPointerGet
   0186 E0                 2470 	movx	a,@dptr
                           2471 ;	genPointerSet
                           2472 ;     genFarPointerSet
   0187 FD                 2473 	mov	r5,a
   0188 8B 82              2474 	mov	dpl,r3
   018A 8C 83              2475 	mov	dph,r4
                           2476 ;	Peephole 136	removed redundant move
   018C F0                 2477 	movx	@dptr,a
                    018D   2478 	C$lcd.c$66$1$1 ==.
                           2479 ;	lcd.c:66: for(counter-=1;counter>0;counter--)
                           2480 ;	genMinus
                           2481 ;	genMinusDec
   018D 1A                 2482 	dec	r2
                           2483 ;	Peephole 112.b	changed ljmp to sjmp
   018E 80 D5              2484 	sjmp	00118$
   0190                    2485 00121$:
                    0190   2486 	C$lcd.c$71$1$1 ==.
                           2487 ;	lcd.c:71: return;
                           2488 ;	genRet
                           2489 ;	Peephole 300	removed redundant label 00122$
                    0190   2490 	C$lcd.c$72$1$1 ==.
                    0190   2491 	XG$lcd_print_number$0$0 ==.
   0190 22                 2492 	ret
                           2493 ;------------------------------------------------------------
                           2494 ;Allocation info for local variables in function 'lcd_init'
                           2495 ;------------------------------------------------------------
                           2496 ;------------------------------------------------------------
                    0191   2497 	G$lcd_init$0$0 ==.
                    0191   2498 	C$lcd.c$78$1$1 ==.
                           2499 ;	lcd.c:78: void lcd_init(void)
                           2500 ;	-----------------------------------------
                           2501 ;	 function lcd_init
                           2502 ;	-----------------------------------------
   0191                    2503 _lcd_init:
                    0191   2504 	C$lcd.c$80$1$1 ==.
                           2505 ;	lcd.c:80: ms_delay(15);
                           2506 ;	genCall
                           2507 ;	Peephole 3.a	changed mov to clr
                           2508 ;	Peephole 3.b	changed mov to clr
                           2509 ;	Peephole 182.d	used 16 bit load of dptr
   0191 90 00 0F           2510 	mov	dptr,#(0x0F&0x00ff)
   0194 E4                 2511 	clr	a
   0195 F5 F0              2512 	mov	b,a
   0197 12s00r00           2513 	lcall	_ms_delay
                    019A   2514 	C$lcd.c$81$1$1 ==.
                           2515 ;	lcd.c:81: *(lcd_command_write_address) = lcd_unlock;
                           2516 ;	genAssign
                           2517 ;	Peephole 182.b	used 16 bit load of dptr
   019A 90 80 00           2518 	mov	dptr,#0x8000
                           2519 ;	genPointerSet
                           2520 ;     genFarPointerSet
   019D 74 30              2521 	mov	a,#0x30
   019F F0                 2522 	movx	@dptr,a
                    01A0   2523 	C$lcd.c$82$1$1 ==.
                           2524 ;	lcd.c:82: ms_delay(5);
                           2525 ;	genCall
                           2526 ;	Peephole 3.a	changed mov to clr
                           2527 ;	Peephole 3.b	changed mov to clr
                           2528 ;	Peephole 182.d	used 16 bit load of dptr
   01A0 90 00 05           2529 	mov	dptr,#(0x05&0x00ff)
   01A3 E4                 2530 	clr	a
   01A4 F5 F0              2531 	mov	b,a
   01A6 12s00r00           2532 	lcall	_ms_delay
                    01A9   2533 	C$lcd.c$83$1$1 ==.
                           2534 ;	lcd.c:83: *(lcd_command_write_address) = lcd_unlock;
                           2535 ;	genAssign
                           2536 ;	Peephole 182.b	used 16 bit load of dptr
   01A9 90 80 00           2537 	mov	dptr,#0x8000
                           2538 ;	genPointerSet
                           2539 ;     genFarPointerSet
   01AC 74 30              2540 	mov	a,#0x30
   01AE F0                 2541 	movx	@dptr,a
                    01AF   2542 	C$lcd.c$84$1$1 ==.
                           2543 ;	lcd.c:84: ms_delay(1);
                           2544 ;	genCall
                           2545 ;	Peephole 3.a	changed mov to clr
                           2546 ;	Peephole 3.b	changed mov to clr
                           2547 ;	Peephole 182.d	used 16 bit load of dptr
   01AF 90 00 01           2548 	mov	dptr,#(0x01&0x00ff)
   01B2 E4                 2549 	clr	a
   01B3 F5 F0              2550 	mov	b,a
   01B5 12s00r00           2551 	lcall	_ms_delay
                    01B8   2552 	C$lcd.c$85$1$1 ==.
                           2553 ;	lcd.c:85: *(lcd_command_write_address) = lcd_unlock;
                           2554 ;	genAssign
                           2555 ;	Peephole 182.b	used 16 bit load of dptr
   01B8 90 80 00           2556 	mov	dptr,#0x8000
                           2557 ;	genPointerSet
                           2558 ;     genFarPointerSet
   01BB 74 30              2559 	mov	a,#0x30
   01BD F0                 2560 	movx	@dptr,a
                    01BE   2561 	C$lcd.c$86$1$1 ==.
                           2562 ;	lcd.c:86: lcd_command_write(lcd_function_set);
                           2563 ;	genCall
   01BE 75 82 38           2564 	mov	dpl,#0x38
   01C1 12s07r6F           2565 	lcall	_lcd_command_write
                    01C4   2566 	C$lcd.c$87$1$1 ==.
                           2567 ;	lcd.c:87: lcd_command_write(lcd_display_off);
                           2568 ;	genCall
   01C4 75 82 08           2569 	mov	dpl,#0x08
   01C7 12s07r6F           2570 	lcall	_lcd_command_write
                    01CA   2571 	C$lcd.c$88$1$1 ==.
                           2572 ;	lcd.c:88: lcd_command_write(lcd_display_on);
                           2573 ;	genCall
   01CA 75 82 0F           2574 	mov	dpl,#0x0F
   01CD 12s07r6F           2575 	lcall	_lcd_command_write
                    01D0   2576 	C$lcd.c$89$1$1 ==.
                           2577 ;	lcd.c:89: lcd_command_write(lcd_entry_mode);
                           2578 ;	genCall
   01D0 75 82 06           2579 	mov	dpl,#0x06
   01D3 12s07r6F           2580 	lcall	_lcd_command_write
                    01D6   2581 	C$lcd.c$90$1$1 ==.
                           2582 ;	lcd.c:90: lcd_command_write(lcd_clear_display);
                           2583 ;	genCall
   01D6 75 82 01           2584 	mov	dpl,#0x01
                    01D9   2585 	C$lcd.c$91$1$1 ==.
                           2586 ;	lcd.c:91: return;
                           2587 ;	genRet
                    01D9   2588 	C$lcd.c$92$1$1 ==.
                    01D9   2589 	XG$lcd_init$0$0 ==.
                           2590 ;	Peephole 253.b	replaced lcall/ret with ljmp
   01D9 02s07r6F           2591 	ljmp	_lcd_command_write
                           2592 ;
                           2593 ;------------------------------------------------------------
                           2594 ;Allocation info for local variables in function 'lcd_row_shifter'
                           2595 ;------------------------------------------------------------
                           2596 ;lcd_row_base_address      Allocated with name '_lcd_row_shifter_lcd_row_base_address_1_1'
                           2597 ;------------------------------------------------------------
                    01DC   2598 	G$lcd_row_shifter$0$0 ==.
                    01DC   2599 	C$lcd.c$98$1$1 ==.
                           2600 ;	lcd.c:98: void lcd_row_shifter(void)
                           2601 ;	-----------------------------------------
                           2602 ;	 function lcd_row_shifter
                           2603 ;	-----------------------------------------
   01DC                    2604 _lcd_row_shifter:
                    01DC   2605 	C$lcd.c$100$1$1 ==.
                           2606 ;	lcd.c:100: __xdata uint8_t lcd_row_base_address[]={lcd_row_0_base_address,lcd_row_1_base_address,lcd_row_2_base_address,lcd_row_3_base_address};
                           2607 ;	genPointerSet
                           2608 ;     genFarPointerSet
   01DC 90s00r18           2609 	mov	dptr,#_lcd_row_shifter_lcd_row_base_address_1_1
   01DF 74 80              2610 	mov	a,#0x80
   01E1 F0                 2611 	movx	@dptr,a
                           2612 ;	genPointerSet
                           2613 ;     genFarPointerSet
   01E2 90s00r19           2614 	mov	dptr,#(_lcd_row_shifter_lcd_row_base_address_1_1 + 0x0001)
   01E5 74 C0              2615 	mov	a,#0xC0
   01E7 F0                 2616 	movx	@dptr,a
                           2617 ;	genPointerSet
                           2618 ;     genFarPointerSet
   01E8 90s00r1A           2619 	mov	dptr,#(_lcd_row_shifter_lcd_row_base_address_1_1 + 0x0002)
   01EB 74 90              2620 	mov	a,#0x90
   01ED F0                 2621 	movx	@dptr,a
                           2622 ;	genPointerSet
                           2623 ;     genFarPointerSet
   01EE 90s00r1B           2624 	mov	dptr,#(_lcd_row_shifter_lcd_row_base_address_1_1 + 0x0003)
   01F1 74 D0              2625 	mov	a,#0xD0
   01F3 F0                 2626 	movx	@dptr,a
                    01F4   2627 	C$lcd.c$101$1$1 ==.
                           2628 ;	lcd.c:101: lcd_busy_wait();
                           2629 ;	genCall
   01F4 12s02r59           2630 	lcall	_lcd_busy_wait
                    01F7   2631 	C$lcd.c$102$1$1 ==.
                           2632 ;	lcd.c:102: if((lcd_current_row == 3)&&(lcd_current_column == 8))
                           2633 ;	genAssign
   01F7 90s00r02           2634 	mov	dptr,#_lcd_current_row
   01FA E0                 2635 	movx	a,@dptr
   01FB FA                 2636 	mov	r2,a
                           2637 ;	genCmpEq
                           2638 ;	gencjneshort
                           2639 ;	Peephole 112.b	changed ljmp to sjmp
                           2640 ;	Peephole 198.b	optimized misc jump sequence
   01FC BA 03 0F           2641 	cjne	r2,#0x03,00107$
                           2642 ;	Peephole 200.b	removed redundant sjmp
                           2643 ;	Peephole 300	removed redundant label 00116$
                           2644 ;	Peephole 300	removed redundant label 00117$
                           2645 ;	genAssign
   01FF 90s00r01           2646 	mov	dptr,#_lcd_current_column
   0202 E0                 2647 	movx	a,@dptr
   0203 FB                 2648 	mov	r3,a
                           2649 ;	genCmpEq
                           2650 ;	gencjneshort
                           2651 ;	Peephole 112.b	changed ljmp to sjmp
                           2652 ;	Peephole 198.b	optimized misc jump sequence
   0204 BB 08 07           2653 	cjne	r3,#0x08,00107$
                           2654 ;	Peephole 200.b	removed redundant sjmp
                           2655 ;	Peephole 300	removed redundant label 00118$
                           2656 ;	Peephole 300	removed redundant label 00119$
                    0207   2657 	C$lcd.c$104$2$2 ==.
                           2658 ;	lcd.c:104: lcd_current_row = 0;
                           2659 ;	genAssign
   0207 90s00r02           2660 	mov	dptr,#_lcd_current_row
                           2661 ;	Peephole 181	changed mov to clr
   020A E4                 2662 	clr	a
   020B F0                 2663 	movx	@dptr,a
                           2664 ;	Peephole 112.b	changed ljmp to sjmp
   020C 80 1F              2665 	sjmp	00108$
   020E                    2666 00107$:
                    020E   2667 	C$lcd.c$106$1$1 ==.
                           2668 ;	lcd.c:106: else if ((lcd_current_row > 3))
                           2669 ;	genCmpGt
                           2670 ;	genCmp
                           2671 ;	genIfxJump
                           2672 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           2673 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   020E EA                 2674 	mov	a,r2
   020F 24 FC              2675 	add	a,#0xff - 0x03
   0211 50 0E              2676 	jnc	00104$
                           2677 ;	Peephole 300	removed redundant label 00120$
                    0213   2678 	C$lcd.c$108$2$3 ==.
                           2679 ;	lcd.c:108: lcd_current_row = eeprom_read(lcd_current_row_address);
                           2680 ;	genCall
                           2681 ;	Peephole 182.b	used 16 bit load of dptr
   0213 90 05 55           2682 	mov	dptr,#0x0555
   0216 12s00r00           2683 	lcall	_eeprom_read
   0219 E5 82              2684 	mov	a,dpl
                           2685 ;	genAssign
   021B 90s00r02           2686 	mov	dptr,#_lcd_current_row
   021E F0                 2687 	movx	@dptr,a
                           2688 ;	Peephole 112.b	changed ljmp to sjmp
   021F 80 0C              2689 	sjmp	00108$
   0221                    2690 00104$:
                    0221   2691 	C$lcd.c$110$1$1 ==.
                           2692 ;	lcd.c:110: else if (lcd_current_row < 3)
                           2693 ;	genCmpLt
                           2694 ;	genCmp
   0221 BA 03 00           2695 	cjne	r2,#0x03,00121$
   0224                    2696 00121$:
                           2697 ;	genIfxJump
                           2698 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0224 50 07              2699 	jnc	00108$
                           2700 ;	Peephole 300	removed redundant label 00122$
                    0226   2701 	C$lcd.c$112$2$4 ==.
                           2702 ;	lcd.c:112: lcd_current_row++;
                           2703 ;	genPlus
   0226 90s00r02           2704 	mov	dptr,#_lcd_current_row
                           2705 ;     genPlusIncr
   0229 74 01              2706 	mov	a,#0x01
                           2707 ;	Peephole 236.a	used r2 instead of ar2
   022B 2A                 2708 	add	a,r2
   022C F0                 2709 	movx	@dptr,a
   022D                    2710 00108$:
                    022D   2711 	C$lcd.c$114$1$1 ==.
                           2712 ;	lcd.c:114: lcd_busy_wait();
                           2713 ;	genCall
   022D 12s02r59           2714 	lcall	_lcd_busy_wait
                    0230   2715 	C$lcd.c$115$1$1 ==.
                           2716 ;	lcd.c:115: lcd_go_to_x_y(lcd_current_row,0);
                           2717 ;	genAssign
   0230 90s00r02           2718 	mov	dptr,#_lcd_current_row
   0233 E0                 2719 	movx	a,@dptr
   0234 FA                 2720 	mov	r2,a
                           2721 ;	genAssign
   0235 90s00r4F           2722 	mov	dptr,#_lcd_go_to_x_y_PARM_2
                           2723 ;	Peephole 181	changed mov to clr
   0238 E4                 2724 	clr	a
   0239 F0                 2725 	movx	@dptr,a
                           2726 ;	genCall
   023A 8A 82              2727 	mov	dpl,r2
   023C 12s05rA5           2728 	lcall	_lcd_go_to_x_y
                    023F   2729 	C$lcd.c$116$1$1 ==.
                           2730 ;	lcd.c:116: eeprom_write(lcd_current_row_address,lcd_current_row);
                           2731 ;	genAssign
   023F 90s00r02           2732 	mov	dptr,#_lcd_current_row
   0242 E0                 2733 	movx	a,@dptr
                           2734 ;	genAssign
   0243 FA                 2735 	mov	r2,a
   0244 90s00r00           2736 	mov	dptr,#_eeprom_write_PARM_2
                           2737 ;	Peephole 100	removed redundant mov
   0247 F0                 2738 	movx	@dptr,a
                           2739 ;	genCall
                           2740 ;	Peephole 182.b	used 16 bit load of dptr
   0248 90 05 55           2741 	mov	dptr,#0x0555
   024B 12s00r00           2742 	lcall	_eeprom_write
                    024E   2743 	C$lcd.c$117$1$1 ==.
                           2744 ;	lcd.c:117: eeprom_write(lcd_current_column_address,0);
                           2745 ;	genAssign
   024E 90s00r00           2746 	mov	dptr,#_eeprom_write_PARM_2
                           2747 ;	Peephole 181	changed mov to clr
   0251 E4                 2748 	clr	a
   0252 F0                 2749 	movx	@dptr,a
                           2750 ;	genCall
                           2751 ;	Peephole 182.b	used 16 bit load of dptr
   0253 90 07 77           2752 	mov	dptr,#0x0777
                    0256   2753 	C$lcd.c$118$1$1 ==.
                           2754 ;	lcd.c:118: return;
                           2755 ;	genRet
                    0256   2756 	C$lcd.c$119$1$1 ==.
                    0256   2757 	XG$lcd_row_shifter$0$0 ==.
                           2758 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0256 02s00r00           2759 	ljmp	_eeprom_write
                           2760 ;
                           2761 ;------------------------------------------------------------
                           2762 ;Allocation info for local variables in function 'lcd_busy_wait'
                           2763 ;------------------------------------------------------------
                           2764 ;------------------------------------------------------------
                    0259   2765 	G$lcd_busy_wait$0$0 ==.
                    0259   2766 	C$lcd.c$125$1$1 ==.
                           2767 ;	lcd.c:125: void lcd_busy_wait(void)
                           2768 ;	-----------------------------------------
                           2769 ;	 function lcd_busy_wait
                           2770 ;	-----------------------------------------
   0259                    2771 _lcd_busy_wait:
                    0259   2772 	C$lcd.c$127$1$1 ==.
                           2773 ;	lcd.c:127: while(*lcd_command_read_address & lcd_busy_wait_mask);
   0259                    2774 00101$:
                           2775 ;	genPointerGet
                           2776 ;	genFarPointerGet
                           2777 ;	Peephole 182.b	used 16 bit load of dptr
   0259 90 90 00           2778 	mov	dptr,#0x9000
   025C E0                 2779 	movx	a,@dptr
                           2780 ;	genAnd
   025D FA                 2781 	mov	r2,a
                           2782 ;	Peephole 105	removed redundant mov
                           2783 ;	genIfxJump
                           2784 ;	Peephole 108.e	removed ljmp by inverse jump logic
   025E 20 E7 F8           2785 	jb	acc.7,00101$
                           2786 ;	Peephole 300	removed redundant label 00108$
                    0261   2787 	C$lcd.c$128$1$1 ==.
                           2788 ;	lcd.c:128: return;
                           2789 ;	genRet
                           2790 ;	Peephole 300	removed redundant label 00104$
                    0261   2791 	C$lcd.c$129$1$1 ==.
                    0261   2792 	XG$lcd_busy_wait$0$0 ==.
   0261 22                 2793 	ret
                           2794 ;------------------------------------------------------------
                           2795 ;Allocation info for local variables in function 'lcd_ddram_flush'
                           2796 ;------------------------------------------------------------
                           2797 ;ddram_flush_txt           Allocated with name '_lcd_ddram_flush_ddram_flush_txt_1_1'
                           2798 ;count                     Allocated with name '_lcd_ddram_flush_count_1_1'
                           2799 ;i                         Allocated with name '_lcd_ddram_flush_i_1_1'
                           2800 ;temp_storage              Allocated with name '_lcd_ddram_flush_temp_storage_1_1'
                           2801 ;data_byte                 Allocated with name '_lcd_ddram_flush_data_byte_1_1'
                           2802 ;address                   Allocated with name '_lcd_ddram_flush_address_1_1'
                           2803 ;------------------------------------------------------------
                    0262   2804 	G$lcd_ddram_flush$0$0 ==.
                    0262   2805 	C$lcd.c$135$1$1 ==.
                           2806 ;	lcd.c:135: void lcd_ddram_flush(void)
                           2807 ;	-----------------------------------------
                           2808 ;	 function lcd_ddram_flush
                           2809 ;	-----------------------------------------
   0262                    2810 _lcd_ddram_flush:
                    0262   2811 	C$lcd.c$137$1$1 ==.
                           2812 ;	lcd.c:137: __xdata uint8_t ddram_flush_txt[]="\n\rDDRAM Hexdump";
                           2813 ;	genPointerSet
                           2814 ;     genFarPointerSet
   0262 90s00r1C           2815 	mov	dptr,#_lcd_ddram_flush_ddram_flush_txt_1_1
   0265 74 0A              2816 	mov	a,#0x0A
   0267 F0                 2817 	movx	@dptr,a
                           2818 ;	genPointerSet
                           2819 ;     genFarPointerSet
   0268 90s00r1D           2820 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0001)
   026B 74 0D              2821 	mov	a,#0x0D
   026D F0                 2822 	movx	@dptr,a
                           2823 ;	genPointerSet
                           2824 ;     genFarPointerSet
   026E 90s00r1E           2825 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0002)
   0271 74 44              2826 	mov	a,#0x44
   0273 F0                 2827 	movx	@dptr,a
                           2828 ;	genPointerSet
                           2829 ;     genFarPointerSet
   0274 90s00r1F           2830 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0003)
   0277 74 44              2831 	mov	a,#0x44
   0279 F0                 2832 	movx	@dptr,a
                           2833 ;	genPointerSet
                           2834 ;     genFarPointerSet
   027A 90s00r20           2835 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0004)
   027D 74 52              2836 	mov	a,#0x52
   027F F0                 2837 	movx	@dptr,a
                           2838 ;	genPointerSet
                           2839 ;     genFarPointerSet
   0280 90s00r21           2840 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0005)
   0283 74 41              2841 	mov	a,#0x41
   0285 F0                 2842 	movx	@dptr,a
                           2843 ;	genPointerSet
                           2844 ;     genFarPointerSet
   0286 90s00r22           2845 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0006)
   0289 74 4D              2846 	mov	a,#0x4D
   028B F0                 2847 	movx	@dptr,a
                           2848 ;	genPointerSet
                           2849 ;     genFarPointerSet
   028C 90s00r23           2850 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0007)
   028F 74 20              2851 	mov	a,#0x20
   0291 F0                 2852 	movx	@dptr,a
                           2853 ;	genPointerSet
                           2854 ;     genFarPointerSet
   0292 90s00r24           2855 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0008)
   0295 74 48              2856 	mov	a,#0x48
   0297 F0                 2857 	movx	@dptr,a
                           2858 ;	genPointerSet
                           2859 ;     genFarPointerSet
   0298 90s00r25           2860 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x0009)
   029B 74 65              2861 	mov	a,#0x65
   029D F0                 2862 	movx	@dptr,a
                           2863 ;	genPointerSet
                           2864 ;     genFarPointerSet
   029E 90s00r26           2865 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000a)
   02A1 74 78              2866 	mov	a,#0x78
   02A3 F0                 2867 	movx	@dptr,a
                           2868 ;	genPointerSet
                           2869 ;     genFarPointerSet
   02A4 90s00r27           2870 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000b)
   02A7 74 64              2871 	mov	a,#0x64
   02A9 F0                 2872 	movx	@dptr,a
                           2873 ;	genPointerSet
                           2874 ;     genFarPointerSet
   02AA 90s00r28           2875 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000c)
   02AD 74 75              2876 	mov	a,#0x75
   02AF F0                 2877 	movx	@dptr,a
                           2878 ;	genPointerSet
                           2879 ;     genFarPointerSet
   02B0 90s00r29           2880 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000d)
   02B3 74 6D              2881 	mov	a,#0x6D
   02B5 F0                 2882 	movx	@dptr,a
                           2883 ;	genPointerSet
                           2884 ;     genFarPointerSet
   02B6 90s00r2A           2885 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000e)
   02B9 74 70              2886 	mov	a,#0x70
   02BB F0                 2887 	movx	@dptr,a
                           2888 ;	genPointerSet
                           2889 ;     genFarPointerSet
   02BC 90s00r2B           2890 	mov	dptr,#(_lcd_ddram_flush_ddram_flush_txt_1_1 + 0x000f)
                           2891 ;	Peephole 181	changed mov to clr
   02BF E4                 2892 	clr	a
   02C0 F0                 2893 	movx	@dptr,a
                    02C1   2894 	C$lcd.c$141$1$1 ==.
                           2895 ;	lcd.c:141: lcd_command_write(temp_storage);
                           2896 ;	genCall
   02C1 75 82 80           2897 	mov	dpl,#0x80
   02C4 12s07r6F           2898 	lcall	_lcd_command_write
                    02C7   2899 	C$lcd.c$142$1$1 ==.
                           2900 ;	lcd.c:142: my_printf(ddram_flush_txt);
                           2901 ;	genCall
                           2902 ;	Peephole 182.a	used 16 bit load of DPTR
   02C7 90s00r1C           2903 	mov	dptr,#_lcd_ddram_flush_ddram_flush_txt_1_1
   02CA 12s00r00           2904 	lcall	_my_printf
                    02CD   2905 	C$lcd.c$143$1$1 ==.
                           2906 ;	lcd.c:143: for(count=0;count<5;count++)
                           2907 ;	genAssign
   02CD 7A 80              2908 	mov	r2,#0x80
   02CF 7B 00              2909 	mov	r3,#0x00
                           2910 ;	genAssign
   02D1 7C 00              2911 	mov	r4,#0x00
   02D3                    2912 00105$:
                           2913 ;	genCmpLt
                           2914 ;	genCmp
   02D3 BC 05 00           2915 	cjne	r4,#0x05,00117$
   02D6                    2916 00117$:
                           2917 ;	genIfxJump
   02D6 40 03              2918 	jc	00118$
   02D8 02s03r8B           2919 	ljmp	00108$
   02DB                    2920 00118$:
                    02DB   2921 	C$lcd.c$145$2$2 ==.
                           2922 ;	lcd.c:145: putchar('\n');
                           2923 ;	genCall
   02DB 75 82 0A           2924 	mov	dpl,#0x0A
   02DE C0 02              2925 	push	ar2
   02E0 C0 03              2926 	push	ar3
   02E2 C0 04              2927 	push	ar4
   02E4 12s00r00           2928 	lcall	_putchar
   02E7 D0 04              2929 	pop	ar4
   02E9 D0 03              2930 	pop	ar3
   02EB D0 02              2931 	pop	ar2
                    02ED   2932 	C$lcd.c$146$2$2 ==.
                           2933 ;	lcd.c:146: putchar('\r');
                           2934 ;	genCall
   02ED 75 82 0D           2935 	mov	dpl,#0x0D
   02F0 C0 02              2936 	push	ar2
   02F2 C0 03              2937 	push	ar3
   02F4 C0 04              2938 	push	ar4
   02F6 12s00r00           2939 	lcall	_putchar
   02F9 D0 04              2940 	pop	ar4
   02FB D0 03              2941 	pop	ar3
   02FD D0 02              2942 	pop	ar2
                    02FF   2943 	C$lcd.c$147$2$2 ==.
                           2944 ;	lcd.c:147: print_number_hex(address,2);
                           2945 ;	genCast
   02FF 8A 05              2946 	mov	ar5,r2
   0301 8B 06              2947 	mov	ar6,r3
   0303 7F 00              2948 	mov	r7,#0x00
   0305 78 00              2949 	mov	r0,#0x00
                           2950 ;	genAssign
   0307 90s00r00           2951 	mov	dptr,#_print_number_hex_PARM_2
   030A 74 02              2952 	mov	a,#0x02
   030C F0                 2953 	movx	@dptr,a
                           2954 ;	genCall
   030D 8D 82              2955 	mov	dpl,r5
   030F 8E 83              2956 	mov	dph,r6
   0311 8F F0              2957 	mov	b,r7
   0313 E8                 2958 	mov	a,r0
   0314 C0 02              2959 	push	ar2
   0316 C0 03              2960 	push	ar3
   0318 C0 04              2961 	push	ar4
   031A 12s00r00           2962 	lcall	_print_number_hex
   031D D0 04              2963 	pop	ar4
   031F D0 03              2964 	pop	ar3
   0321 D0 02              2965 	pop	ar2
                    0323   2966 	C$lcd.c$148$2$2 ==.
                           2967 ;	lcd.c:148: putchar(':');
                           2968 ;	genCall
   0323 75 82 3A           2969 	mov	dpl,#0x3A
   0326 C0 02              2970 	push	ar2
   0328 C0 03              2971 	push	ar3
   032A C0 04              2972 	push	ar4
   032C 12s00r00           2973 	lcall	_putchar
   032F D0 04              2974 	pop	ar4
   0331 D0 03              2975 	pop	ar3
   0333 D0 02              2976 	pop	ar2
                    0335   2977 	C$lcd.c$149$1$1 ==.
                           2978 ;	lcd.c:149: for(i=0;i<16;i++)
                           2979 ;	genAssign
   0335 7D 00              2980 	mov	r5,#0x00
   0337                    2981 00101$:
                           2982 ;	genCmpLt
                           2983 ;	genCmp
   0337 BD 10 00           2984 	cjne	r5,#0x10,00119$
   033A                    2985 00119$:
                           2986 ;	genIfxJump
                           2987 ;	Peephole 108.a	removed ljmp by inverse jump logic
   033A 50 44              2988 	jnc	00104$
                           2989 ;	Peephole 300	removed redundant label 00120$
                    033C   2990 	C$lcd.c$151$3$3 ==.
                           2991 ;	lcd.c:151: putchar(32);//space
                           2992 ;	genCall
   033C 75 82 20           2993 	mov	dpl,#0x20
   033F C0 02              2994 	push	ar2
   0341 C0 03              2995 	push	ar3
   0343 C0 04              2996 	push	ar4
   0345 C0 05              2997 	push	ar5
   0347 12s00r00           2998 	lcall	_putchar
   034A D0 05              2999 	pop	ar5
   034C D0 04              3000 	pop	ar4
   034E D0 03              3001 	pop	ar3
   0350 D0 02              3002 	pop	ar2
                    0352   3003 	C$lcd.c$152$3$3 ==.
                           3004 ;	lcd.c:152: data_byte = *(lcd_data_read_address);
                           3005 ;	genPointerGet
                           3006 ;	genFarPointerGet
                           3007 ;	Peephole 182.b	used 16 bit load of dptr
   0352 90 B0 00           3008 	mov	dptr,#0xB000
   0355 E0                 3009 	movx	a,@dptr
   0356 FE                 3010 	mov	r6,a
                    0357   3011 	C$lcd.c$153$3$3 ==.
                           3012 ;	lcd.c:153: print_number_hex(data_byte,2);
                           3013 ;	genCast
   0357 7F 00              3014 	mov	r7,#0x00
   0359 78 00              3015 	mov	r0,#0x00
   035B 79 00              3016 	mov	r1,#0x00
                           3017 ;	genAssign
   035D 90s00r00           3018 	mov	dptr,#_print_number_hex_PARM_2
   0360 74 02              3019 	mov	a,#0x02
   0362 F0                 3020 	movx	@dptr,a
                           3021 ;	genCall
   0363 8E 82              3022 	mov	dpl,r6
   0365 8F 83              3023 	mov	dph,r7
   0367 88 F0              3024 	mov	b,r0
   0369 E9                 3025 	mov	a,r1
   036A C0 02              3026 	push	ar2
   036C C0 03              3027 	push	ar3
   036E C0 04              3028 	push	ar4
   0370 C0 05              3029 	push	ar5
   0372 12s00r00           3030 	lcall	_print_number_hex
   0375 D0 05              3031 	pop	ar5
   0377 D0 04              3032 	pop	ar4
   0379 D0 03              3033 	pop	ar3
   037B D0 02              3034 	pop	ar2
                    037D   3035 	C$lcd.c$149$2$2 ==.
                           3036 ;	lcd.c:149: for(i=0;i<16;i++)
                           3037 ;	genPlus
                           3038 ;     genPlusIncr
   037D 0D                 3039 	inc	r5
                           3040 ;	Peephole 112.b	changed ljmp to sjmp
   037E 80 B7              3041 	sjmp	00101$
   0380                    3042 00104$:
                    0380   3043 	C$lcd.c$155$2$2 ==.
                           3044 ;	lcd.c:155: address+=16;
                           3045 ;	genPlus
                           3046 ;     genPlusIncr
   0380 74 10              3047 	mov	a,#0x10
                           3048 ;	Peephole 236.a	used r2 instead of ar2
   0382 2A                 3049 	add	a,r2
   0383 FA                 3050 	mov	r2,a
                           3051 ;	Peephole 181	changed mov to clr
   0384 E4                 3052 	clr	a
                           3053 ;	Peephole 236.b	used r3 instead of ar3
   0385 3B                 3054 	addc	a,r3
   0386 FB                 3055 	mov	r3,a
                    0387   3056 	C$lcd.c$143$1$1 ==.
                           3057 ;	lcd.c:143: for(count=0;count<5;count++)
                           3058 ;	genPlus
                           3059 ;     genPlusIncr
   0387 0C                 3060 	inc	r4
   0388 02s02rD3           3061 	ljmp	00105$
   038B                    3062 00108$:
                    038B   3063 	C$lcd.c$157$1$1 ==.
                           3064 ;	lcd.c:157: lcd_go_to_x_y(lcd_current_row,lcd_current_column);
                           3065 ;	genAssign
   038B 90s00r02           3066 	mov	dptr,#_lcd_current_row
   038E E0                 3067 	movx	a,@dptr
   038F FA                 3068 	mov	r2,a
                           3069 ;	genAssign
   0390 90s00r01           3070 	mov	dptr,#_lcd_current_column
   0393 E0                 3071 	movx	a,@dptr
                           3072 ;	genAssign
   0394 FB                 3073 	mov	r3,a
   0395 90s00r4F           3074 	mov	dptr,#_lcd_go_to_x_y_PARM_2
                           3075 ;	Peephole 100	removed redundant mov
   0398 F0                 3076 	movx	@dptr,a
                           3077 ;	genCall
   0399 8A 82              3078 	mov	dpl,r2
                    039B   3079 	C$lcd.c$158$1$1 ==.
                           3080 ;	lcd.c:158: return;
                           3081 ;	genRet
                    039B   3082 	C$lcd.c$159$1$1 ==.
                    039B   3083 	XG$lcd_ddram_flush$0$0 ==.
                           3084 ;	Peephole 253.b	replaced lcall/ret with ljmp
   039B 02s05rA5           3085 	ljmp	_lcd_go_to_x_y
                           3086 ;
                           3087 ;------------------------------------------------------------
                           3088 ;Allocation info for local variables in function 'lcd_cgram_flush'
                           3089 ;------------------------------------------------------------
                           3090 ;cgram_flush_txt           Allocated with name '_lcd_cgram_flush_cgram_flush_txt_1_1'
                           3091 ;count                     Allocated with name '_lcd_cgram_flush_count_1_1'
                           3092 ;i                         Allocated with name '_lcd_cgram_flush_i_1_1'
                           3093 ;temp_storage              Allocated with name '_lcd_cgram_flush_temp_storage_1_1'
                           3094 ;data_byte                 Allocated with name '_lcd_cgram_flush_data_byte_1_1'
                           3095 ;address                   Allocated with name '_lcd_cgram_flush_address_1_1'
                           3096 ;------------------------------------------------------------
                    039E   3097 	G$lcd_cgram_flush$0$0 ==.
                    039E   3098 	C$lcd.c$165$1$1 ==.
                           3099 ;	lcd.c:165: void lcd_cgram_flush(void)
                           3100 ;	-----------------------------------------
                           3101 ;	 function lcd_cgram_flush
                           3102 ;	-----------------------------------------
   039E                    3103 _lcd_cgram_flush:
                    039E   3104 	C$lcd.c$167$1$1 ==.
                           3105 ;	lcd.c:167: __xdata uint8_t cgram_flush_txt[]="\n\rCGRAM Hexdump";
                           3106 ;	genPointerSet
                           3107 ;     genFarPointerSet
   039E 90s00r2C           3108 	mov	dptr,#_lcd_cgram_flush_cgram_flush_txt_1_1
   03A1 74 0A              3109 	mov	a,#0x0A
   03A3 F0                 3110 	movx	@dptr,a
                           3111 ;	genPointerSet
                           3112 ;     genFarPointerSet
   03A4 90s00r2D           3113 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0001)
   03A7 74 0D              3114 	mov	a,#0x0D
   03A9 F0                 3115 	movx	@dptr,a
                           3116 ;	genPointerSet
                           3117 ;     genFarPointerSet
   03AA 90s00r2E           3118 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0002)
   03AD 74 43              3119 	mov	a,#0x43
   03AF F0                 3120 	movx	@dptr,a
                           3121 ;	genPointerSet
                           3122 ;     genFarPointerSet
   03B0 90s00r2F           3123 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0003)
   03B3 74 47              3124 	mov	a,#0x47
   03B5 F0                 3125 	movx	@dptr,a
                           3126 ;	genPointerSet
                           3127 ;     genFarPointerSet
   03B6 90s00r30           3128 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0004)
   03B9 74 52              3129 	mov	a,#0x52
   03BB F0                 3130 	movx	@dptr,a
                           3131 ;	genPointerSet
                           3132 ;     genFarPointerSet
   03BC 90s00r31           3133 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0005)
   03BF 74 41              3134 	mov	a,#0x41
   03C1 F0                 3135 	movx	@dptr,a
                           3136 ;	genPointerSet
                           3137 ;     genFarPointerSet
   03C2 90s00r32           3138 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0006)
   03C5 74 4D              3139 	mov	a,#0x4D
   03C7 F0                 3140 	movx	@dptr,a
                           3141 ;	genPointerSet
                           3142 ;     genFarPointerSet
   03C8 90s00r33           3143 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0007)
   03CB 74 20              3144 	mov	a,#0x20
   03CD F0                 3145 	movx	@dptr,a
                           3146 ;	genPointerSet
                           3147 ;     genFarPointerSet
   03CE 90s00r34           3148 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0008)
   03D1 74 48              3149 	mov	a,#0x48
   03D3 F0                 3150 	movx	@dptr,a
                           3151 ;	genPointerSet
                           3152 ;     genFarPointerSet
   03D4 90s00r35           3153 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x0009)
   03D7 74 65              3154 	mov	a,#0x65
   03D9 F0                 3155 	movx	@dptr,a
                           3156 ;	genPointerSet
                           3157 ;     genFarPointerSet
   03DA 90s00r36           3158 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000a)
   03DD 74 78              3159 	mov	a,#0x78
   03DF F0                 3160 	movx	@dptr,a
                           3161 ;	genPointerSet
                           3162 ;     genFarPointerSet
   03E0 90s00r37           3163 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000b)
   03E3 74 64              3164 	mov	a,#0x64
   03E5 F0                 3165 	movx	@dptr,a
                           3166 ;	genPointerSet
                           3167 ;     genFarPointerSet
   03E6 90s00r38           3168 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000c)
   03E9 74 75              3169 	mov	a,#0x75
   03EB F0                 3170 	movx	@dptr,a
                           3171 ;	genPointerSet
                           3172 ;     genFarPointerSet
   03EC 90s00r39           3173 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000d)
   03EF 74 6D              3174 	mov	a,#0x6D
   03F1 F0                 3175 	movx	@dptr,a
                           3176 ;	genPointerSet
                           3177 ;     genFarPointerSet
   03F2 90s00r3A           3178 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000e)
   03F5 74 70              3179 	mov	a,#0x70
   03F7 F0                 3180 	movx	@dptr,a
                           3181 ;	genPointerSet
                           3182 ;     genFarPointerSet
   03F8 90s00r3B           3183 	mov	dptr,#(_lcd_cgram_flush_cgram_flush_txt_1_1 + 0x000f)
                           3184 ;	Peephole 181	changed mov to clr
   03FB E4                 3185 	clr	a
   03FC F0                 3186 	movx	@dptr,a
                    03FD   3187 	C$lcd.c$172$1$1 ==.
                           3188 ;	lcd.c:172: lcd_command_write(temp_storage);
                           3189 ;	genCall
   03FD 75 82 40           3190 	mov	dpl,#0x40
   0400 12s07r6F           3191 	lcall	_lcd_command_write
                    0403   3192 	C$lcd.c$173$1$1 ==.
                           3193 ;	lcd.c:173: my_printf(cgram_flush_txt);
                           3194 ;	genCall
                           3195 ;	Peephole 182.a	used 16 bit load of DPTR
   0403 90s00r2C           3196 	mov	dptr,#_lcd_cgram_flush_cgram_flush_txt_1_1
   0406 12s00r00           3197 	lcall	_my_printf
                    0409   3198 	C$lcd.c$174$1$1 ==.
                           3199 ;	lcd.c:174: for(count=0; count<4; count++)
                           3200 ;	genAssign
   0409 7A 00              3201 	mov	r2,#0x00
   040B 7B 00              3202 	mov	r3,#0x00
                           3203 ;	genAssign
   040D 7C 00              3204 	mov	r4,#0x00
   040F                    3205 00105$:
                           3206 ;	genCmpLt
                           3207 ;	genCmp
   040F BC 04 00           3208 	cjne	r4,#0x04,00117$
   0412                    3209 00117$:
                           3210 ;	genIfxJump
   0412 40 03              3211 	jc	00118$
   0414 02s04rC7           3212 	ljmp	00108$
   0417                    3213 00118$:
                    0417   3214 	C$lcd.c$176$2$2 ==.
                           3215 ;	lcd.c:176: putchar('\n');
                           3216 ;	genCall
   0417 75 82 0A           3217 	mov	dpl,#0x0A
   041A C0 02              3218 	push	ar2
   041C C0 03              3219 	push	ar3
   041E C0 04              3220 	push	ar4
   0420 12s00r00           3221 	lcall	_putchar
   0423 D0 04              3222 	pop	ar4
   0425 D0 03              3223 	pop	ar3
   0427 D0 02              3224 	pop	ar2
                    0429   3225 	C$lcd.c$177$2$2 ==.
                           3226 ;	lcd.c:177: putchar('\r');
                           3227 ;	genCall
   0429 75 82 0D           3228 	mov	dpl,#0x0D
   042C C0 02              3229 	push	ar2
   042E C0 03              3230 	push	ar3
   0430 C0 04              3231 	push	ar4
   0432 12s00r00           3232 	lcall	_putchar
   0435 D0 04              3233 	pop	ar4
   0437 D0 03              3234 	pop	ar3
   0439 D0 02              3235 	pop	ar2
                    043B   3236 	C$lcd.c$178$2$2 ==.
                           3237 ;	lcd.c:178: print_number_hex(address,2);
                           3238 ;	genCast
   043B 8A 05              3239 	mov	ar5,r2
   043D 8B 06              3240 	mov	ar6,r3
   043F 7F 00              3241 	mov	r7,#0x00
   0441 78 00              3242 	mov	r0,#0x00
                           3243 ;	genAssign
   0443 90s00r00           3244 	mov	dptr,#_print_number_hex_PARM_2
   0446 74 02              3245 	mov	a,#0x02
   0448 F0                 3246 	movx	@dptr,a
                           3247 ;	genCall
   0449 8D 82              3248 	mov	dpl,r5
   044B 8E 83              3249 	mov	dph,r6
   044D 8F F0              3250 	mov	b,r7
   044F E8                 3251 	mov	a,r0
   0450 C0 02              3252 	push	ar2
   0452 C0 03              3253 	push	ar3
   0454 C0 04              3254 	push	ar4
   0456 12s00r00           3255 	lcall	_print_number_hex
   0459 D0 04              3256 	pop	ar4
   045B D0 03              3257 	pop	ar3
   045D D0 02              3258 	pop	ar2
                    045F   3259 	C$lcd.c$179$2$2 ==.
                           3260 ;	lcd.c:179: putchar(':');
                           3261 ;	genCall
   045F 75 82 3A           3262 	mov	dpl,#0x3A
   0462 C0 02              3263 	push	ar2
   0464 C0 03              3264 	push	ar3
   0466 C0 04              3265 	push	ar4
   0468 12s00r00           3266 	lcall	_putchar
   046B D0 04              3267 	pop	ar4
   046D D0 03              3268 	pop	ar3
   046F D0 02              3269 	pop	ar2
                    0471   3270 	C$lcd.c$180$1$1 ==.
                           3271 ;	lcd.c:180: for(i=0;i<16;i++)
                           3272 ;	genAssign
   0471 7D 00              3273 	mov	r5,#0x00
   0473                    3274 00101$:
                           3275 ;	genCmpLt
                           3276 ;	genCmp
   0473 BD 10 00           3277 	cjne	r5,#0x10,00119$
   0476                    3278 00119$:
                           3279 ;	genIfxJump
                           3280 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0476 50 44              3281 	jnc	00104$
                           3282 ;	Peephole 300	removed redundant label 00120$
                    0478   3283 	C$lcd.c$182$3$3 ==.
                           3284 ;	lcd.c:182: putchar(32);//space
                           3285 ;	genCall
   0478 75 82 20           3286 	mov	dpl,#0x20
   047B C0 02              3287 	push	ar2
   047D C0 03              3288 	push	ar3
   047F C0 04              3289 	push	ar4
   0481 C0 05              3290 	push	ar5
   0483 12s00r00           3291 	lcall	_putchar
   0486 D0 05              3292 	pop	ar5
   0488 D0 04              3293 	pop	ar4
   048A D0 03              3294 	pop	ar3
   048C D0 02              3295 	pop	ar2
                    048E   3296 	C$lcd.c$183$3$3 ==.
                           3297 ;	lcd.c:183: data_byte = *(lcd_data_read_address);
                           3298 ;	genPointerGet
                           3299 ;	genFarPointerGet
                           3300 ;	Peephole 182.b	used 16 bit load of dptr
   048E 90 B0 00           3301 	mov	dptr,#0xB000
   0491 E0                 3302 	movx	a,@dptr
   0492 FE                 3303 	mov	r6,a
                    0493   3304 	C$lcd.c$184$3$3 ==.
                           3305 ;	lcd.c:184: print_number_hex(data_byte,2);
                           3306 ;	genCast
   0493 7F 00              3307 	mov	r7,#0x00
   0495 78 00              3308 	mov	r0,#0x00
   0497 79 00              3309 	mov	r1,#0x00
                           3310 ;	genAssign
   0499 90s00r00           3311 	mov	dptr,#_print_number_hex_PARM_2
   049C 74 02              3312 	mov	a,#0x02
   049E F0                 3313 	movx	@dptr,a
                           3314 ;	genCall
   049F 8E 82              3315 	mov	dpl,r6
   04A1 8F 83              3316 	mov	dph,r7
   04A3 88 F0              3317 	mov	b,r0
   04A5 E9                 3318 	mov	a,r1
   04A6 C0 02              3319 	push	ar2
   04A8 C0 03              3320 	push	ar3
   04AA C0 04              3321 	push	ar4
   04AC C0 05              3322 	push	ar5
   04AE 12s00r00           3323 	lcall	_print_number_hex
   04B1 D0 05              3324 	pop	ar5
   04B3 D0 04              3325 	pop	ar4
   04B5 D0 03              3326 	pop	ar3
   04B7 D0 02              3327 	pop	ar2
                    04B9   3328 	C$lcd.c$180$2$2 ==.
                           3329 ;	lcd.c:180: for(i=0;i<16;i++)
                           3330 ;	genPlus
                           3331 ;     genPlusIncr
   04B9 0D                 3332 	inc	r5
                           3333 ;	Peephole 112.b	changed ljmp to sjmp
   04BA 80 B7              3334 	sjmp	00101$
   04BC                    3335 00104$:
                    04BC   3336 	C$lcd.c$186$2$2 ==.
                           3337 ;	lcd.c:186: address+=16;
                           3338 ;	genPlus
                           3339 ;     genPlusIncr
   04BC 74 10              3340 	mov	a,#0x10
                           3341 ;	Peephole 236.a	used r2 instead of ar2
   04BE 2A                 3342 	add	a,r2
   04BF FA                 3343 	mov	r2,a
                           3344 ;	Peephole 181	changed mov to clr
   04C0 E4                 3345 	clr	a
                           3346 ;	Peephole 236.b	used r3 instead of ar3
   04C1 3B                 3347 	addc	a,r3
   04C2 FB                 3348 	mov	r3,a
                    04C3   3349 	C$lcd.c$174$1$1 ==.
                           3350 ;	lcd.c:174: for(count=0; count<4; count++)
                           3351 ;	genPlus
                           3352 ;     genPlusIncr
   04C3 0C                 3353 	inc	r4
   04C4 02s04r0F           3354 	ljmp	00105$
   04C7                    3355 00108$:
                    04C7   3356 	C$lcd.c$188$1$1 ==.
                           3357 ;	lcd.c:188: lcd_go_to_x_y(lcd_current_row,lcd_current_column);
                           3358 ;	genAssign
   04C7 90s00r02           3359 	mov	dptr,#_lcd_current_row
   04CA E0                 3360 	movx	a,@dptr
   04CB FA                 3361 	mov	r2,a
                           3362 ;	genAssign
   04CC 90s00r01           3363 	mov	dptr,#_lcd_current_column
   04CF E0                 3364 	movx	a,@dptr
                           3365 ;	genAssign
   04D0 FB                 3366 	mov	r3,a
   04D1 90s00r4F           3367 	mov	dptr,#_lcd_go_to_x_y_PARM_2
                           3368 ;	Peephole 100	removed redundant mov
   04D4 F0                 3369 	movx	@dptr,a
                           3370 ;	genCall
   04D5 8A 82              3371 	mov	dpl,r2
                    04D7   3372 	C$lcd.c$189$1$1 ==.
                           3373 ;	lcd.c:189: return;
                           3374 ;	genRet
                    04D7   3375 	C$lcd.c$190$1$1 ==.
                    04D7   3376 	XG$lcd_cgram_flush$0$0 ==.
                           3377 ;	Peephole 253.b	replaced lcall/ret with ljmp
   04D7 02s05rA5           3378 	ljmp	_lcd_go_to_x_y
                           3379 ;
                           3380 ;------------------------------------------------------------
                           3381 ;Allocation info for local variables in function 'lcd_go_to_addr'
                           3382 ;------------------------------------------------------------
                           3383 ;address                   Allocated with name '_lcd_go_to_addr_address_1_1'
                           3384 ;invalid_address_txt       Allocated with name '_lcd_go_to_addr_invalid_address_txt_1_1'
                           3385 ;------------------------------------------------------------
                    04DA   3386 	G$lcd_go_to_addr$0$0 ==.
                    04DA   3387 	C$lcd.c$197$1$1 ==.
                           3388 ;	lcd.c:197: void lcd_go_to_addr(__xdata uint8_t address)
                           3389 ;	-----------------------------------------
                           3390 ;	 function lcd_go_to_addr
                           3391 ;	-----------------------------------------
   04DA                    3392 _lcd_go_to_addr:
                           3393 ;	genReceive
   04DA E5 82              3394 	mov	a,dpl
   04DC 90s00r3C           3395 	mov	dptr,#_lcd_go_to_addr_address_1_1
   04DF F0                 3396 	movx	@dptr,a
                    04E0   3397 	C$lcd.c$199$1$1 ==.
                           3398 ;	lcd.c:199: __xdata uint8_t invalid_address_txt[]="\n\rInvalid Address";
                           3399 ;	genPointerSet
                           3400 ;     genFarPointerSet
   04E0 90s00r3D           3401 	mov	dptr,#_lcd_go_to_addr_invalid_address_txt_1_1
   04E3 74 0A              3402 	mov	a,#0x0A
   04E5 F0                 3403 	movx	@dptr,a
                           3404 ;	genPointerSet
                           3405 ;     genFarPointerSet
   04E6 90s00r3E           3406 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0001)
   04E9 74 0D              3407 	mov	a,#0x0D
   04EB F0                 3408 	movx	@dptr,a
                           3409 ;	genPointerSet
                           3410 ;     genFarPointerSet
   04EC 90s00r3F           3411 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0002)
   04EF 74 49              3412 	mov	a,#0x49
   04F1 F0                 3413 	movx	@dptr,a
                           3414 ;	genPointerSet
                           3415 ;     genFarPointerSet
   04F2 90s00r40           3416 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0003)
   04F5 74 6E              3417 	mov	a,#0x6E
   04F7 F0                 3418 	movx	@dptr,a
                           3419 ;	genPointerSet
                           3420 ;     genFarPointerSet
   04F8 90s00r41           3421 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0004)
   04FB 74 76              3422 	mov	a,#0x76
   04FD F0                 3423 	movx	@dptr,a
                           3424 ;	genPointerSet
                           3425 ;     genFarPointerSet
   04FE 90s00r42           3426 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0005)
   0501 74 61              3427 	mov	a,#0x61
   0503 F0                 3428 	movx	@dptr,a
                           3429 ;	genPointerSet
                           3430 ;     genFarPointerSet
   0504 90s00r43           3431 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0006)
   0507 74 6C              3432 	mov	a,#0x6C
   0509 F0                 3433 	movx	@dptr,a
                           3434 ;	genPointerSet
                           3435 ;     genFarPointerSet
   050A 90s00r44           3436 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0007)
   050D 74 69              3437 	mov	a,#0x69
   050F F0                 3438 	movx	@dptr,a
                           3439 ;	genPointerSet
                           3440 ;     genFarPointerSet
   0510 90s00r45           3441 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0008)
   0513 74 64              3442 	mov	a,#0x64
   0515 F0                 3443 	movx	@dptr,a
                           3444 ;	genPointerSet
                           3445 ;     genFarPointerSet
   0516 90s00r46           3446 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0009)
   0519 74 20              3447 	mov	a,#0x20
   051B F0                 3448 	movx	@dptr,a
                           3449 ;	genPointerSet
                           3450 ;     genFarPointerSet
   051C 90s00r47           3451 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000a)
   051F 74 41              3452 	mov	a,#0x41
   0521 F0                 3453 	movx	@dptr,a
                           3454 ;	genPointerSet
                           3455 ;     genFarPointerSet
   0522 90s00r48           3456 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000b)
   0525 74 64              3457 	mov	a,#0x64
   0527 F0                 3458 	movx	@dptr,a
                           3459 ;	genPointerSet
                           3460 ;     genFarPointerSet
   0528 90s00r49           3461 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000c)
   052B 74 64              3462 	mov	a,#0x64
   052D F0                 3463 	movx	@dptr,a
                           3464 ;	genPointerSet
                           3465 ;     genFarPointerSet
   052E 90s00r4A           3466 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000d)
   0531 74 72              3467 	mov	a,#0x72
   0533 F0                 3468 	movx	@dptr,a
                           3469 ;	genPointerSet
                           3470 ;     genFarPointerSet
   0534 90s00r4B           3471 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000e)
   0537 74 65              3472 	mov	a,#0x65
   0539 F0                 3473 	movx	@dptr,a
                           3474 ;	genPointerSet
                           3475 ;     genFarPointerSet
   053A 90s00r4C           3476 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x000f)
   053D 74 73              3477 	mov	a,#0x73
   053F F0                 3478 	movx	@dptr,a
                           3479 ;	genPointerSet
                           3480 ;     genFarPointerSet
   0540 90s00r4D           3481 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0010)
   0543 74 73              3482 	mov	a,#0x73
   0545 F0                 3483 	movx	@dptr,a
                           3484 ;	genPointerSet
                           3485 ;     genFarPointerSet
   0546 90s00r4E           3486 	mov	dptr,#(_lcd_go_to_addr_invalid_address_txt_1_1 + 0x0011)
                           3487 ;	Peephole 181	changed mov to clr
   0549 E4                 3488 	clr	a
   054A F0                 3489 	movx	@dptr,a
                    054B   3490 	C$lcd.c$200$1$1 ==.
                           3491 ;	lcd.c:200: if((address>=0x90&&address<=0x9F)||(address>=0xD0&&address<=0xDF)||(address>=0xC0&&address<=0xCF)||(address>=0x80&&address<=0x8F))
                           3492 ;	genAssign
   054B 90s00r3C           3493 	mov	dptr,#_lcd_go_to_addr_address_1_1
   054E E0                 3494 	movx	a,@dptr
   054F FA                 3495 	mov	r2,a
                           3496 ;	genCmpLt
                           3497 ;	genCmp
   0550 BA 90 00           3498 	cjne	r2,#0x90,00117$
   0553                    3499 00117$:
                           3500 ;	genIfxJump
                           3501 ;	Peephole 112.b	changed ljmp to sjmp
                           3502 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0553 40 05              3503 	jc	00106$
                           3504 ;	Peephole 300	removed redundant label 00118$
                           3505 ;	genCmpGt
                           3506 ;	genCmp
                           3507 ;	genIfxJump
                           3508 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           3509 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0555 EA                 3510 	mov	a,r2
   0556 24 60              3511 	add	a,#0xff - 0x9F
   0558 50 2D              3512 	jnc	00101$
                           3513 ;	Peephole 300	removed redundant label 00119$
   055A                    3514 00106$:
                           3515 ;	genAssign
   055A 90s00r3C           3516 	mov	dptr,#_lcd_go_to_addr_address_1_1
   055D E0                 3517 	movx	a,@dptr
   055E FA                 3518 	mov	r2,a
                           3519 ;	genCmpLt
                           3520 ;	genCmp
   055F BA D0 00           3521 	cjne	r2,#0xD0,00120$
   0562                    3522 00120$:
                           3523 ;	genIfxJump
                           3524 ;	Peephole 112.b	changed ljmp to sjmp
                           3525 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0562 40 05              3526 	jc	00108$
                           3527 ;	Peephole 300	removed redundant label 00121$
                           3528 ;	genCmpGt
                           3529 ;	genCmp
                           3530 ;	genIfxJump
                           3531 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           3532 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0564 EA                 3533 	mov	a,r2
   0565 24 20              3534 	add	a,#0xff - 0xDF
   0567 50 1E              3535 	jnc	00101$
                           3536 ;	Peephole 300	removed redundant label 00122$
   0569                    3537 00108$:
                           3538 ;	genAssign
   0569 90s00r3C           3539 	mov	dptr,#_lcd_go_to_addr_address_1_1
   056C E0                 3540 	movx	a,@dptr
   056D FA                 3541 	mov	r2,a
                           3542 ;	genCmpLt
                           3543 ;	genCmp
   056E BA C0 00           3544 	cjne	r2,#0xC0,00123$
   0571                    3545 00123$:
                           3546 ;	genIfxJump
                           3547 ;	Peephole 112.b	changed ljmp to sjmp
                           3548 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0571 40 05              3549 	jc	00110$
                           3550 ;	Peephole 300	removed redundant label 00124$
                           3551 ;	genCmpGt
                           3552 ;	genCmp
                           3553 ;	genIfxJump
                           3554 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           3555 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0573 EA                 3556 	mov	a,r2
   0574 24 30              3557 	add	a,#0xff - 0xCF
   0576 50 0F              3558 	jnc	00101$
                           3559 ;	Peephole 300	removed redundant label 00125$
   0578                    3560 00110$:
                           3561 ;	genAssign
   0578 90s00r3C           3562 	mov	dptr,#_lcd_go_to_addr_address_1_1
   057B E0                 3563 	movx	a,@dptr
   057C FA                 3564 	mov	r2,a
                           3565 ;	genCmpLt
                           3566 ;	genCmp
   057D BA 80 00           3567 	cjne	r2,#0x80,00126$
   0580                    3568 00126$:
                           3569 ;	genIfxJump
                           3570 ;	Peephole 112.b	changed ljmp to sjmp
                           3571 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0580 40 1C              3572 	jc	00102$
                           3573 ;	Peephole 300	removed redundant label 00127$
                           3574 ;	genCmpGt
                           3575 ;	genCmp
                           3576 ;	genIfxJump
                           3577 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0582 EA                 3578 	mov	a,r2
   0583 24 70              3579 	add	a,#0xff - 0x8F
                           3580 ;	Peephole 112.b	changed ljmp to sjmp
                           3581 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0585 40 17              3582 	jc	00102$
                           3583 ;	Peephole 300	removed redundant label 00128$
   0587                    3584 00101$:
                    0587   3585 	C$lcd.c$202$2$2 ==.
                           3586 ;	lcd.c:202: lcd_busy_wait();
                           3587 ;	genCall
   0587 12s02r59           3588 	lcall	_lcd_busy_wait
                    058A   3589 	C$lcd.c$203$2$2 ==.
                           3590 ;	lcd.c:203: address |= lcd_ddram_address_mask;
                           3591 ;	genAssign
                           3592 ;	genOr
   058A 90s00r3C           3593 	mov	dptr,#_lcd_go_to_addr_address_1_1
   058D E0                 3594 	movx	a,@dptr
   058E FA                 3595 	mov	r2,a
                           3596 ;	Peephole 248.a	optimized or to xdata
   058F 44 80              3597 	orl	a,#0x80
   0591 F0                 3598 	movx	@dptr,a
                    0592   3599 	C$lcd.c$204$2$2 ==.
                           3600 ;	lcd.c:204: lcd_command_write(address);
                           3601 ;	genAssign
   0592 90s00r3C           3602 	mov	dptr,#_lcd_go_to_addr_address_1_1
   0595 E0                 3603 	movx	a,@dptr
                           3604 ;	genCall
   0596 FA                 3605 	mov	r2,a
                           3606 ;	Peephole 244.c	loading dpl from a instead of r2
   0597 F5 82              3607 	mov	dpl,a
   0599 12s07r6F           3608 	lcall	_lcd_command_write
                           3609 ;	Peephole 112.b	changed ljmp to sjmp
   059C 80 06              3610 	sjmp	00103$
   059E                    3611 00102$:
                    059E   3612 	C$lcd.c$208$2$3 ==.
                           3613 ;	lcd.c:208: my_printf(invalid_address_txt);
                           3614 ;	genCall
                           3615 ;	Peephole 182.a	used 16 bit load of DPTR
   059E 90s00r3D           3616 	mov	dptr,#_lcd_go_to_addr_invalid_address_txt_1_1
   05A1 12s00r00           3617 	lcall	_my_printf
   05A4                    3618 00103$:
                    05A4   3619 	C$lcd.c$210$1$1 ==.
                           3620 ;	lcd.c:210: return;
                           3621 ;	genRet
                           3622 ;	Peephole 300	removed redundant label 00111$
                    05A4   3623 	C$lcd.c$211$1$1 ==.
                    05A4   3624 	XG$lcd_go_to_addr$0$0 ==.
   05A4 22                 3625 	ret
                           3626 ;------------------------------------------------------------
                           3627 ;Allocation info for local variables in function 'lcd_go_to_x_y'
                           3628 ;------------------------------------------------------------
                           3629 ;column                    Allocated with name '_lcd_go_to_x_y_PARM_2'
                           3630 ;row                       Allocated with name '_lcd_go_to_x_y_row_1_1'
                           3631 ;invalid_row_txt           Allocated with name '_lcd_go_to_x_y_invalid_row_txt_1_1'
                           3632 ;invalid_column_txt        Allocated with name '_lcd_go_to_x_y_invalid_column_txt_1_1'
                           3633 ;lcd_row_base_address      Allocated with name '_lcd_go_to_x_y_lcd_row_base_address_1_1'
                           3634 ;address                   Allocated with name '_lcd_go_to_x_y_address_1_1'
                           3635 ;------------------------------------------------------------
                    05A5   3636 	G$lcd_go_to_x_y$0$0 ==.
                    05A5   3637 	C$lcd.c$219$1$1 ==.
                           3638 ;	lcd.c:219: void lcd_go_to_x_y(__xdata uint8_t row,__xdata uint8_t column)
                           3639 ;	-----------------------------------------
                           3640 ;	 function lcd_go_to_x_y
                           3641 ;	-----------------------------------------
   05A5                    3642 _lcd_go_to_x_y:
                           3643 ;	genReceive
   05A5 E5 82              3644 	mov	a,dpl
   05A7 90s00r50           3645 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   05AA F0                 3646 	movx	@dptr,a
                    05AB   3647 	C$lcd.c$221$1$1 ==.
                           3648 ;	lcd.c:221: __xdata uint8_t invalid_row_txt[]="\n\rInvalid Row Number";
                           3649 ;	genPointerSet
                           3650 ;     genFarPointerSet
   05AB 90s00r51           3651 	mov	dptr,#_lcd_go_to_x_y_invalid_row_txt_1_1
   05AE 74 0A              3652 	mov	a,#0x0A
   05B0 F0                 3653 	movx	@dptr,a
                           3654 ;	genPointerSet
                           3655 ;     genFarPointerSet
   05B1 90s00r52           3656 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0001)
   05B4 74 0D              3657 	mov	a,#0x0D
   05B6 F0                 3658 	movx	@dptr,a
                           3659 ;	genPointerSet
                           3660 ;     genFarPointerSet
   05B7 90s00r53           3661 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0002)
   05BA 74 49              3662 	mov	a,#0x49
   05BC F0                 3663 	movx	@dptr,a
                           3664 ;	genPointerSet
                           3665 ;     genFarPointerSet
   05BD 90s00r54           3666 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0003)
   05C0 74 6E              3667 	mov	a,#0x6E
   05C2 F0                 3668 	movx	@dptr,a
                           3669 ;	genPointerSet
                           3670 ;     genFarPointerSet
   05C3 90s00r55           3671 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0004)
   05C6 74 76              3672 	mov	a,#0x76
   05C8 F0                 3673 	movx	@dptr,a
                           3674 ;	genPointerSet
                           3675 ;     genFarPointerSet
   05C9 90s00r56           3676 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0005)
   05CC 74 61              3677 	mov	a,#0x61
   05CE F0                 3678 	movx	@dptr,a
                           3679 ;	genPointerSet
                           3680 ;     genFarPointerSet
   05CF 90s00r57           3681 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0006)
   05D2 74 6C              3682 	mov	a,#0x6C
   05D4 F0                 3683 	movx	@dptr,a
                           3684 ;	genPointerSet
                           3685 ;     genFarPointerSet
   05D5 90s00r58           3686 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0007)
   05D8 74 69              3687 	mov	a,#0x69
   05DA F0                 3688 	movx	@dptr,a
                           3689 ;	genPointerSet
                           3690 ;     genFarPointerSet
   05DB 90s00r59           3691 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0008)
   05DE 74 64              3692 	mov	a,#0x64
   05E0 F0                 3693 	movx	@dptr,a
                           3694 ;	genPointerSet
                           3695 ;     genFarPointerSet
   05E1 90s00r5A           3696 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0009)
   05E4 74 20              3697 	mov	a,#0x20
   05E6 F0                 3698 	movx	@dptr,a
                           3699 ;	genPointerSet
                           3700 ;     genFarPointerSet
   05E7 90s00r5B           3701 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000a)
   05EA 74 52              3702 	mov	a,#0x52
   05EC F0                 3703 	movx	@dptr,a
                           3704 ;	genPointerSet
                           3705 ;     genFarPointerSet
   05ED 90s00r5C           3706 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000b)
   05F0 74 6F              3707 	mov	a,#0x6F
   05F2 F0                 3708 	movx	@dptr,a
                           3709 ;	genPointerSet
                           3710 ;     genFarPointerSet
   05F3 90s00r5D           3711 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000c)
   05F6 74 77              3712 	mov	a,#0x77
   05F8 F0                 3713 	movx	@dptr,a
                           3714 ;	genPointerSet
                           3715 ;     genFarPointerSet
   05F9 90s00r5E           3716 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000d)
   05FC 74 20              3717 	mov	a,#0x20
   05FE F0                 3718 	movx	@dptr,a
                           3719 ;	genPointerSet
                           3720 ;     genFarPointerSet
   05FF 90s00r5F           3721 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000e)
   0602 74 4E              3722 	mov	a,#0x4E
   0604 F0                 3723 	movx	@dptr,a
                           3724 ;	genPointerSet
                           3725 ;     genFarPointerSet
   0605 90s00r60           3726 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x000f)
   0608 74 75              3727 	mov	a,#0x75
   060A F0                 3728 	movx	@dptr,a
                           3729 ;	genPointerSet
                           3730 ;     genFarPointerSet
   060B 90s00r61           3731 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0010)
   060E 74 6D              3732 	mov	a,#0x6D
   0610 F0                 3733 	movx	@dptr,a
                           3734 ;	genPointerSet
                           3735 ;     genFarPointerSet
   0611 90s00r62           3736 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0011)
   0614 74 62              3737 	mov	a,#0x62
   0616 F0                 3738 	movx	@dptr,a
                           3739 ;	genPointerSet
                           3740 ;     genFarPointerSet
   0617 90s00r63           3741 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0012)
   061A 74 65              3742 	mov	a,#0x65
   061C F0                 3743 	movx	@dptr,a
                           3744 ;	genPointerSet
                           3745 ;     genFarPointerSet
   061D 90s00r64           3746 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0013)
   0620 74 72              3747 	mov	a,#0x72
   0622 F0                 3748 	movx	@dptr,a
                           3749 ;	genPointerSet
                           3750 ;     genFarPointerSet
   0623 90s00r65           3751 	mov	dptr,#(_lcd_go_to_x_y_invalid_row_txt_1_1 + 0x0014)
                           3752 ;	Peephole 181	changed mov to clr
   0626 E4                 3753 	clr	a
   0627 F0                 3754 	movx	@dptr,a
                    0628   3755 	C$lcd.c$222$1$1 ==.
                           3756 ;	lcd.c:222: __xdata uint8_t invalid_column_txt[]="\n\rInvalid Column Number";
                           3757 ;	genPointerSet
                           3758 ;     genFarPointerSet
   0628 90s00r66           3759 	mov	dptr,#_lcd_go_to_x_y_invalid_column_txt_1_1
   062B 74 0A              3760 	mov	a,#0x0A
   062D F0                 3761 	movx	@dptr,a
                           3762 ;	genPointerSet
                           3763 ;     genFarPointerSet
   062E 90s00r67           3764 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0001)
   0631 74 0D              3765 	mov	a,#0x0D
   0633 F0                 3766 	movx	@dptr,a
                           3767 ;	genPointerSet
                           3768 ;     genFarPointerSet
   0634 90s00r68           3769 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0002)
   0637 74 49              3770 	mov	a,#0x49
   0639 F0                 3771 	movx	@dptr,a
                           3772 ;	genPointerSet
                           3773 ;     genFarPointerSet
   063A 90s00r69           3774 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0003)
   063D 74 6E              3775 	mov	a,#0x6E
   063F F0                 3776 	movx	@dptr,a
                           3777 ;	genPointerSet
                           3778 ;     genFarPointerSet
   0640 90s00r6A           3779 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0004)
   0643 74 76              3780 	mov	a,#0x76
   0645 F0                 3781 	movx	@dptr,a
                           3782 ;	genPointerSet
                           3783 ;     genFarPointerSet
   0646 90s00r6B           3784 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0005)
   0649 74 61              3785 	mov	a,#0x61
   064B F0                 3786 	movx	@dptr,a
                           3787 ;	genPointerSet
                           3788 ;     genFarPointerSet
   064C 90s00r6C           3789 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0006)
   064F 74 6C              3790 	mov	a,#0x6C
   0651 F0                 3791 	movx	@dptr,a
                           3792 ;	genPointerSet
                           3793 ;     genFarPointerSet
   0652 90s00r6D           3794 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0007)
   0655 74 69              3795 	mov	a,#0x69
   0657 F0                 3796 	movx	@dptr,a
                           3797 ;	genPointerSet
                           3798 ;     genFarPointerSet
   0658 90s00r6E           3799 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0008)
   065B 74 64              3800 	mov	a,#0x64
   065D F0                 3801 	movx	@dptr,a
                           3802 ;	genPointerSet
                           3803 ;     genFarPointerSet
   065E 90s00r6F           3804 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0009)
   0661 74 20              3805 	mov	a,#0x20
   0663 F0                 3806 	movx	@dptr,a
                           3807 ;	genPointerSet
                           3808 ;     genFarPointerSet
   0664 90s00r70           3809 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000a)
   0667 74 43              3810 	mov	a,#0x43
   0669 F0                 3811 	movx	@dptr,a
                           3812 ;	genPointerSet
                           3813 ;     genFarPointerSet
   066A 90s00r71           3814 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000b)
   066D 74 6F              3815 	mov	a,#0x6F
   066F F0                 3816 	movx	@dptr,a
                           3817 ;	genPointerSet
                           3818 ;     genFarPointerSet
   0670 90s00r72           3819 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000c)
   0673 74 6C              3820 	mov	a,#0x6C
   0675 F0                 3821 	movx	@dptr,a
                           3822 ;	genPointerSet
                           3823 ;     genFarPointerSet
   0676 90s00r73           3824 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000d)
   0679 74 75              3825 	mov	a,#0x75
   067B F0                 3826 	movx	@dptr,a
                           3827 ;	genPointerSet
                           3828 ;     genFarPointerSet
   067C 90s00r74           3829 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000e)
   067F 74 6D              3830 	mov	a,#0x6D
   0681 F0                 3831 	movx	@dptr,a
                           3832 ;	genPointerSet
                           3833 ;     genFarPointerSet
   0682 90s00r75           3834 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x000f)
   0685 74 6E              3835 	mov	a,#0x6E
   0687 F0                 3836 	movx	@dptr,a
                           3837 ;	genPointerSet
                           3838 ;     genFarPointerSet
   0688 90s00r76           3839 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0010)
   068B 74 20              3840 	mov	a,#0x20
   068D F0                 3841 	movx	@dptr,a
                           3842 ;	genPointerSet
                           3843 ;     genFarPointerSet
   068E 90s00r77           3844 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0011)
   0691 74 4E              3845 	mov	a,#0x4E
   0693 F0                 3846 	movx	@dptr,a
                           3847 ;	genPointerSet
                           3848 ;     genFarPointerSet
   0694 90s00r78           3849 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0012)
   0697 74 75              3850 	mov	a,#0x75
   0699 F0                 3851 	movx	@dptr,a
                           3852 ;	genPointerSet
                           3853 ;     genFarPointerSet
   069A 90s00r79           3854 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0013)
   069D 74 6D              3855 	mov	a,#0x6D
   069F F0                 3856 	movx	@dptr,a
                           3857 ;	genPointerSet
                           3858 ;     genFarPointerSet
   06A0 90s00r7A           3859 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0014)
   06A3 74 62              3860 	mov	a,#0x62
   06A5 F0                 3861 	movx	@dptr,a
                           3862 ;	genPointerSet
                           3863 ;     genFarPointerSet
   06A6 90s00r7B           3864 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0015)
   06A9 74 65              3865 	mov	a,#0x65
   06AB F0                 3866 	movx	@dptr,a
                           3867 ;	genPointerSet
                           3868 ;     genFarPointerSet
   06AC 90s00r7C           3869 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0016)
   06AF 74 72              3870 	mov	a,#0x72
   06B1 F0                 3871 	movx	@dptr,a
                           3872 ;	genPointerSet
                           3873 ;     genFarPointerSet
   06B2 90s00r7D           3874 	mov	dptr,#(_lcd_go_to_x_y_invalid_column_txt_1_1 + 0x0017)
                           3875 ;	Peephole 181	changed mov to clr
   06B5 E4                 3876 	clr	a
   06B6 F0                 3877 	movx	@dptr,a
                    06B7   3878 	C$lcd.c$223$1$1 ==.
                           3879 ;	lcd.c:223: __xdata uint8_t lcd_row_base_address[]={lcd_row_0_base_address,lcd_row_1_base_address,lcd_row_2_base_address,lcd_row_3_base_address};
                           3880 ;	genPointerSet
                           3881 ;     genFarPointerSet
   06B7 90s00r7E           3882 	mov	dptr,#_lcd_go_to_x_y_lcd_row_base_address_1_1
   06BA 74 80              3883 	mov	a,#0x80
   06BC F0                 3884 	movx	@dptr,a
                           3885 ;	genPointerSet
                           3886 ;     genFarPointerSet
   06BD 90s00r7F           3887 	mov	dptr,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 + 0x0001)
   06C0 74 C0              3888 	mov	a,#0xC0
   06C2 F0                 3889 	movx	@dptr,a
                           3890 ;	genPointerSet
                           3891 ;     genFarPointerSet
   06C3 90s00r80           3892 	mov	dptr,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 + 0x0002)
   06C6 74 90              3893 	mov	a,#0x90
   06C8 F0                 3894 	movx	@dptr,a
                           3895 ;	genPointerSet
                           3896 ;     genFarPointerSet
   06C9 90s00r81           3897 	mov	dptr,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 + 0x0003)
   06CC 74 D0              3898 	mov	a,#0xD0
   06CE F0                 3899 	movx	@dptr,a
                    06CF   3900 	C$lcd.c$225$1$1 ==.
                           3901 ;	lcd.c:225: lcd_busy_wait();
                           3902 ;	genCall
   06CF 12s02r59           3903 	lcall	_lcd_busy_wait
                    06D2   3904 	C$lcd.c$226$1$1 ==.
                           3905 ;	lcd.c:226: if(column >= lcd_width)
                           3906 ;	genAssign
   06D2 90s00r4F           3907 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   06D5 E0                 3908 	movx	a,@dptr
   06D6 FA                 3909 	mov	r2,a
                           3910 ;	genCmpLt
                           3911 ;	genCmp
   06D7 BA 10 00           3912 	cjne	r2,#0x10,00122$
   06DA                    3913 00122$:
                           3914 ;	genIfxJump
                           3915 ;	Peephole 112.b	changed ljmp to sjmp
                           3916 ;	Peephole 160.a	removed sjmp by inverse jump logic
   06DA 40 0C              3917 	jc	00102$
                           3918 ;	Peephole 300	removed redundant label 00123$
                    06DC   3919 	C$lcd.c$228$2$2 ==.
                           3920 ;	lcd.c:228: column = eeprom_read(lcd_current_column_address);
                           3921 ;	genCall
                           3922 ;	Peephole 182.b	used 16 bit load of dptr
   06DC 90 07 77           3923 	mov	dptr,#0x0777
   06DF 12s00r00           3924 	lcall	_eeprom_read
   06E2 E5 82              3925 	mov	a,dpl
                           3926 ;	genAssign
   06E4 90s00r4F           3927 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   06E7 F0                 3928 	movx	@dptr,a
   06E8                    3929 00102$:
                    06E8   3930 	C$lcd.c$230$1$1 ==.
                           3931 ;	lcd.c:230: if(row >= lcd_height)
                           3932 ;	genAssign
   06E8 90s00r50           3933 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   06EB E0                 3934 	movx	a,@dptr
   06EC FA                 3935 	mov	r2,a
                           3936 ;	genCmpLt
                           3937 ;	genCmp
   06ED BA 04 00           3938 	cjne	r2,#0x04,00124$
   06F0                    3939 00124$:
                           3940 ;	genIfxJump
                           3941 ;	Peephole 112.b	changed ljmp to sjmp
                           3942 ;	Peephole 160.a	removed sjmp by inverse jump logic
   06F0 40 0C              3943 	jc	00104$
                           3944 ;	Peephole 300	removed redundant label 00125$
                    06F2   3945 	C$lcd.c$232$2$3 ==.
                           3946 ;	lcd.c:232: row = eeprom_read(lcd_current_row_address);
                           3947 ;	genCall
                           3948 ;	Peephole 182.b	used 16 bit load of dptr
   06F2 90 05 55           3949 	mov	dptr,#0x0555
   06F5 12s00r00           3950 	lcall	_eeprom_read
   06F8 E5 82              3951 	mov	a,dpl
                           3952 ;	genAssign
   06FA 90s00r50           3953 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   06FD F0                 3954 	movx	@dptr,a
   06FE                    3955 00104$:
                    06FE   3956 	C$lcd.c$234$1$1 ==.
                           3957 ;	lcd.c:234: address = lcd_row_base_address[row] + column;
                           3958 ;	genAssign
   06FE 90s00r50           3959 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   0701 E0                 3960 	movx	a,@dptr
                           3961 ;	genPlus
   0702 FA                 3962 	mov	r2,a
                           3963 ;	Peephole 177.b	removed redundant mov
   0703 24r7E              3964 	add	a,#_lcd_go_to_x_y_lcd_row_base_address_1_1
   0705 F5 82              3965 	mov	dpl,a
                           3966 ;	Peephole 181	changed mov to clr
   0707 E4                 3967 	clr	a
   0708 34s00              3968 	addc	a,#(_lcd_go_to_x_y_lcd_row_base_address_1_1 >> 8)
   070A F5 83              3969 	mov	dph,a
                           3970 ;	genPointerGet
                           3971 ;	genFarPointerGet
   070C E0                 3972 	movx	a,@dptr
   070D FA                 3973 	mov	r2,a
                           3974 ;	genAssign
   070E 90s00r4F           3975 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0711 E0                 3976 	movx	a,@dptr
                           3977 ;	genPlus
   0712 FB                 3978 	mov	r3,a
                           3979 ;	Peephole 177.b	removed redundant mov
                           3980 ;	Peephole 236.a	used r2 instead of ar2
   0713 2A                 3981 	add	a,r2
   0714 FA                 3982 	mov	r2,a
                    0715   3983 	C$lcd.c$235$1$1 ==.
                           3984 ;	lcd.c:235: if((address>=0x90&&address<=0x9F)||(address>=0xD0&&address<=0xD7)||(address>=0xC0&&address<=0xCF)||(address>=0x80&&address<=0x8F))
                           3985 ;	genCmpLt
                           3986 ;	genCmp
   0715 BA 90 00           3987 	cjne	r2,#0x90,00126$
   0718                    3988 00126$:
                           3989 ;	genIfxJump
                           3990 ;	Peephole 112.b	changed ljmp to sjmp
                           3991 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0718 40 05              3992 	jc	00109$
                           3993 ;	Peephole 300	removed redundant label 00127$
                           3994 ;	genCmpGt
                           3995 ;	genCmp
                           3996 ;	genIfxJump
                           3997 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           3998 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   071A EA                 3999 	mov	a,r2
   071B 24 60              4000 	add	a,#0xff - 0x9F
   071D 50 1E              4001 	jnc	00105$
                           4002 ;	Peephole 300	removed redundant label 00128$
   071F                    4003 00109$:
                           4004 ;	genCmpLt
                           4005 ;	genCmp
   071F BA D0 00           4006 	cjne	r2,#0xD0,00129$
   0722                    4007 00129$:
                           4008 ;	genIfxJump
                           4009 ;	Peephole 112.b	changed ljmp to sjmp
                           4010 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0722 40 05              4011 	jc	00111$
                           4012 ;	Peephole 300	removed redundant label 00130$
                           4013 ;	genCmpGt
                           4014 ;	genCmp
                           4015 ;	genIfxJump
                           4016 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           4017 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0724 EA                 4018 	mov	a,r2
   0725 24 28              4019 	add	a,#0xff - 0xD7
   0727 50 14              4020 	jnc	00105$
                           4021 ;	Peephole 300	removed redundant label 00131$
   0729                    4022 00111$:
                           4023 ;	genCmpLt
                           4024 ;	genCmp
   0729 BA C0 00           4025 	cjne	r2,#0xC0,00132$
   072C                    4026 00132$:
                           4027 ;	genIfxJump
                           4028 ;	Peephole 112.b	changed ljmp to sjmp
                           4029 ;	Peephole 160.a	removed sjmp by inverse jump logic
   072C 40 05              4030 	jc	00113$
                           4031 ;	Peephole 300	removed redundant label 00133$
                           4032 ;	genCmpGt
                           4033 ;	genCmp
                           4034 ;	genIfxJump
                           4035 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           4036 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   072E EA                 4037 	mov	a,r2
   072F 24 30              4038 	add	a,#0xff - 0xCF
   0731 50 0A              4039 	jnc	00105$
                           4040 ;	Peephole 300	removed redundant label 00134$
   0733                    4041 00113$:
                           4042 ;	genCmpLt
                           4043 ;	genCmp
   0733 BA 80 00           4044 	cjne	r2,#0x80,00135$
   0736                    4045 00135$:
                           4046 ;	genIfxJump
                           4047 ;	Peephole 112.b	changed ljmp to sjmp
                           4048 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0736 40 36              4049 	jc	00106$
                           4050 ;	Peephole 300	removed redundant label 00136$
                           4051 ;	genCmpGt
                           4052 ;	genCmp
                           4053 ;	genIfxJump
                           4054 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0738 EA                 4055 	mov	a,r2
   0739 24 70              4056 	add	a,#0xff - 0x8F
                           4057 ;	Peephole 112.b	changed ljmp to sjmp
                           4058 ;	Peephole 160.a	removed sjmp by inverse jump logic
   073B 40 31              4059 	jc	00106$
                           4060 ;	Peephole 300	removed redundant label 00137$
   073D                    4061 00105$:
                    073D   4062 	C$lcd.c$237$2$4 ==.
                           4063 ;	lcd.c:237: lcd_go_to_addr(address);
                           4064 ;	genCall
   073D 8A 82              4065 	mov	dpl,r2
   073F 12s04rDA           4066 	lcall	_lcd_go_to_addr
                    0742   4067 	C$lcd.c$238$2$4 ==.
                           4068 ;	lcd.c:238: lcd_current_column = column;
                           4069 ;	genAssign
   0742 90s00r4F           4070 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0745 E0                 4071 	movx	a,@dptr
                           4072 ;	genAssign
   0746 FA                 4073 	mov	r2,a
   0747 90s00r01           4074 	mov	dptr,#_lcd_current_column
                           4075 ;	Peephole 100	removed redundant mov
   074A F0                 4076 	movx	@dptr,a
                    074B   4077 	C$lcd.c$239$2$4 ==.
                           4078 ;	lcd.c:239: lcd_current_row = row;
                           4079 ;	genAssign
   074B 90s00r50           4080 	mov	dptr,#_lcd_go_to_x_y_row_1_1
   074E E0                 4081 	movx	a,@dptr
                           4082 ;	genAssign
   074F FB                 4083 	mov	r3,a
   0750 90s00r02           4084 	mov	dptr,#_lcd_current_row
                           4085 ;	Peephole 100	removed redundant mov
   0753 F0                 4086 	movx	@dptr,a
                    0754   4087 	C$lcd.c$240$2$4 ==.
                           4088 ;	lcd.c:240: eeprom_write(lcd_current_column_address,column);
                           4089 ;	genAssign
   0754 90s00r00           4090 	mov	dptr,#_eeprom_write_PARM_2
   0757 EA                 4091 	mov	a,r2
   0758 F0                 4092 	movx	@dptr,a
                           4093 ;	genCall
                           4094 ;	Peephole 182.b	used 16 bit load of dptr
   0759 90 07 77           4095 	mov	dptr,#0x0777
   075C C0 03              4096 	push	ar3
   075E 12s00r00           4097 	lcall	_eeprom_write
   0761 D0 03              4098 	pop	ar3
                    0763   4099 	C$lcd.c$241$2$4 ==.
                           4100 ;	lcd.c:241: eeprom_write(lcd_current_row_address,row);
                           4101 ;	genAssign
   0763 90s00r00           4102 	mov	dptr,#_eeprom_write_PARM_2
   0766 EB                 4103 	mov	a,r3
   0767 F0                 4104 	movx	@dptr,a
                           4105 ;	genCall
                           4106 ;	Peephole 182.b	used 16 bit load of dptr
   0768 90 05 55           4107 	mov	dptr,#0x0555
   076B 12s00r00           4108 	lcall	_eeprom_write
   076E                    4109 00106$:
                    076E   4110 	C$lcd.c$243$1$1 ==.
                           4111 ;	lcd.c:243: return;
                           4112 ;	genRet
                           4113 ;	Peephole 300	removed redundant label 00114$
                    076E   4114 	C$lcd.c$244$1$1 ==.
                    076E   4115 	XG$lcd_go_to_x_y$0$0 ==.
   076E 22                 4116 	ret
                           4117 ;------------------------------------------------------------
                           4118 ;Allocation info for local variables in function 'lcd_command_write'
                           4119 ;------------------------------------------------------------
                           4120 ;data_byte                 Allocated with name '_lcd_command_write_data_byte_1_1'
                           4121 ;------------------------------------------------------------
                    076F   4122 	G$lcd_command_write$0$0 ==.
                    076F   4123 	C$lcd.c$251$1$1 ==.
                           4124 ;	lcd.c:251: void lcd_command_write(__xdata uint8_t data_byte)
                           4125 ;	-----------------------------------------
                           4126 ;	 function lcd_command_write
                           4127 ;	-----------------------------------------
   076F                    4128 _lcd_command_write:
                           4129 ;	genReceive
   076F E5 82              4130 	mov	a,dpl
   0771 90s00r82           4131 	mov	dptr,#_lcd_command_write_data_byte_1_1
   0774 F0                 4132 	movx	@dptr,a
                    0775   4133 	C$lcd.c$253$1$1 ==.
                           4134 ;	lcd.c:253: lcd_busy_wait();
                           4135 ;	genCall
   0775 12s02r59           4136 	lcall	_lcd_busy_wait
                    0778   4137 	C$lcd.c$254$1$1 ==.
                           4138 ;	lcd.c:254: *(lcd_command_write_address) = data_byte;
                           4139 ;	genAssign
   0778 7A 00              4140 	mov	r2,#0x00
   077A 7B 80              4141 	mov	r3,#0x80
                           4142 ;	genAssign
   077C 90s00r82           4143 	mov	dptr,#_lcd_command_write_data_byte_1_1
   077F E0                 4144 	movx	a,@dptr
                           4145 ;	genPointerSet
                           4146 ;     genFarPointerSet
   0780 FC                 4147 	mov	r4,a
   0781 8A 82              4148 	mov	dpl,r2
   0783 8B 83              4149 	mov	dph,r3
                           4150 ;	Peephole 136	removed redundant move
   0785 F0                 4151 	movx	@dptr,a
                    0786   4152 	C$lcd.c$255$1$1 ==.
                           4153 ;	lcd.c:255: return;
                           4154 ;	genRet
                           4155 ;	Peephole 300	removed redundant label 00101$
                    0786   4156 	C$lcd.c$256$1$1 ==.
                    0786   4157 	XG$lcd_command_write$0$0 ==.
   0786 22                 4158 	ret
                           4159 ;------------------------------------------------------------
                           4160 ;Allocation info for local variables in function 'lcd_put_ch'
                           4161 ;------------------------------------------------------------
                           4162 ;data_byte                 Allocated with name '_lcd_put_ch_data_byte_1_1'
                           4163 ;------------------------------------------------------------
                    0787   4164 	G$lcd_put_ch$0$0 ==.
                    0787   4165 	C$lcd.c$263$1$1 ==.
                           4166 ;	lcd.c:263: void lcd_put_ch(__xdata uint8_t data_byte)
                           4167 ;	-----------------------------------------
                           4168 ;	 function lcd_put_ch
                           4169 ;	-----------------------------------------
   0787                    4170 _lcd_put_ch:
                           4171 ;	genReceive
   0787 E5 82              4172 	mov	a,dpl
   0789 90s00r83           4173 	mov	dptr,#_lcd_put_ch_data_byte_1_1
   078C F0                 4174 	movx	@dptr,a
                    078D   4175 	C$lcd.c$265$1$1 ==.
                           4176 ;	lcd.c:265: lcd_busy_wait();
                           4177 ;	genCall
   078D 12s02r59           4178 	lcall	_lcd_busy_wait
                    0790   4179 	C$lcd.c$266$1$1 ==.
                           4180 ;	lcd.c:266: if(((lcd_current_row == 3)&&(lcd_current_column < 8))||(lcd_current_row < 3))
                           4181 ;	genAssign
   0790 90s00r02           4182 	mov	dptr,#_lcd_current_row
   0793 E0                 4183 	movx	a,@dptr
   0794 FA                 4184 	mov	r2,a
                           4185 ;	genCmpEq
                           4186 ;	gencjneshort
                           4187 ;	Peephole 112.b	changed ljmp to sjmp
                           4188 ;	Peephole 198.b	optimized misc jump sequence
   0795 BA 03 0A           4189 	cjne	r2,#0x03,00104$
                           4190 ;	Peephole 200.b	removed redundant sjmp
                           4191 ;	Peephole 300	removed redundant label 00115$
                           4192 ;	Peephole 300	removed redundant label 00116$
                           4193 ;	genAssign
   0798 90s00r01           4194 	mov	dptr,#_lcd_current_column
   079B E0                 4195 	movx	a,@dptr
   079C FB                 4196 	mov	r3,a
                           4197 ;	genCmpLt
                           4198 ;	genCmp
   079D BB 08 00           4199 	cjne	r3,#0x08,00117$
   07A0                    4200 00117$:
                           4201 ;	genIfxJump
                           4202 ;	Peephole 112.b	changed ljmp to sjmp
                           4203 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07A0 40 05              4204 	jc	00101$
                           4205 ;	Peephole 300	removed redundant label 00118$
   07A2                    4206 00104$:
                           4207 ;	genCmpLt
                           4208 ;	genCmp
   07A2 BA 03 00           4209 	cjne	r2,#0x03,00119$
   07A5                    4210 00119$:
                           4211 ;	genIfxJump
                           4212 ;	Peephole 108.a	removed ljmp by inverse jump logic
   07A5 50 3B              4213 	jnc	00102$
                           4214 ;	Peephole 300	removed redundant label 00120$
   07A7                    4215 00101$:
                    07A7   4216 	C$lcd.c$268$2$2 ==.
                           4217 ;	lcd.c:268: lcd_busy_wait();
                           4218 ;	genCall
   07A7 12s02r59           4219 	lcall	_lcd_busy_wait
                    07AA   4220 	C$lcd.c$269$2$2 ==.
                           4221 ;	lcd.c:269: *(lcd_data_write_address) = data_byte;
                           4222 ;	genAssign
   07AA 7A 00              4223 	mov	r2,#0x00
   07AC 7B A0              4224 	mov	r3,#0xA0
                           4225 ;	genAssign
   07AE 90s00r83           4226 	mov	dptr,#_lcd_put_ch_data_byte_1_1
   07B1 E0                 4227 	movx	a,@dptr
                           4228 ;	genPointerSet
                           4229 ;     genFarPointerSet
   07B2 FC                 4230 	mov	r4,a
   07B3 8A 82              4231 	mov	dpl,r2
   07B5 8B 83              4232 	mov	dph,r3
                           4233 ;	Peephole 136	removed redundant move
   07B7 F0                 4234 	movx	@dptr,a
                    07B8   4235 	C$lcd.c$270$2$2 ==.
                           4236 ;	lcd.c:270: lcd_current_column++;
                           4237 ;	genAssign
   07B8 90s00r01           4238 	mov	dptr,#_lcd_current_column
   07BB E0                 4239 	movx	a,@dptr
   07BC FA                 4240 	mov	r2,a
                           4241 ;	genPlus
   07BD 90s00r01           4242 	mov	dptr,#_lcd_current_column
                           4243 ;     genPlusIncr
   07C0 74 01              4244 	mov	a,#0x01
                           4245 ;	Peephole 236.a	used r2 instead of ar2
   07C2 2A                 4246 	add	a,r2
   07C3 F0                 4247 	movx	@dptr,a
                    07C4   4248 	C$lcd.c$271$2$2 ==.
                           4249 ;	lcd.c:271: eeprom_write(lcd_current_column_address,lcd_current_column);
                           4250 ;	genAssign
   07C4 90s00r01           4251 	mov	dptr,#_lcd_current_column
   07C7 E0                 4252 	movx	a,@dptr
                           4253 ;	genAssign
   07C8 FA                 4254 	mov	r2,a
   07C9 90s00r00           4255 	mov	dptr,#_eeprom_write_PARM_2
                           4256 ;	Peephole 100	removed redundant mov
   07CC F0                 4257 	movx	@dptr,a
                           4258 ;	genCall
                           4259 ;	Peephole 182.b	used 16 bit load of dptr
   07CD 90 07 77           4260 	mov	dptr,#0x0777
   07D0 12s00r00           4261 	lcall	_eeprom_write
                    07D3   4262 	C$lcd.c$272$2$2 ==.
                           4263 ;	lcd.c:272: eeprom_write(lcd_current_row_address,lcd_current_row);
                           4264 ;	genAssign
   07D3 90s00r02           4265 	mov	dptr,#_lcd_current_row
   07D6 E0                 4266 	movx	a,@dptr
                           4267 ;	genAssign
   07D7 FA                 4268 	mov	r2,a
   07D8 90s00r00           4269 	mov	dptr,#_eeprom_write_PARM_2
                           4270 ;	Peephole 100	removed redundant mov
   07DB F0                 4271 	movx	@dptr,a
                           4272 ;	genCall
                           4273 ;	Peephole 182.b	used 16 bit load of dptr
   07DC 90 05 55           4274 	mov	dptr,#0x0555
   07DF 12s00r00           4275 	lcall	_eeprom_write
   07E2                    4276 00102$:
                    07E2   4277 	C$lcd.c$274$1$1 ==.
                           4278 ;	lcd.c:274: if(((lcd_current_column >= 16)&&(lcd_current_row < 3))||((lcd_current_column >= 8)&&(lcd_current_row == 3)))
                           4279 ;	genAssign
   07E2 90s00r01           4280 	mov	dptr,#_lcd_current_column
   07E5 E0                 4281 	movx	a,@dptr
   07E6 FA                 4282 	mov	r2,a
                           4283 ;	genCmpLt
                           4284 ;	genCmp
   07E7 BA 10 00           4285 	cjne	r2,#0x10,00121$
   07EA                    4286 00121$:
                           4287 ;	genIfxJump
                           4288 ;	Peephole 112.b	changed ljmp to sjmp
                           4289 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07EA 40 0A              4290 	jc	00109$
                           4291 ;	Peephole 300	removed redundant label 00122$
                           4292 ;	genAssign
   07EC 90s00r02           4293 	mov	dptr,#_lcd_current_row
   07EF E0                 4294 	movx	a,@dptr
   07F0 FA                 4295 	mov	r2,a
                           4296 ;	genCmpLt
                           4297 ;	genCmp
   07F1 BA 03 00           4298 	cjne	r2,#0x03,00123$
   07F4                    4299 00123$:
                           4300 ;	genIfxJump
                           4301 ;	Peephole 112.b	changed ljmp to sjmp
                           4302 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07F4 40 12              4303 	jc	00105$
                           4304 ;	Peephole 300	removed redundant label 00124$
   07F6                    4305 00109$:
                           4306 ;	genAssign
   07F6 90s00r01           4307 	mov	dptr,#_lcd_current_column
   07F9 E0                 4308 	movx	a,@dptr
   07FA FA                 4309 	mov	r2,a
                           4310 ;	genCmpLt
                           4311 ;	genCmp
   07FB BA 08 00           4312 	cjne	r2,#0x08,00125$
   07FE                    4313 00125$:
                           4314 ;	genIfxJump
                           4315 ;	Peephole 112.b	changed ljmp to sjmp
                           4316 ;	Peephole 160.a	removed sjmp by inverse jump logic
   07FE 40 0B              4317 	jc	00106$
                           4318 ;	Peephole 300	removed redundant label 00126$
                           4319 ;	genAssign
   0800 90s00r02           4320 	mov	dptr,#_lcd_current_row
   0803 E0                 4321 	movx	a,@dptr
   0804 FA                 4322 	mov	r2,a
                           4323 ;	genCmpEq
                           4324 ;	gencjneshort
                           4325 ;	Peephole 112.b	changed ljmp to sjmp
                           4326 ;	Peephole 198.b	optimized misc jump sequence
   0805 BA 03 03           4327 	cjne	r2,#0x03,00106$
                           4328 ;	Peephole 200.b	removed redundant sjmp
                           4329 ;	Peephole 300	removed redundant label 00127$
                           4330 ;	Peephole 300	removed redundant label 00128$
   0808                    4331 00105$:
                    0808   4332 	C$lcd.c$276$2$3 ==.
                           4333 ;	lcd.c:276: lcd_row_shifter();
                           4334 ;	genCall
   0808 12s01rDC           4335 	lcall	_lcd_row_shifter
   080B                    4336 00106$:
                    080B   4337 	C$lcd.c$278$1$1 ==.
                           4338 ;	lcd.c:278: return;
                           4339 ;	genRet
                           4340 ;	Peephole 300	removed redundant label 00110$
                    080B   4341 	C$lcd.c$279$1$1 ==.
                    080B   4342 	XG$lcd_put_ch$0$0 ==.
   080B 22                 4343 	ret
                           4344 ;------------------------------------------------------------
                           4345 ;Allocation info for local variables in function 'lcd_put_str'
                           4346 ;------------------------------------------------------------
                           4347 ;text_ptr                  Allocated with name '_lcd_put_str_text_ptr_1_1'
                           4348 ;------------------------------------------------------------
                    080C   4349 	G$lcd_put_str$0$0 ==.
                    080C   4350 	C$lcd.c$286$1$1 ==.
                           4351 ;	lcd.c:286: void lcd_put_str(__xdata uint8_t* text_ptr)
                           4352 ;	-----------------------------------------
                           4353 ;	 function lcd_put_str
                           4354 ;	-----------------------------------------
   080C                    4355 _lcd_put_str:
                           4356 ;	genReceive
   080C AA 83              4357 	mov	r2,dph
   080E E5 82              4358 	mov	a,dpl
   0810 90s00r84           4359 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   0813 F0                 4360 	movx	@dptr,a
   0814 A3                 4361 	inc	dptr
   0815 EA                 4362 	mov	a,r2
   0816 F0                 4363 	movx	@dptr,a
                    0817   4364 	C$lcd.c$288$1$1 ==.
                           4365 ;	lcd.c:288: while(*text_ptr!='\0')
                           4366 ;	genAssign
   0817 90s00r84           4367 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   081A E0                 4368 	movx	a,@dptr
   081B FA                 4369 	mov	r2,a
   081C A3                 4370 	inc	dptr
   081D E0                 4371 	movx	a,@dptr
   081E FB                 4372 	mov	r3,a
   081F                    4373 00101$:
                           4374 ;	genPointerGet
                           4375 ;	genFarPointerGet
   081F 8A 82              4376 	mov	dpl,r2
   0821 8B 83              4377 	mov	dph,r3
   0823 E0                 4378 	movx	a,@dptr
                           4379 ;	genCmpEq
                           4380 ;	gencjneshort
                           4381 ;	Peephole 112.b	changed ljmp to sjmp
   0824 FC                 4382 	mov	r4,a
                           4383 ;	Peephole 115.b	jump optimization
   0825 60 1C              4384 	jz	00108$
                           4385 ;	Peephole 300	removed redundant label 00109$
                    0827   4386 	C$lcd.c$290$2$2 ==.
                           4387 ;	lcd.c:290: lcd_put_ch(*text_ptr);
                           4388 ;	genCall
   0827 8C 82              4389 	mov	dpl,r4
   0829 C0 02              4390 	push	ar2
   082B C0 03              4391 	push	ar3
   082D 12s07r87           4392 	lcall	_lcd_put_ch
   0830 D0 03              4393 	pop	ar3
   0832 D0 02              4394 	pop	ar2
                    0834   4395 	C$lcd.c$291$2$2 ==.
                           4396 ;	lcd.c:291: text_ptr++;
                           4397 ;	genPlus
                           4398 ;     genPlusIncr
   0834 0A                 4399 	inc	r2
   0835 BA 00 01           4400 	cjne	r2,#0x00,00110$
   0838 0B                 4401 	inc	r3
   0839                    4402 00110$:
                           4403 ;	genAssign
   0839 90s00r84           4404 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   083C EA                 4405 	mov	a,r2
   083D F0                 4406 	movx	@dptr,a
   083E A3                 4407 	inc	dptr
   083F EB                 4408 	mov	a,r3
   0840 F0                 4409 	movx	@dptr,a
                           4410 ;	Peephole 112.b	changed ljmp to sjmp
   0841 80 DC              4411 	sjmp	00101$
   0843                    4412 00108$:
                           4413 ;	genAssign
   0843 90s00r84           4414 	mov	dptr,#_lcd_put_str_text_ptr_1_1
   0846 EA                 4415 	mov	a,r2
   0847 F0                 4416 	movx	@dptr,a
   0848 A3                 4417 	inc	dptr
   0849 EB                 4418 	mov	a,r3
   084A F0                 4419 	movx	@dptr,a
                    084B   4420 	C$lcd.c$293$1$1 ==.
                           4421 ;	lcd.c:293: return;
                           4422 ;	genRet
                           4423 ;	Peephole 300	removed redundant label 00104$
                    084B   4424 	C$lcd.c$294$1$1 ==.
                    084B   4425 	XG$lcd_put_str$0$0 ==.
   084B 22                 4426 	ret
                           4427 ;------------------------------------------------------------
                           4428 ;Allocation info for local variables in function 'lcd_clear'
                           4429 ;------------------------------------------------------------
                           4430 ;------------------------------------------------------------
                    084C   4431 	G$lcd_clear$0$0 ==.
                    084C   4432 	C$lcd.c$300$1$1 ==.
                           4433 ;	lcd.c:300: void lcd_clear(void)
                           4434 ;	-----------------------------------------
                           4435 ;	 function lcd_clear
                           4436 ;	-----------------------------------------
   084C                    4437 _lcd_clear:
                    084C   4438 	C$lcd.c$302$1$1 ==.
                           4439 ;	lcd.c:302: lcd_command_write(lcd_clear_display);
                           4440 ;	genCall
   084C 75 82 01           4441 	mov	dpl,#0x01
   084F 12s07r6F           4442 	lcall	_lcd_command_write
                    0852   4443 	C$lcd.c$303$1$1 ==.
                           4444 ;	lcd.c:303: lcd_current_row=0;
                           4445 ;	genAssign
   0852 90s00r02           4446 	mov	dptr,#_lcd_current_row
                           4447 ;	Peephole 181	changed mov to clr
                    0855   4448 	C$lcd.c$304$1$1 ==.
                           4449 ;	lcd.c:304: eeprom_write(lcd_current_row_address,lcd_current_row);
                           4450 ;	genAssign
                           4451 ;	Peephole 181	changed mov to clr
                           4452 ;	Peephole 219.a	removed redundant clear
   0855 E4                 4453 	clr	a
   0856 F0                 4454 	movx	@dptr,a
   0857 90s00r00           4455 	mov	dptr,#_eeprom_write_PARM_2
   085A F0                 4456 	movx	@dptr,a
                           4457 ;	genCall
                           4458 ;	Peephole 182.b	used 16 bit load of dptr
   085B 90 05 55           4459 	mov	dptr,#0x0555
   085E 12s00r00           4460 	lcall	_eeprom_write
                    0861   4461 	C$lcd.c$305$1$1 ==.
                           4462 ;	lcd.c:305: lcd_current_column=0;
                           4463 ;	genAssign
   0861 90s00r01           4464 	mov	dptr,#_lcd_current_column
                           4465 ;	Peephole 181	changed mov to clr
                    0864   4466 	C$lcd.c$306$1$1 ==.
                           4467 ;	lcd.c:306: eeprom_write(lcd_current_column_address,lcd_current_column);
                           4468 ;	genAssign
                           4469 ;	Peephole 181	changed mov to clr
                           4470 ;	Peephole 219.a	removed redundant clear
   0864 E4                 4471 	clr	a
   0865 F0                 4472 	movx	@dptr,a
   0866 90s00r00           4473 	mov	dptr,#_eeprom_write_PARM_2
   0869 F0                 4474 	movx	@dptr,a
                           4475 ;	genCall
                           4476 ;	Peephole 182.b	used 16 bit load of dptr
   086A 90 07 77           4477 	mov	dptr,#0x0777
                    086D   4478 	C$lcd.c$307$1$1 ==.
                           4479 ;	lcd.c:307: return;
                           4480 ;	genRet
                    086D   4481 	C$lcd.c$308$1$1 ==.
                    086D   4482 	XG$lcd_clear$0$0 ==.
                           4483 ;	Peephole 253.b	replaced lcall/ret with ljmp
   086D 02s00r00           4484 	ljmp	_eeprom_write
                           4485 ;
                           4486 ;------------------------------------------------------------
                           4487 ;Allocation info for local variables in function 'lcd_custom_character_creation'
                           4488 ;------------------------------------------------------------
                           4489 ;number_of_custom_characters Allocated with name '_lcd_custom_character_creation_number_of_custom_characters_1_1'
                           4490 ;Base_query_txt            Allocated with name '_lcd_custom_character_creation_Base_query_txt_1_1'
                           4491 ;character_row_number      Allocated with name '_lcd_custom_character_creation_character_row_number_1_1'
                           4492 ;character_number          Allocated with name '_lcd_custom_character_creation_character_number_1_1'
                           4493 ;temp_char                 Allocated with name '_lcd_custom_character_creation_temp_char_1_1'
                           4494 ;custom_character_address  Allocated with name '_lcd_custom_character_creation_custom_character_address_1_1'
                           4495 ;base                      Allocated with name '_lcd_custom_character_creation_base_1_1'
                           4496 ;character_number_txt      Allocated with name '_lcd_custom_character_creation_character_number_txt_1_1'
                           4497 ;row_number_txt            Allocated with name '_lcd_custom_character_creation_row_number_txt_1_1'
                           4498 ;------------------------------------------------------------
                    0870   4499 	G$lcd_custom_character_creation$0$0 ==.
                    0870   4500 	C$lcd.c$314$1$1 ==.
                           4501 ;	lcd.c:314: void lcd_custom_character_creation(uint8_t number_of_custom_characters)
                           4502 ;	-----------------------------------------
                           4503 ;	 function lcd_custom_character_creation
                           4504 ;	-----------------------------------------
   0870                    4505 _lcd_custom_character_creation:
                           4506 ;	genReceive
   0870 E5 82              4507 	mov	a,dpl
   0872 90s00r86           4508 	mov	dptr,#_lcd_custom_character_creation_number_of_custom_characters_1_1
   0875 F0                 4509 	movx	@dptr,a
                    0876   4510 	C$lcd.c$316$1$1 ==.
                           4511 ;	lcd.c:316: __xdata uint8_t Base_query_txt[]="\n\rEnter base of your data entry";
                           4512 ;	genPointerSet
                           4513 ;     genFarPointerSet
   0876 90s00r87           4514 	mov	dptr,#_lcd_custom_character_creation_Base_query_txt_1_1
   0879 74 0A              4515 	mov	a,#0x0A
   087B F0                 4516 	movx	@dptr,a
                           4517 ;	genPointerSet
                           4518 ;     genFarPointerSet
   087C 90s00r88           4519 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0001)
   087F 74 0D              4520 	mov	a,#0x0D
   0881 F0                 4521 	movx	@dptr,a
                           4522 ;	genPointerSet
                           4523 ;     genFarPointerSet
   0882 90s00r89           4524 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0002)
   0885 74 45              4525 	mov	a,#0x45
   0887 F0                 4526 	movx	@dptr,a
                           4527 ;	genPointerSet
                           4528 ;     genFarPointerSet
   0888 90s00r8A           4529 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0003)
   088B 74 6E              4530 	mov	a,#0x6E
   088D F0                 4531 	movx	@dptr,a
                           4532 ;	genPointerSet
                           4533 ;     genFarPointerSet
   088E 90s00r8B           4534 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0004)
   0891 74 74              4535 	mov	a,#0x74
   0893 F0                 4536 	movx	@dptr,a
                           4537 ;	genPointerSet
                           4538 ;     genFarPointerSet
   0894 90s00r8C           4539 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0005)
   0897 74 65              4540 	mov	a,#0x65
   0899 F0                 4541 	movx	@dptr,a
                           4542 ;	genPointerSet
                           4543 ;     genFarPointerSet
   089A 90s00r8D           4544 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0006)
   089D 74 72              4545 	mov	a,#0x72
   089F F0                 4546 	movx	@dptr,a
                           4547 ;	genPointerSet
                           4548 ;     genFarPointerSet
   08A0 90s00r8E           4549 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0007)
   08A3 74 20              4550 	mov	a,#0x20
   08A5 F0                 4551 	movx	@dptr,a
                           4552 ;	genPointerSet
                           4553 ;     genFarPointerSet
   08A6 90s00r8F           4554 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0008)
   08A9 74 62              4555 	mov	a,#0x62
   08AB F0                 4556 	movx	@dptr,a
                           4557 ;	genPointerSet
                           4558 ;     genFarPointerSet
   08AC 90s00r90           4559 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0009)
   08AF 74 61              4560 	mov	a,#0x61
   08B1 F0                 4561 	movx	@dptr,a
                           4562 ;	genPointerSet
                           4563 ;     genFarPointerSet
   08B2 90s00r91           4564 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000a)
   08B5 74 73              4565 	mov	a,#0x73
   08B7 F0                 4566 	movx	@dptr,a
                           4567 ;	genPointerSet
                           4568 ;     genFarPointerSet
   08B8 90s00r92           4569 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000b)
   08BB 74 65              4570 	mov	a,#0x65
   08BD F0                 4571 	movx	@dptr,a
                           4572 ;	genPointerSet
                           4573 ;     genFarPointerSet
   08BE 90s00r93           4574 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000c)
   08C1 74 20              4575 	mov	a,#0x20
   08C3 F0                 4576 	movx	@dptr,a
                           4577 ;	genPointerSet
                           4578 ;     genFarPointerSet
   08C4 90s00r94           4579 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000d)
   08C7 74 6F              4580 	mov	a,#0x6F
   08C9 F0                 4581 	movx	@dptr,a
                           4582 ;	genPointerSet
                           4583 ;     genFarPointerSet
   08CA 90s00r95           4584 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000e)
   08CD 74 66              4585 	mov	a,#0x66
   08CF F0                 4586 	movx	@dptr,a
                           4587 ;	genPointerSet
                           4588 ;     genFarPointerSet
   08D0 90s00r96           4589 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x000f)
   08D3 74 20              4590 	mov	a,#0x20
   08D5 F0                 4591 	movx	@dptr,a
                           4592 ;	genPointerSet
                           4593 ;     genFarPointerSet
   08D6 90s00r97           4594 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0010)
   08D9 74 79              4595 	mov	a,#0x79
   08DB F0                 4596 	movx	@dptr,a
                           4597 ;	genPointerSet
                           4598 ;     genFarPointerSet
   08DC 90s00r98           4599 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0011)
   08DF 74 6F              4600 	mov	a,#0x6F
   08E1 F0                 4601 	movx	@dptr,a
                           4602 ;	genPointerSet
                           4603 ;     genFarPointerSet
   08E2 90s00r99           4604 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0012)
   08E5 74 75              4605 	mov	a,#0x75
   08E7 F0                 4606 	movx	@dptr,a
                           4607 ;	genPointerSet
                           4608 ;     genFarPointerSet
   08E8 90s00r9A           4609 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0013)
   08EB 74 72              4610 	mov	a,#0x72
   08ED F0                 4611 	movx	@dptr,a
                           4612 ;	genPointerSet
                           4613 ;     genFarPointerSet
   08EE 90s00r9B           4614 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0014)
   08F1 74 20              4615 	mov	a,#0x20
   08F3 F0                 4616 	movx	@dptr,a
                           4617 ;	genPointerSet
                           4618 ;     genFarPointerSet
   08F4 90s00r9C           4619 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0015)
   08F7 74 64              4620 	mov	a,#0x64
   08F9 F0                 4621 	movx	@dptr,a
                           4622 ;	genPointerSet
                           4623 ;     genFarPointerSet
   08FA 90s00r9D           4624 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0016)
   08FD 74 61              4625 	mov	a,#0x61
   08FF F0                 4626 	movx	@dptr,a
                           4627 ;	genPointerSet
                           4628 ;     genFarPointerSet
   0900 90s00r9E           4629 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0017)
   0903 74 74              4630 	mov	a,#0x74
   0905 F0                 4631 	movx	@dptr,a
                           4632 ;	genPointerSet
                           4633 ;     genFarPointerSet
   0906 90s00r9F           4634 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0018)
   0909 74 61              4635 	mov	a,#0x61
   090B F0                 4636 	movx	@dptr,a
                           4637 ;	genPointerSet
                           4638 ;     genFarPointerSet
   090C 90s00rA0           4639 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x0019)
   090F 74 20              4640 	mov	a,#0x20
   0911 F0                 4641 	movx	@dptr,a
                           4642 ;	genPointerSet
                           4643 ;     genFarPointerSet
   0912 90s00rA1           4644 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001a)
   0915 74 65              4645 	mov	a,#0x65
   0917 F0                 4646 	movx	@dptr,a
                           4647 ;	genPointerSet
                           4648 ;     genFarPointerSet
   0918 90s00rA2           4649 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001b)
   091B 74 6E              4650 	mov	a,#0x6E
   091D F0                 4651 	movx	@dptr,a
                           4652 ;	genPointerSet
                           4653 ;     genFarPointerSet
   091E 90s00rA3           4654 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001c)
   0921 74 74              4655 	mov	a,#0x74
   0923 F0                 4656 	movx	@dptr,a
                           4657 ;	genPointerSet
                           4658 ;     genFarPointerSet
   0924 90s00rA4           4659 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001d)
   0927 74 72              4660 	mov	a,#0x72
   0929 F0                 4661 	movx	@dptr,a
                           4662 ;	genPointerSet
                           4663 ;     genFarPointerSet
   092A 90s00rA5           4664 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001e)
   092D 74 79              4665 	mov	a,#0x79
   092F F0                 4666 	movx	@dptr,a
                           4667 ;	genPointerSet
                           4668 ;     genFarPointerSet
   0930 90s00rA6           4669 	mov	dptr,#(_lcd_custom_character_creation_Base_query_txt_1_1 + 0x001f)
                           4670 ;	Peephole 181	changed mov to clr
   0933 E4                 4671 	clr	a
   0934 F0                 4672 	movx	@dptr,a
                    0935   4673 	C$lcd.c$318$1$1 ==.
                           4674 ;	lcd.c:318: __xdata uint8_t character_number_txt[] = "\n\rCharacter ";
                           4675 ;	genPointerSet
                           4676 ;     genFarPointerSet
   0935 90s00rA7           4677 	mov	dptr,#_lcd_custom_character_creation_character_number_txt_1_1
   0938 74 0A              4678 	mov	a,#0x0A
   093A F0                 4679 	movx	@dptr,a
                           4680 ;	genPointerSet
                           4681 ;     genFarPointerSet
   093B 90s00rA8           4682 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0001)
   093E 74 0D              4683 	mov	a,#0x0D
   0940 F0                 4684 	movx	@dptr,a
                           4685 ;	genPointerSet
                           4686 ;     genFarPointerSet
   0941 90s00rA9           4687 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0002)
   0944 74 43              4688 	mov	a,#0x43
   0946 F0                 4689 	movx	@dptr,a
                           4690 ;	genPointerSet
                           4691 ;     genFarPointerSet
   0947 90s00rAA           4692 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0003)
   094A 74 68              4693 	mov	a,#0x68
   094C F0                 4694 	movx	@dptr,a
                           4695 ;	genPointerSet
                           4696 ;     genFarPointerSet
   094D 90s00rAB           4697 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0004)
   0950 74 61              4698 	mov	a,#0x61
   0952 F0                 4699 	movx	@dptr,a
                           4700 ;	genPointerSet
                           4701 ;     genFarPointerSet
   0953 90s00rAC           4702 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0005)
   0956 74 72              4703 	mov	a,#0x72
   0958 F0                 4704 	movx	@dptr,a
                           4705 ;	genPointerSet
                           4706 ;     genFarPointerSet
   0959 90s00rAD           4707 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0006)
   095C 74 61              4708 	mov	a,#0x61
   095E F0                 4709 	movx	@dptr,a
                           4710 ;	genPointerSet
                           4711 ;     genFarPointerSet
   095F 90s00rAE           4712 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0007)
   0962 74 63              4713 	mov	a,#0x63
   0964 F0                 4714 	movx	@dptr,a
                           4715 ;	genPointerSet
                           4716 ;     genFarPointerSet
   0965 90s00rAF           4717 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0008)
   0968 74 74              4718 	mov	a,#0x74
   096A F0                 4719 	movx	@dptr,a
                           4720 ;	genPointerSet
                           4721 ;     genFarPointerSet
   096B 90s00rB0           4722 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x0009)
   096E 74 65              4723 	mov	a,#0x65
   0970 F0                 4724 	movx	@dptr,a
                           4725 ;	genPointerSet
                           4726 ;     genFarPointerSet
   0971 90s00rB1           4727 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x000a)
   0974 74 72              4728 	mov	a,#0x72
   0976 F0                 4729 	movx	@dptr,a
                           4730 ;	genPointerSet
                           4731 ;     genFarPointerSet
   0977 90s00rB2           4732 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x000b)
   097A 74 20              4733 	mov	a,#0x20
   097C F0                 4734 	movx	@dptr,a
                           4735 ;	genPointerSet
                           4736 ;     genFarPointerSet
   097D 90s00rB3           4737 	mov	dptr,#(_lcd_custom_character_creation_character_number_txt_1_1 + 0x000c)
                           4738 ;	Peephole 181	changed mov to clr
   0980 E4                 4739 	clr	a
   0981 F0                 4740 	movx	@dptr,a
                    0982   4741 	C$lcd.c$319$1$1 ==.
                           4742 ;	lcd.c:319: __xdata uint8_t row_number_txt[] = "\n\rRow ";
                           4743 ;	genPointerSet
                           4744 ;     genFarPointerSet
   0982 90s00rB4           4745 	mov	dptr,#_lcd_custom_character_creation_row_number_txt_1_1
   0985 74 0A              4746 	mov	a,#0x0A
   0987 F0                 4747 	movx	@dptr,a
                           4748 ;	genPointerSet
                           4749 ;     genFarPointerSet
   0988 90s00rB5           4750 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0001)
   098B 74 0D              4751 	mov	a,#0x0D
   098D F0                 4752 	movx	@dptr,a
                           4753 ;	genPointerSet
                           4754 ;     genFarPointerSet
   098E 90s00rB6           4755 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0002)
   0991 74 52              4756 	mov	a,#0x52
   0993 F0                 4757 	movx	@dptr,a
                           4758 ;	genPointerSet
                           4759 ;     genFarPointerSet
   0994 90s00rB7           4760 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0003)
   0997 74 6F              4761 	mov	a,#0x6F
   0999 F0                 4762 	movx	@dptr,a
                           4763 ;	genPointerSet
                           4764 ;     genFarPointerSet
   099A 90s00rB8           4765 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0004)
   099D 74 77              4766 	mov	a,#0x77
   099F F0                 4767 	movx	@dptr,a
                           4768 ;	genPointerSet
                           4769 ;     genFarPointerSet
   09A0 90s00rB9           4770 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0005)
   09A3 74 20              4771 	mov	a,#0x20
   09A5 F0                 4772 	movx	@dptr,a
                           4773 ;	genPointerSet
                           4774 ;     genFarPointerSet
   09A6 90s00rBA           4775 	mov	dptr,#(_lcd_custom_character_creation_row_number_txt_1_1 + 0x0006)
                           4776 ;	Peephole 181	changed mov to clr
   09A9 E4                 4777 	clr	a
   09AA F0                 4778 	movx	@dptr,a
                    09AB   4779 	C$lcd.c$320$1$1 ==.
                           4780 ;	lcd.c:320: lcd_clear();
                           4781 ;	genCall
   09AB 12s08r4C           4782 	lcall	_lcd_clear
                    09AE   4783 	C$lcd.c$321$1$1 ==.
                           4784 ;	lcd.c:321: my_printf(Base_query_txt);
                           4785 ;	genCall
                           4786 ;	Peephole 182.a	used 16 bit load of DPTR
   09AE 90s00r87           4787 	mov	dptr,#_lcd_custom_character_creation_Base_query_txt_1_1
   09B1 12s00r00           4788 	lcall	_my_printf
                    09B4   4789 	C$lcd.c$322$1$1 ==.
                           4790 ;	lcd.c:322: base=fetch_number(10);
                           4791 ;	genCall
   09B4 75 82 0A           4792 	mov	dpl,#0x0A
   09B7 12s00r00           4793 	lcall	_fetch_number
   09BA AA 82              4794 	mov	r2,dpl
   09BC AB 83              4795 	mov	r3,dph
                           4796 ;	genCast
                    09BE   4797 	C$lcd.c$323$1$1 ==.
                           4798 ;	lcd.c:323: for(character_number=0;character_number<number_of_custom_characters;character_number++)
                           4799 ;	genAssign
   09BE 90s00r86           4800 	mov	dptr,#_lcd_custom_character_creation_number_of_custom_characters_1_1
   09C1 E0                 4801 	movx	a,@dptr
   09C2 FB                 4802 	mov	r3,a
                           4803 ;	genAssign
   09C3 7C 00              4804 	mov	r4,#0x00
   09C5                    4805 00105$:
                           4806 ;	genCmpLt
                           4807 ;	genCmp
   09C5 C3                 4808 	clr	c
   09C6 EC                 4809 	mov	a,r4
   09C7 9B                 4810 	subb	a,r3
                           4811 ;	genIfxJump
   09C8 40 03              4812 	jc	00117$
   09CA 02s0ArE2           4813 	ljmp	00108$
   09CD                    4814 00117$:
                    09CD   4815 	C$lcd.c$325$2$2 ==.
                           4816 ;	lcd.c:325: my_printf(character_number_txt);
                           4817 ;	genCall
                           4818 ;	Peephole 182.a	used 16 bit load of DPTR
   09CD 90s00rA7           4819 	mov	dptr,#_lcd_custom_character_creation_character_number_txt_1_1
   09D0 C0 02              4820 	push	ar2
   09D2 C0 03              4821 	push	ar3
   09D4 C0 04              4822 	push	ar4
   09D6 12s00r00           4823 	lcall	_my_printf
   09D9 D0 04              4824 	pop	ar4
   09DB D0 03              4825 	pop	ar3
   09DD D0 02              4826 	pop	ar2
                    09DF   4827 	C$lcd.c$326$2$2 ==.
                           4828 ;	lcd.c:326: print_number(character_number+1);
                           4829 ;	genCast
   09DF 8C 05              4830 	mov	ar5,r4
   09E1 7E 00              4831 	mov	r6,#0x00
                           4832 ;	genPlus
                           4833 ;     genPlusIncr
   09E3 0D                 4834 	inc	r5
   09E4 BD 00 01           4835 	cjne	r5,#0x00,00118$
   09E7 0E                 4836 	inc	r6
   09E8                    4837 00118$:
                           4838 ;	genCast
   09E8 EE                 4839 	mov	a,r6
   09E9 33                 4840 	rlc	a
   09EA 95 E0              4841 	subb	a,acc
   09EC FF                 4842 	mov	r7,a
                           4843 ;	genCall
   09ED F8                 4844 	mov	r0,a
   09EE 8D 82              4845 	mov	dpl,r5
   09F0 8E 83              4846 	mov	dph,r6
   09F2 8F F0              4847 	mov	b,r7
                           4848 ;	Peephole 191	removed redundant mov
   09F4 C0 02              4849 	push	ar2
   09F6 C0 03              4850 	push	ar3
   09F8 C0 04              4851 	push	ar4
   09FA 12s00r00           4852 	lcall	_print_number
   09FD D0 04              4853 	pop	ar4
   09FF D0 03              4854 	pop	ar3
   0A01 D0 02              4855 	pop	ar2
                    0A03   4856 	C$lcd.c$327$3$3 ==.
                           4857 ;	lcd.c:327: for(character_row_number=0;character_row_number<8;character_row_number++)
                           4858 ;	genLeftShift
                           4859 ;	genLeftShiftLiteral
                           4860 ;	genlshOne
   0A03 EC                 4861 	mov	a,r4
   0A04 C4                 4862 	swap	a
   0A05 03                 4863 	rr	a
   0A06 54 F8              4864 	anl	a,#0xf8
   0A08 FD                 4865 	mov	r5,a
                           4866 ;	genOr
   0A09 43 05 40           4867 	orl	ar5,#0x40
                           4868 ;	genAssign
   0A0C 7E 00              4869 	mov	r6,#0x00
   0A0E                    4870 00101$:
                           4871 ;	genCmpLt
                           4872 ;	genCmp
   0A0E BE 08 00           4873 	cjne	r6,#0x08,00119$
   0A11                    4874 00119$:
                           4875 ;	genIfxJump
   0A11 40 03              4876 	jc	00120$
   0A13 02s0ArB6           4877 	ljmp	00104$
   0A16                    4878 00120$:
                    0A16   4879 	C$lcd.c$329$1$1 ==.
                           4880 ;	lcd.c:329: my_printf(row_number_txt);
                           4881 ;	genIpush
   0A16 C0 03              4882 	push	ar3
                           4883 ;	genCall
                           4884 ;	Peephole 182.a	used 16 bit load of DPTR
   0A18 90s00rB4           4885 	mov	dptr,#_lcd_custom_character_creation_row_number_txt_1_1
   0A1B C0 02              4886 	push	ar2
   0A1D C0 03              4887 	push	ar3
   0A1F C0 04              4888 	push	ar4
   0A21 C0 05              4889 	push	ar5
   0A23 C0 06              4890 	push	ar6
   0A25 12s00r00           4891 	lcall	_my_printf
   0A28 D0 06              4892 	pop	ar6
   0A2A D0 05              4893 	pop	ar5
   0A2C D0 04              4894 	pop	ar4
   0A2E D0 03              4895 	pop	ar3
   0A30 D0 02              4896 	pop	ar2
                    0A32   4897 	C$lcd.c$330$3$3 ==.
                           4898 ;	lcd.c:330: print_number(character_row_number);
                           4899 ;	genCast
   0A32 8E 07              4900 	mov	ar7,r6
   0A34 78 00              4901 	mov	r0,#0x00
   0A36 79 00              4902 	mov	r1,#0x00
   0A38 7B 00              4903 	mov	r3,#0x00
                           4904 ;	genCall
   0A3A 8F 82              4905 	mov	dpl,r7
   0A3C 88 83              4906 	mov	dph,r0
   0A3E 89 F0              4907 	mov	b,r1
   0A40 EB                 4908 	mov	a,r3
   0A41 C0 02              4909 	push	ar2
   0A43 C0 03              4910 	push	ar3
   0A45 C0 04              4911 	push	ar4
   0A47 C0 05              4912 	push	ar5
   0A49 C0 06              4913 	push	ar6
   0A4B 12s00r00           4914 	lcall	_print_number
   0A4E D0 06              4915 	pop	ar6
   0A50 D0 05              4916 	pop	ar5
   0A52 D0 04              4917 	pop	ar4
   0A54 D0 03              4918 	pop	ar3
   0A56 D0 02              4919 	pop	ar2
                    0A58   4920 	C$lcd.c$331$3$3 ==.
                           4921 ;	lcd.c:331: temp_char = fetch_number(base);
                           4922 ;	genCall
   0A58 8A 82              4923 	mov	dpl,r2
   0A5A C0 02              4924 	push	ar2
   0A5C C0 04              4925 	push	ar4
   0A5E C0 05              4926 	push	ar5
   0A60 C0 06              4927 	push	ar6
   0A62 12s00r00           4928 	lcall	_fetch_number
   0A65 AB 82              4929 	mov	r3,dpl
   0A67 AF 83              4930 	mov	r7,dph
   0A69 D0 06              4931 	pop	ar6
   0A6B D0 05              4932 	pop	ar5
   0A6D D0 04              4933 	pop	ar4
   0A6F D0 02              4934 	pop	ar2
                           4935 ;	genCast
                    0A71   4936 	C$lcd.c$332$3$3 ==.
                           4937 ;	lcd.c:332: temp_char |= (character_row_number<<5);
                           4938 ;	genLeftShift
                           4939 ;	genLeftShiftLiteral
                           4940 ;	genlshOne
   0A71 EE                 4941 	mov	a,r6
   0A72 C4                 4942 	swap	a
   0A73 23                 4943 	rl	a
   0A74 54 E0              4944 	anl	a,#0xe0
                           4945 ;	genOr
   0A76 FF                 4946 	mov	r7,a
                           4947 ;	Peephole 105	removed redundant mov
   0A77 42 03              4948 	orl	ar3,a
                    0A79   4949 	C$lcd.c$333$3$3 ==.
                           4950 ;	lcd.c:333: custom_character_address = lcd_cgram_address_mask|(character_number<<3)|character_row_number;
                           4951 ;	genOr
   0A79 EE                 4952 	mov	a,r6
   0A7A 4D                 4953 	orl	a,r5
                    0A7B   4954 	C$lcd.c$334$3$3 ==.
                           4955 ;	lcd.c:334: custom_character_address &= lcd_cgram_address_mask_2;
                           4956 ;	genAnd
   0A7B 54 7F              4957 	anl	a,#0x7F
                    0A7D   4958 	C$lcd.c$335$3$3 ==.
                           4959 ;	lcd.c:335: lcd_command_write(custom_character_address);
                           4960 ;	genCall
   0A7D FF                 4961 	mov	r7,a
                           4962 ;	Peephole 244.c	loading dpl from a instead of r7
   0A7E F5 82              4963 	mov	dpl,a
   0A80 C0 02              4964 	push	ar2
   0A82 C0 03              4965 	push	ar3
   0A84 C0 04              4966 	push	ar4
   0A86 C0 05              4967 	push	ar5
   0A88 C0 06              4968 	push	ar6
   0A8A 12s07r6F           4969 	lcall	_lcd_command_write
   0A8D D0 06              4970 	pop	ar6
   0A8F D0 05              4971 	pop	ar5
   0A91 D0 04              4972 	pop	ar4
   0A93 D0 03              4973 	pop	ar3
   0A95 D0 02              4974 	pop	ar2
                    0A97   4975 	C$lcd.c$336$3$3 ==.
                           4976 ;	lcd.c:336: lcd_put_ch(temp_char);
                           4977 ;	genCall
   0A97 8B 82              4978 	mov	dpl,r3
   0A99 C0 02              4979 	push	ar2
   0A9B C0 03              4980 	push	ar3
   0A9D C0 04              4981 	push	ar4
   0A9F C0 05              4982 	push	ar5
   0AA1 C0 06              4983 	push	ar6
   0AA3 12s07r87           4984 	lcall	_lcd_put_ch
   0AA6 D0 06              4985 	pop	ar6
   0AA8 D0 05              4986 	pop	ar5
   0AAA D0 04              4987 	pop	ar4
   0AAC D0 03              4988 	pop	ar3
   0AAE D0 02              4989 	pop	ar2
                    0AB0   4990 	C$lcd.c$327$2$2 ==.
                           4991 ;	lcd.c:327: for(character_row_number=0;character_row_number<8;character_row_number++)
                           4992 ;	genPlus
                           4993 ;     genPlusIncr
   0AB0 0E                 4994 	inc	r6
                           4995 ;	genIpop
   0AB1 D0 03              4996 	pop	ar3
   0AB3 02s0Ar0E           4997 	ljmp	00101$
   0AB6                    4998 00104$:
                    0AB6   4999 	C$lcd.c$338$2$2 ==.
                           5000 ;	lcd.c:338: lcd_go_to_x_y(0,character_number);
                           5001 ;	genAssign
   0AB6 90s00r4F           5002 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0AB9 EC                 5003 	mov	a,r4
   0ABA F0                 5004 	movx	@dptr,a
                           5005 ;	genCall
   0ABB 75 82 00           5006 	mov	dpl,#0x00
   0ABE C0 02              5007 	push	ar2
   0AC0 C0 03              5008 	push	ar3
   0AC2 C0 04              5009 	push	ar4
   0AC4 12s05rA5           5010 	lcall	_lcd_go_to_x_y
   0AC7 D0 04              5011 	pop	ar4
   0AC9 D0 03              5012 	pop	ar3
   0ACB D0 02              5013 	pop	ar2
                    0ACD   5014 	C$lcd.c$339$2$2 ==.
                           5015 ;	lcd.c:339: lcd_put_ch(character_number);
                           5016 ;	genCall
   0ACD 8C 82              5017 	mov	dpl,r4
   0ACF C0 02              5018 	push	ar2
   0AD1 C0 03              5019 	push	ar3
   0AD3 C0 04              5020 	push	ar4
   0AD5 12s07r87           5021 	lcall	_lcd_put_ch
   0AD8 D0 04              5022 	pop	ar4
   0ADA D0 03              5023 	pop	ar3
   0ADC D0 02              5024 	pop	ar2
                    0ADE   5025 	C$lcd.c$323$1$1 ==.
                           5026 ;	lcd.c:323: for(character_number=0;character_number<number_of_custom_characters;character_number++)
                           5027 ;	genPlus
                           5028 ;     genPlusIncr
   0ADE 0C                 5029 	inc	r4
   0ADF 02s09rC5           5030 	ljmp	00105$
   0AE2                    5031 00108$:
                    0AE2   5032 	C$lcd.c$341$1$1 ==.
                           5033 ;	lcd.c:341: return;
                           5034 ;	genRet
                           5035 ;	Peephole 300	removed redundant label 00109$
                    0AE2   5036 	C$lcd.c$342$1$1 ==.
                    0AE2   5037 	XG$lcd_custom_character_creation$0$0 ==.
   0AE2 22                 5038 	ret
                           5039 ;------------------------------------------------------------
                           5040 ;Allocation info for local variables in function 'lcd_cu_boulder'
                           5041 ;------------------------------------------------------------
                           5042 ;sloc0                     Allocated with name '_lcd_cu_boulder_sloc0_1_0'
                           5043 ;sloc1                     Allocated with name '_lcd_cu_boulder_sloc1_1_0'
                           5044 ;cu_boulder_array          Allocated with name '_lcd_cu_boulder_cu_boulder_array_1_1'
                           5045 ;array_counter             Allocated with name '_lcd_cu_boulder_array_counter_1_1'
                           5046 ;lcd_row                   Allocated with name '_lcd_cu_boulder_lcd_row_1_1'
                           5047 ;lcd_column                Allocated with name '_lcd_cu_boulder_lcd_column_1_1'
                           5048 ;character_row_number      Allocated with name '_lcd_cu_boulder_character_row_number_1_1'
                           5049 ;character_number          Allocated with name '_lcd_cu_boulder_character_number_1_1'
                           5050 ;temp_char                 Allocated with name '_lcd_cu_boulder_temp_char_1_1'
                           5051 ;custom_character_address  Allocated with name '_lcd_cu_boulder_custom_character_address_1_1'
                           5052 ;base                      Allocated with name '_lcd_cu_boulder_base_1_1'
                           5053 ;------------------------------------------------------------
                    0AE3   5054 	G$lcd_cu_boulder$0$0 ==.
                    0AE3   5055 	C$lcd.c$348$1$1 ==.
                           5056 ;	lcd.c:348: void lcd_cu_boulder(void)
                           5057 ;	-----------------------------------------
                           5058 ;	 function lcd_cu_boulder
                           5059 ;	-----------------------------------------
   0AE3                    5060 _lcd_cu_boulder:
                    0AE3   5061 	C$lcd.c$577$1$1 ==.
                           5062 ;	lcd.c:577: lcd_command_write(lcd_cursor_off);
                           5063 ;	genCall
   0AE3 75 82 0C           5064 	mov	dpl,#0x0C
   0AE6 12s07r6F           5065 	lcall	_lcd_command_write
                    0AE9   5066 	C$lcd.c$578$1$1 ==.
                           5067 ;	lcd.c:578: loop = 1;
                           5068 ;	genAssign
   0AE9 90s00r00           5069 	mov	dptr,#_loop
   0AEC 74 01              5070 	mov	a,#0x01
   0AEE F0                 5071 	movx	@dptr,a
                    0AEF   5072 	C$lcd.c$579$1$1 ==.
                           5073 ;	lcd.c:579: while(loop)
   0AEF                    5074 00101$:
                           5075 ;	genAssign
   0AEF 90s00r00           5076 	mov	dptr,#_loop
   0AF2 E0                 5077 	movx	a,@dptr
                           5078 ;	genIfx
   0AF3 FA                 5079 	mov	r2,a
                           5080 ;	Peephole 105	removed redundant mov
                           5081 ;	genIfxJump
   0AF4 70 01              5082 	jnz	00128$
                           5083 ;	Peephole 251.a	replaced ljmp to ret with ret
   0AF6 22                 5084 	ret
   0AF7                    5085 00128$:
                    0AF7   5086 	C$lcd.c$581$2$2 ==.
                           5087 ;	lcd.c:581: array_counter=0;
                           5088 ;	genAssign
   0AF7 90s01r9B           5089 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0AFA E4                 5090 	clr	a
   0AFB F0                 5091 	movx	@dptr,a
   0AFC A3                 5092 	inc	dptr
   0AFD F0                 5093 	movx	@dptr,a
   0AFE A3                 5094 	inc	dptr
   0AFF F0                 5095 	movx	@dptr,a
   0B00 A3                 5096 	inc	dptr
   0B01 F0                 5097 	movx	@dptr,a
                    0B02   5098 	C$lcd.c$582$1$1 ==.
                           5099 ;	lcd.c:582: for(lcd_row=0;lcd_row<4;lcd_row++)
                           5100 ;	genAssign
   0B02 75*07 00           5101 	mov	_lcd_cu_boulder_sloc1_1_0,#0x00
   0B05                    5102 00112$:
                           5103 ;	genCmpLt
                           5104 ;	genCmp
                           5105 ;	genIfxJump
                           5106 ;	Peephole 108.a	removed ljmp by inverse jump logic
                           5107 ;	Peephole 132.e	optimized genCmpLt by inverse logic (carry differs)
   0B05 74 FC              5108 	mov	a,#0x100 - 0x04
   0B07 25*07              5109 	add	a,_lcd_cu_boulder_sloc1_1_0
   0B09 40 E4              5110 	jc	00101$
                           5111 ;	Peephole 300	removed redundant label 00129$
                    0B0B   5112 	C$lcd.c$584$3$3 ==.
                           5113 ;	lcd.c:584: ms_delay(1);
                           5114 ;	genCall
                           5115 ;	Peephole 3.a	changed mov to clr
                           5116 ;	Peephole 3.b	changed mov to clr
                           5117 ;	Peephole 182.d	used 16 bit load of dptr
   0B0B 90 00 01           5118 	mov	dptr,#(0x01&0x00ff)
   0B0E E4                 5119 	clr	a
   0B0F F5 F0              5120 	mov	b,a
   0B11 12s00r00           5121 	lcall	_ms_delay
                    0B14   5122 	C$lcd.c$585$3$3 ==.
                           5123 ;	lcd.c:585: lcd_clear();
                           5124 ;	genCall
   0B14 12s08r4C           5125 	lcall	_lcd_clear
                    0B17   5126 	C$lcd.c$586$4$4 ==.
                           5127 ;	lcd.c:586: for(character_number=0;character_number<cu_boulder_logo_width;character_number++)
                           5128 ;	genAssign
   0B17 AB*07              5129 	mov	r3,_lcd_cu_boulder_sloc1_1_0
                           5130 ;	genAssign
   0B19 7C 00              5131 	mov	r4,#0x00
   0B1B                    5132 00108$:
                           5133 ;	genCmpLt
                           5134 ;	genCmp
   0B1B BC 07 00           5135 	cjne	r4,#0x07,00130$
   0B1E                    5136 00130$:
                           5137 ;	genIfxJump
   0B1E 40 03              5138 	jc	00131$
   0B20 02s0Cr1A           5139 	ljmp	00114$
   0B23                    5140 00131$:
                    0B23   5141 	C$lcd.c$588$5$5 ==.
                           5142 ;	lcd.c:588: for(character_row_number=0;character_row_number<8;character_row_number++)
                           5143 ;	genLeftShift
                           5144 ;	genLeftShiftLiteral
                           5145 ;	genlshOne
   0B23 EC                 5146 	mov	a,r4
   0B24 C4                 5147 	swap	a
   0B25 03                 5148 	rr	a
   0B26 54 F8              5149 	anl	a,#0xf8
   0B28 FD                 5150 	mov	r5,a
                           5151 ;	genOr
   0B29 43 05 40           5152 	orl	ar5,#0x40
                           5153 ;	genAssign
   0B2C 90s01r9B           5154 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0B2F E0                 5155 	movx	a,@dptr
   0B30 FE                 5156 	mov	r6,a
   0B31 A3                 5157 	inc	dptr
   0B32 E0                 5158 	movx	a,@dptr
   0B33 FF                 5159 	mov	r7,a
   0B34 A3                 5160 	inc	dptr
   0B35 E0                 5161 	movx	a,@dptr
   0B36 F8                 5162 	mov	r0,a
   0B37 A3                 5163 	inc	dptr
   0B38 E0                 5164 	movx	a,@dptr
   0B39 F9                 5165 	mov	r1,a
                           5166 ;	genAssign
   0B3A 75*06 00           5167 	mov	_lcd_cu_boulder_sloc0_1_0,#0x00
   0B3D                    5168 00104$:
                           5169 ;	genCmpLt
                           5170 ;	genCmp
                           5171 ;	genIfxJump
                           5172 ;	Peephole 132.f	optimized genCmpLt by inverse logic (carry differs)
   0B3D 74 F8              5173 	mov	a,#0x100 - 0x08
   0B3F 25*06              5174 	add	a,_lcd_cu_boulder_sloc0_1_0
   0B41 50 03              5175 	jnc	00132$
   0B43 02s0BrD5           5176 	ljmp	00126$
   0B46                    5177 00132$:
                    0B46   5178 	C$lcd.c$590$1$1 ==.
                           5179 ;	lcd.c:590: temp_char = cu_boulder_array[array_counter];
                           5180 ;	genIpush
   0B46 C0 03              5181 	push	ar3
                           5182 ;	genPlus
                           5183 ;	Peephole 236.g	used r6 instead of ar6
   0B48 EE                 5184 	mov	a,r6
   0B49 24rBB              5185 	add	a,#_lcd_cu_boulder_cu_boulder_array_1_1
   0B4B F5 82              5186 	mov	dpl,a
                           5187 ;	Peephole 236.g	used r7 instead of ar7
   0B4D EF                 5188 	mov	a,r7
   0B4E 34s00              5189 	addc	a,#(_lcd_cu_boulder_cu_boulder_array_1_1 >> 8)
   0B50 F5 83              5190 	mov	dph,a
                           5191 ;	genPointerGet
                           5192 ;	genFarPointerGet
   0B52 E0                 5193 	movx	a,@dptr
                           5194 ;	genAssign
   0B53 FB                 5195 	mov	r3,a
   0B54 90s01r9F           5196 	mov	dptr,#_lcd_cu_boulder_temp_char_1_1
                           5197 ;	Peephole 100	removed redundant mov
   0B57 F0                 5198 	movx	@dptr,a
                    0B58   5199 	C$lcd.c$591$5$5 ==.
                           5200 ;	lcd.c:591: array_counter++;
                           5201 ;	genPlus
                           5202 ;     genPlusIncr
   0B58 0E                 5203 	inc	r6
   0B59 BE 00 09           5204 	cjne	r6,#0x00,00133$
   0B5C 0F                 5205 	inc	r7
   0B5D BF 00 05           5206 	cjne	r7,#0x00,00133$
   0B60 08                 5207 	inc	r0
   0B61 B8 00 01           5208 	cjne	r0,#0x00,00133$
   0B64 09                 5209 	inc	r1
   0B65                    5210 00133$:
                           5211 ;	genAssign
   0B65 90s01r9B           5212 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0B68 EE                 5213 	mov	a,r6
   0B69 F0                 5214 	movx	@dptr,a
   0B6A A3                 5215 	inc	dptr
   0B6B EF                 5216 	mov	a,r7
   0B6C F0                 5217 	movx	@dptr,a
   0B6D A3                 5218 	inc	dptr
   0B6E E8                 5219 	mov	a,r0
   0B6F F0                 5220 	movx	@dptr,a
   0B70 A3                 5221 	inc	dptr
   0B71 E9                 5222 	mov	a,r1
   0B72 F0                 5223 	movx	@dptr,a
                    0B73   5224 	C$lcd.c$592$5$5 ==.
                           5225 ;	lcd.c:592: temp_char |= (character_row_number<<5);
                           5226 ;	genLeftShift
                           5227 ;	genLeftShiftLiteral
                           5228 ;	genlshOne
   0B73 E5*06              5229 	mov	a,_lcd_cu_boulder_sloc0_1_0
   0B75 C4                 5230 	swap	a
   0B76 23                 5231 	rl	a
   0B77 54 E0              5232 	anl	a,#0xe0
   0B79 FB                 5233 	mov	r3,a
                           5234 ;	genAssign
                           5235 ;	genOr
   0B7A 90s01r9F           5236 	mov	dptr,#_lcd_cu_boulder_temp_char_1_1
   0B7D E0                 5237 	movx	a,@dptr
   0B7E FA                 5238 	mov	r2,a
                           5239 ;	Peephole 248.a	optimized or to xdata
   0B7F 4B                 5240 	orl	a,r3
   0B80 F0                 5241 	movx	@dptr,a
                    0B81   5242 	C$lcd.c$593$5$5 ==.
                           5243 ;	lcd.c:593: custom_character_address = lcd_cgram_address_mask|(character_number<<3)|character_row_number;
                           5244 ;	genOr
   0B81 E5*06              5245 	mov	a,_lcd_cu_boulder_sloc0_1_0
   0B83 4D                 5246 	orl	a,r5
                    0B84   5247 	C$lcd.c$594$5$5 ==.
                           5248 ;	lcd.c:594: custom_character_address &= lcd_cgram_address_mask_2;
                           5249 ;	genAnd
   0B84 54 7F              5250 	anl	a,#0x7F
                    0B86   5251 	C$lcd.c$595$5$5 ==.
                           5252 ;	lcd.c:595: lcd_command_write(custom_character_address);
                           5253 ;	genCall
   0B86 FA                 5254 	mov	r2,a
                           5255 ;	Peephole 244.c	loading dpl from a instead of r2
   0B87 F5 82              5256 	mov	dpl,a
   0B89 C0 03              5257 	push	ar3
   0B8B C0 04              5258 	push	ar4
   0B8D C0 05              5259 	push	ar5
   0B8F C0 06              5260 	push	ar6
   0B91 C0 07              5261 	push	ar7
   0B93 C0 00              5262 	push	ar0
   0B95 C0 01              5263 	push	ar1
   0B97 12s07r6F           5264 	lcall	_lcd_command_write
   0B9A D0 01              5265 	pop	ar1
   0B9C D0 00              5266 	pop	ar0
   0B9E D0 07              5267 	pop	ar7
   0BA0 D0 06              5268 	pop	ar6
   0BA2 D0 05              5269 	pop	ar5
   0BA4 D0 04              5270 	pop	ar4
   0BA6 D0 03              5271 	pop	ar3
                    0BA8   5272 	C$lcd.c$596$5$5 ==.
                           5273 ;	lcd.c:596: lcd_put_ch(temp_char);
                           5274 ;	genAssign
   0BA8 90s01r9F           5275 	mov	dptr,#_lcd_cu_boulder_temp_char_1_1
   0BAB E0                 5276 	movx	a,@dptr
                           5277 ;	genCall
   0BAC FA                 5278 	mov	r2,a
                           5279 ;	Peephole 244.c	loading dpl from a instead of r2
   0BAD F5 82              5280 	mov	dpl,a
   0BAF C0 03              5281 	push	ar3
   0BB1 C0 04              5282 	push	ar4
   0BB3 C0 05              5283 	push	ar5
   0BB5 C0 06              5284 	push	ar6
   0BB7 C0 07              5285 	push	ar7
   0BB9 C0 00              5286 	push	ar0
   0BBB C0 01              5287 	push	ar1
   0BBD 12s07r87           5288 	lcall	_lcd_put_ch
   0BC0 D0 01              5289 	pop	ar1
   0BC2 D0 00              5290 	pop	ar0
   0BC4 D0 07              5291 	pop	ar7
   0BC6 D0 06              5292 	pop	ar6
   0BC8 D0 05              5293 	pop	ar5
   0BCA D0 04              5294 	pop	ar4
   0BCC D0 03              5295 	pop	ar3
                    0BCE   5296 	C$lcd.c$588$4$4 ==.
                           5297 ;	lcd.c:588: for(character_row_number=0;character_row_number<8;character_row_number++)
                           5298 ;	genPlus
                           5299 ;     genPlusIncr
   0BCE 05*06              5300 	inc	_lcd_cu_boulder_sloc0_1_0
                           5301 ;	genIpop
   0BD0 D0 03              5302 	pop	ar3
   0BD2 02s0Br3D           5303 	ljmp	00104$
   0BD5                    5304 00126$:
                           5305 ;	genAssign
   0BD5 90s01r9B           5306 	mov	dptr,#_lcd_cu_boulder_array_counter_1_1
   0BD8 EE                 5307 	mov	a,r6
   0BD9 F0                 5308 	movx	@dptr,a
   0BDA A3                 5309 	inc	dptr
   0BDB EF                 5310 	mov	a,r7
   0BDC F0                 5311 	movx	@dptr,a
   0BDD A3                 5312 	inc	dptr
   0BDE E8                 5313 	mov	a,r0
   0BDF F0                 5314 	movx	@dptr,a
   0BE0 A3                 5315 	inc	dptr
   0BE1 E9                 5316 	mov	a,r1
   0BE2 F0                 5317 	movx	@dptr,a
                    0BE3   5318 	C$lcd.c$598$4$4 ==.
                           5319 ;	lcd.c:598: lcd_go_to_x_y(lcd_row,character_number);
                           5320 ;	genAssign
   0BE3 90s00r4F           5321 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0BE6 EC                 5322 	mov	a,r4
   0BE7 F0                 5323 	movx	@dptr,a
                           5324 ;	genCall
   0BE8 8B 82              5325 	mov	dpl,r3
   0BEA C0 03              5326 	push	ar3
   0BEC C0 04              5327 	push	ar4
   0BEE 12s05rA5           5328 	lcall	_lcd_go_to_x_y
   0BF1 D0 04              5329 	pop	ar4
   0BF3 D0 03              5330 	pop	ar3
                    0BF5   5331 	C$lcd.c$599$4$4 ==.
                           5332 ;	lcd.c:599: lcd_put_ch(character_number);
                           5333 ;	genCall
   0BF5 8C 82              5334 	mov	dpl,r4
   0BF7 C0 03              5335 	push	ar3
   0BF9 C0 04              5336 	push	ar4
   0BFB 12s07r87           5337 	lcall	_lcd_put_ch
   0BFE D0 04              5338 	pop	ar4
   0C00 D0 03              5339 	pop	ar3
                    0C02   5340 	C$lcd.c$600$4$4 ==.
                           5341 ;	lcd.c:600: lcd_go_to_x_y(0,10);
                           5342 ;	genAssign
   0C02 90s00r4F           5343 	mov	dptr,#_lcd_go_to_x_y_PARM_2
   0C05 74 0A              5344 	mov	a,#0x0A
   0C07 F0                 5345 	movx	@dptr,a
                           5346 ;	genCall
   0C08 75 82 00           5347 	mov	dpl,#0x00
   0C0B C0 03              5348 	push	ar3
   0C0D C0 04              5349 	push	ar4
   0C0F 12s05rA5           5350 	lcall	_lcd_go_to_x_y
   0C12 D0 04              5351 	pop	ar4
   0C14 D0 03              5352 	pop	ar3
                    0C16   5353 	C$lcd.c$586$3$3 ==.
                           5354 ;	lcd.c:586: for(character_number=0;character_number<cu_boulder_logo_width;character_number++)
                           5355 ;	genPlus
                           5356 ;     genPlusIncr
   0C16 0C                 5357 	inc	r4
   0C17 02s0Br1B           5358 	ljmp	00108$
   0C1A                    5359 00114$:
                    0C1A   5360 	C$lcd.c$582$2$2 ==.
                           5361 ;	lcd.c:582: for(lcd_row=0;lcd_row<4;lcd_row++)
                           5362 ;	genPlus
                           5363 ;     genPlusIncr
   0C1A 05*07              5364 	inc	_lcd_cu_boulder_sloc1_1_0
                    0C1C   5365 	C$lcd.c$604$1$1 ==.
                    0C1C   5366 	XG$lcd_cu_boulder$0$0 ==.
   0C1C 02s0Br05           5367 	ljmp	00112$
                           5368 ;	Peephole 259.b	removed redundant label 00116$ and ret
                           5369 ;
                           5370 	.area CSEG    (CODE)
                           5371 	.area CONST   (CODE)
                           5372 	.area XINIT   (CODE)
